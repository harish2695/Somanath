{"version":3,"sources":["../node_modules/@mui/icons-material/Preview.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Videocam.js","app/components/SessionModal/SessionModal.js","app/services/counselorService.js","app/components/UsersCustomTable/UsersCustomTable.jsx","app/constants/data.js","../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","app/components/SearchAutoComplete/SearchAutoComplete.js","app/components/SearchFilter/SearchFilter.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","app/views/adminView/counsellor/list/CounsellorLists.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","_status","UsersCustomTable","props","user","useAuth","CustomHeadCell","meta","entries","index","key","push","align","className","showDisableBtn","role","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","marginLeft","center_name","owned_by","handleOpen","deviceID","showBtn","flexDirection","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","scope","overflow","minWidth","size","rowsPerPage","slice","map","i","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","tabsData","admin","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","label","placeholder","items","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","phone_number","address","validators","errorMessages","validationRules","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","appendOwnerState","elementType","existingProps","ownerState","isHostComponent","_extends","shouldSpreadAdditionalProps","Slot","SearchAutoComplete","onChange","selectValue","handleSelect","Autocomplete","disablePortal","event","newValue","inputValue","onInputChange","newInputValue","renderInput","TextField","fullWidth","SearchFilter","searchValue","handleSearch","multipleFilters","filterValue","handleFilter","autoCompleteValue","handleAutoComplete","handleReset","renderContent","el","FormControl","autoFocus","InputProps","startAdornment","Box","InputLabel","padding","Select","item","k","MenuItem","val","Grid","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","alignSelf","usePreviousProps","ref","React","current","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","children","components","componentsProps","max","maxProp","showZero","other","_objectWithoutPropertiesLoose","badgeContentProp","invisible","invisibleProp","prevProps","displayValue","Number","useBadge","classes","slots","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","Badge","badgeProps","_jsxs","clsx","_jsx","getBadgeUtilityClass","badgeClasses","BadgeRoot","overridesResolver","styles","verticalAlign","flexShrink","BadgeBadge","capitalize","anchorOrigin","vertical","horizontal","overlap","theme","flexWrap","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","vars","palette","main","contrastText","RADIUS_DOT","right","transformOrigin","bottom","leavingScreen","inProps","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","useThemeProps","anchorOriginProp","overlapProp","colorProp","variantProp","as","CounsellorLists","useState","loading","setLoading","counsellorData","setCounsellorData","setSearchData","searchResult","setSearchResult","setInputValue","centerValues","setCenterValues","setSelectValue","setPageDetails","searchFilters","openModal","setOpenModal","msg","setMsg","getMetaData","pagination","getAllCounsellors","pageNumber","getCounsellorList","error","formatCounsellor","getCenterList","sortCounsellors","pageNo","useEffect","getDefaultCenters","fetchSearchCenter","res","obj","attributes","fetchDefaultCenters","getTraumaCodes","trauma_code","join","getSessionHours","totalMins","reduce","acc","formatTime","response","forEach","counsellorId","firstName","lastName","traumaCodes","traumas","centerCount","centers","clients","sessions","sessionHours","sessionsHours","searchCounsellors","routeSegments","target","newPage","searchCounsellor"],"mappings":"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","file":"static/js/20.9e6fc866.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"\n}), 'Videocam');\n\nexports.default = _default;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.\n * @param existingProps Props of the element.\n * @param ownerState\n */\n\nexport default function appendOwnerState(elementType, existingProps = {}, ownerState) {\n  if (isHostComponent(elementType)) {\n    return existingProps;\n  }\n\n  return _extends({}, existingProps, {\n    ownerState: _extends({}, existingProps.ownerState, ownerState)\n  });\n}","import { isHostComponent } from '@mui/base';\n\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\n\nexport default shouldSpreadAdditionalProps;","import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport './SearchAutoComplete.css';\n\nconst SearchAutoComplete = ({ name, label, value, onChange, options, selectValue, handleSelect }) => {\n\n\n    return (\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={options}\n            name={name}\n            value={selectValue}\n            onChange={(event, newValue) => {\n                handleSelect(newValue);\n            }}\n            inputValue={value}\n            onInputChange={(event, newInputValue) => {\n                onChange(newInputValue);\n            }}\n            renderInput={(params) => (\n            <TextField \n                {...params}\n                fullWidth \n                label={label} \n            />\n        )}\n        />\n    );\n}\n\nexport default SearchAutoComplete;","import React from 'react';\nimport {\n    Grid,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchAutoComplete from 'app/components/SearchAutoComplete/SearchAutoComplete';\n\nconst SearchFilter = ({ data, searchValue, handleSearch, multipleFilters, filterValue, handleFilter, autoCompleteValue, handleAutoComplete, options, selectValue, handleSelect, handleReset }) => {\n    \n    const renderContent = (el) => {\n        let content = null;\n        if(el.type === 'search') {\n            content = (\n                <FormControl fullWidth>\n                    <TextField\n                        autoFocus\n                        label={el.label}\n                        variant=\"outlined\"\n                        onChange={handleSearch}\n                        value={searchValue}\n                        name={el.name}\n                        placeholder={el.placeholder}\n                        type=\"text\"\n                        fullWidth\n                        InputProps={{\n                            startAdornment: <SearchIcon />,\n                        }}\n                    />\n                </FormControl>\n            );\n        } else if(el.type === 'filter') {\n            content = (\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>{el.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={multipleFilters ? filterValue[el.name] : filterValue}\n                            label={el.label}\n                            name={el.name}\n                            onChange={handleFilter}\n                        >\n                            {el.items.map((item, k) => (\n                                <MenuItem key={k} value={item.value}>{item.name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )\n        } else if(el.type === 'searchAutoComplete') {\n            content = (\n                <SearchAutoComplete\n                    name={el.name}\n                    label={el.label}\n                    value={autoCompleteValue}\n                    onChange={(val) => handleAutoComplete(val)}\n                    options={options}\n                    selectValue={selectValue}\n                    handleSelect={(val) => handleSelect(val)}\n                />\n            );\n        }\n\n        return content;\n    }\n    \n    return (\n        <>\n        <Grid sx={{ marginBottom: '20px'}} container rowSpacing={3} columnSpacing={6}>\n            {data.map((el, i) => (\n                <Grid item key={i} lg={6} md={6} sm={12} xs={12}>\n                    {renderContent(el)}\n                </Grid>\n            ))}\n        </Grid>\n        <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n            <Button\n                color=\"primary\"\n                variant='contained'\n                onClick={handleReset}\n                sx={{ alignSelf: 'flex-end'}}\n            >\n                Reset\n            </Button>\n        </FormControl>\n        </>\n    );\n}\n\nexport default SearchFilter;","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import React, { useState, useEffect } from \"react\";\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport { Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    FormControl\n} from '@mui/material';\nimport { \n    getCounsellorList, \n    searchCounsellor, \n    fetchSearchCenter ,\n    fetchDefaultCenters\n} from 'app/services/userService';\nimport { findCounsellors } from \"app/services/counselorService\";\nimport { tabsData } from 'app/constants/data';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\nimport { Breadcrumb, SearchInput } from \"app/components\";\nimport './CounsellorLists.css'\nimport { formatTime } from \"app/utils/utils\";\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst setFilters = () => {\n    let arr = [];\n    arr = tabsData['counsellorListing'];\n    return arr;\n}\n\nconst CounsellorLists = () => {\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false)\n    const [counsellorData, setCounsellorData] = useState([])\n    const [searchData, setSearchData] = useState('');\n    const [searchResult, setSearchResult] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [centerValues, setCenterValues] = useState([]);\n    const [selectValue, setSelectValue] = useState(null);\n    const [pageDetails, setPageDetails] = useState({});\n    const [searchFilters, setSearchFilters] = useState(() => setFilters());\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState(''); \n    const page = 1;\n\n    useEffect(() => {\n        getAllCounsellors(page);\n        getDefaultCenters();\n    }, [])\n\n    function getMetaData(data) {\n        return data.pagination\n    }\n\n    function getAllCounsellors(pageNumber){\n        setLoading(true);\n        getCounsellorList(pageNumber)\n        .then(resp => {\n            if(resp){\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    setCounsellorData(formatCounsellor(resp.data));\n                    getCenterList('');\n                    setPageDetails(getMetaData(resp.meta));\n                }\n                setLoading(false);\n            }\n        }).catch(err => {\n            setLoading(false);\n        })\n    }\n\n    function sortCounsellors(search, pageNo, centerName){\n        setLoading(true);\n        let options = {\n            search,\n            page: pageNo,\n            centerName: (centerName ? centerName : null)\n        };\n\n        findCounsellors(options)\n        .then(resp => {\n            if(resp) {\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    setCounsellorData(formatCounsellor(resp.data));\n                    getCenterList('');\n                    setPageDetails(getMetaData(resp.meta));\n                }\n                setLoading(false);\n            }\n        }).catch(err => {\n            setLoading(false);\n        })\n    }\n\n    const getCenterList = (data) => {\n        fetchSearchCenter(data)\n            .then((res) => {\n                if(res?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    if (res.data) {\n                        let data = []\n                        res.data.map((item) => {\n                            const obj = {\n                                id: item.id,\n                                label: item.attributes?.name\n                            }\n                            data.push(obj)\n                        })\n                        setCenterValues(data)\n                    }\n                }\n\n            }).catch(err => console.log(err))\n    }\n\n    function getDefaultCenters(){\n        fetchDefaultCenters()\n        .then((res) => {\n            if (res.data) {\n                let data = []\n                res.data.map((item) => {\n                    const obj = {\n                        id: item.id,\n                        label: item.attributes?.name\n                    }\n                    data.push(obj)\n                })\n                setCenterValues(data.slice(0, 5));\n            }\n\n        }).catch(err => console.log(err))\n    }\n\n\n    const handlePageChange = (event, newPage) => {\n        console.log('newPage', newPage);\n        if(searchResult){\n            searchCounsellor(searchData, Number(newPage) + 1);\n        } else {\n            if(selectValue) {\n                sortCounsellors(searchData, Number(newPage) + 1, selectValue.label);\n            } else {\n                getAllCounsellors(Number(newPage) + 1);\n            }\n        }\n    }\n\n    const onClick = (id) => {\n        navigate(`/counsellors/details/${id}`, { id: id })\n    }\n    \n    function getTraumaCodes(data) {\n        let traumaCode = ''\n        const code = data.map((item) => {\n            return item.attributes && item.attributes.trauma_code;\n        })\n        traumaCode = code.join(', ')\n        return traumaCode;\n    }\n\n    function getSessionHours(length, data) {\n        let totalMins = 0\n        if (length == 1) {\n            totalMins = data[0].attributes.duration + ' mins'\n            // totalHours = totalMins / 60\n            return totalMins;\n        }\n        totalMins = data.reduce(function (acc, item) {\n            return acc + item.attributes && item.attributes.duration;\n        }, 0);\n        return formatTime(totalMins)\n        // return totalHours\n    }\n\n    function formatCounsellor(data) {\n        let response = []\n        const meta = {\n            counsellor_user_id: \"ID\",\n            counsellorId: \" Provider ID\",\n            name: \"Full Name\",\n            firstName: \"First Name\",\n            lastName: \"Last Name\",\n            traumaCodes: \"Trauma Codes\",\n            centers: \"Centers\",\n            clients: \"Clients\",\n            sessions: \"Sessions\",\n            sessionsHours: \"Sessions Hours\",\n\n        }\n        console.log(data)\n        data.forEach((item) => {\n\n            let obj = {\n                counsellor_user_id: item?.id,\n                counsellorId: item?.attributes && item.attributes?.user && item.attributes.user?.data && item.attributes.user.data?.attributes && item.attributes.user.data.attributes.username || '-',\n                name: item?.attributes && item.attributes.name || '-',\n                firstName: item?.attributes && item.attributes.first_name || '',\n                lastName: item?.attributes && item.attributes.last_name || '',\n                traumaCodes: item?.attributes && item.attributes?.traumas && item.attributes.traumas?.data && getTraumaCodes(item.attributes.traumas.data) || '',\n                centerCount: (\n                    item?.attributes && \n                    item.attributes?.centers && \n                    item.attributes.centers?.data && \n                    item.attributes.centers.data?.attributes && \n                    item.attributes.centers.data.attributes.count || 0\n                ),\n                clients: (\n                    item?.attributes && \n                    item.attributes?.clients && \n                    item.attributes.clients?.data && \n                    item.attributes.clients.data?.attributes && \n                    item.attributes.clients.data.attributes.count || 0\n                ),\n                sessions: item?.attributes && item.attributes?.sessions && item.attributes.sessions?.data  && item.attributes.sessions.data.length || 0,\n                sessionHours: (\n                    item?.attributes &&\n                    item.attributes?.sessions &&\n                    item.attributes.sessions?.data.length > 0 && \n                    getSessionHours(item.attributes.sessions?.data.length, item.attributes.sessions.data) || '-'\n                ),\n            }\n            response.push(obj)\n        })\n        response[\"meta\"] = meta\n        return response\n    }\n\n    const searchCounsellors = (data, pageNumber) => {\n        sortCounsellors(data, pageNumber, selectValue && selectValue.label); \n    }\n\n    const handleClearSearch = () => {\n        if(selectValue && selectValue.label) {\n            searchCounsellors('', page);\n        } else {\n            getAllCounsellors(page);\n        }\n    }\n\n    const handleSearch = ({ target: { value }}) => {\n        setSearchData(value);\n        if(value && value.length >= 1){\n            setSearchResult(true);\n            searchCounsellors(value, page);\n        } else if(value === \"\"){\n            handleClearSearch();\n            setSearchResult(false);\n        }\n    }\n\n    const handleAutoComplete = (value) => {\n        setInputValue(value);\n        if(value === ''){\n            setCenterValues([]);\n            setSelectValue(null);\n            getDefaultCenters();\n        } else {\n            getCenterList(value);\n        }\n    }\n\n    const handleSelect = (val) => {\n        setSelectValue(val);\n        if(val){\n            sortCounsellors(searchData, page, val.label);\n        } else {\n            sortCounsellors(searchData, page );\n        }\n    }\n\n    const handleReset = () => {\n        setSearchData('');\n        setInputValue('');\n        setSelectValue(null);\n        setSearchResult(false);\n        getAllCounsellors(page);\n        getDefaultCenters();\n    }\n\n\n    return (\n        <Grid container className=\"user-container\">\n            <Grid className='user-breadcrumb'>\n                <Breadcrumb\n                    routeSegments={[\n                        { name: \"All Providers\" }\n                    ]}\n                />\n            </Grid>\n            <Button\n                variant=\"contained\"\n                className=\"add-button\"\n                size=\"small\"\n                onClick={() => navigate('/counsellors/add')}\n            >\n                Add Provider\n            </Button>\n            <SearchFilter\n                data={searchFilters}\n                searchValue={searchData}\n                handleSearch={handleSearch}\n                multipleFilters={false}\n                autoCompleteValue={inputValue}\n                handleAutoComplete={(val) => handleAutoComplete(val)}\n                options={centerValues}\n                selectValue={selectValue}\n                handleSelect={(val) => handleSelect(val)}\n                handleReset={handleReset}\n            />\n            <Grid className='user-list'>\n                {!loading && counsellorData.meta && (\n                <UsersCustomTable\n                    page={page} \n                    pageDetails={pageDetails}\n                    handlePageChange={handlePageChange}\n                    rows={counsellorData} \n                    view={'counsellor'} \n                    onClick={onClick} \n                />\n            )}\n            </Grid>\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </Grid>\n    )\n}\n\nexport default CounsellorLists"],"sourceRoot":""}