{"version":3,"sources":["app/components/UsersCustomTable/UsersCustomTable.jsx","app/constants/data.js","app/components/SearchAutoComplete/SearchAutoComplete.js","app/components/SearchFilter/SearchFilter.js","app/utils/data.formater.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","app/views/center/ProviderList.jsx"],"names":["_status","UsersCustomTable","props","navigate","useNavigate","user","useAuth","CustomHeadCell","meta","data","entries","Object","index","key","value","push","width","variant","align","className","showDisableBtn","role","color","onClick","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","style","marginLeft","center_name","type","owned_by","handleOpen","deviceID","showBtn","display","flexDirection","justifyContent","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","component","scope","sx","overflow","minWidth","size","rowsPerPage","slice","page","map","i","border","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","id","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","tabsData","admin","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","label","placeholder","items","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","phone_number","address","validators","errorMessages","validationRules","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","SearchAutoComplete","onChange","options","selectValue","handleSelect","Autocomplete","disablePortal","event","newValue","inputValue","onInputChange","newInputValue","renderInput","params","TextField","fullWidth","SearchFilter","searchValue","handleSearch","multipleFilters","filterValue","handleFilter","autoCompleteValue","handleAutoComplete","handleReset","renderContent","el","FormControl","autoFocus","InputProps","startAdornment","Box","InputLabel","backgroundColor","padding","Select","item","k","MenuItem","val","Grid","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","Button","alignSelf","formatCenters","response","Array","isArray","forEach","formatData","phoneNumber","state","centerType","dateCreated","formatCounsellor","obj","toString","createdAt","moment","format","counsellorId","formatClient","client_id","age","gender_bio","gender_id","gender_identified","ethnicity","clientId","formatSession","counsellor_name","caseId","sessionId","duration","case_id","session_id","scheduled_at","formatTime","formatDetails","icon","toLowerCase","UserID","getName","verified","confirmed","date_created","console","log","center_type","fullName","profile","Context","React","TabContext","children","idPrefix","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","TabList","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","root","theme","spacing","TabPanel","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","ProviderList","counsellorData","useState","searchData","setSearchData","searchItems","setSearchItems","setRows","searchResult","setSearchResult","setPageDetails","handleBlur","target","filter","includes","newPage","skip","Number","arr"],"mappings":"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","file":"static/js/6.375e2f1a.chunk.js","sourcesContent":["import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport './SearchAutoComplete.css';\n\nconst SearchAutoComplete = ({ name, label, value, onChange, options, selectValue, handleSelect }) => {\n\n\n    return (\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={options}\n            name={name}\n            value={selectValue}\n            onChange={(event, newValue) => {\n                handleSelect(newValue);\n            }}\n            inputValue={value}\n            onInputChange={(event, newInputValue) => {\n                onChange(newInputValue);\n            }}\n            renderInput={(params) => (\n            <TextField \n                {...params}\n                fullWidth \n                label={label} \n            />\n        )}\n        />\n    );\n}\n\nexport default SearchAutoComplete;","import React from 'react';\nimport {\n    Grid,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchAutoComplete from 'app/components/SearchAutoComplete/SearchAutoComplete';\n\nconst SearchFilter = ({ data, searchValue, handleSearch, multipleFilters, filterValue, handleFilter, autoCompleteValue, handleAutoComplete, options, selectValue, handleSelect, handleReset }) => {\n    \n    const renderContent = (el) => {\n        let content = null;\n        if(el.type === 'search') {\n            content = (\n                <FormControl fullWidth>\n                    <TextField\n                        autoFocus\n                        label={el.label}\n                        variant=\"outlined\"\n                        onChange={handleSearch}\n                        value={searchValue}\n                        name={el.name}\n                        placeholder={el.placeholder}\n                        type=\"text\"\n                        fullWidth\n                        InputProps={{\n                            startAdornment: <SearchIcon />,\n                        }}\n                    />\n                </FormControl>\n            );\n        } else if(el.type === 'filter') {\n            content = (\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>{el.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={multipleFilters ? filterValue[el.name] : filterValue}\n                            label={el.label}\n                            name={el.name}\n                            onChange={handleFilter}\n                        >\n                            {el.items.map((item, k) => (\n                                <MenuItem key={k} value={item.value}>{item.name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )\n        } else if(el.type === 'searchAutoComplete') {\n            content = (\n                <SearchAutoComplete\n                    name={el.name}\n                    label={el.label}\n                    value={autoCompleteValue}\n                    onChange={(val) => handleAutoComplete(val)}\n                    options={options}\n                    selectValue={selectValue}\n                    handleSelect={(val) => handleSelect(val)}\n                />\n            );\n        }\n\n        return content;\n    }\n    \n    return (\n        <>\n        <Grid sx={{ marginBottom: '20px'}} container rowSpacing={3} columnSpacing={6}>\n            {data.map((el, i) => (\n                <Grid item key={i} lg={6} md={6} sm={12} xs={12}>\n                    {renderContent(el)}\n                </Grid>\n            ))}\n        </Grid>\n        <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n            <Button\n                color=\"primary\"\n                variant='contained'\n                onClick={handleReset}\n                sx={{ alignSelf: 'flex-end'}}\n            >\n                Reset\n            </Button>\n        </FormControl>\n        </>\n    );\n}\n\nexport default SearchFilter;","import moment from 'moment';\nimport { formatTime } from './utils';\nexport function formatCenters(data) {\n    let response = [];\n    const meta = {\n        centerId: \"Center ID\",\n        name: \"Full Name\",\n        email: \"Email\",\n        phoneNumber: \"Phone Number\",\n        state: \"State\",\n        centerType: \"Center Type\",\n        // verified: \"Status\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        // data.map((item) => {\n        //     response.push(formatData(item))\n        // })\n        data.forEach(item => {\n            response.push(formatData(item))\n        })\n    }\n    else {\n        response.push(formatData(data))\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatCounsellor (data) {\n    let response = [];\n    const meta = {\n        counsellorId: \"Provider ID\",\n        name: \"Full Name\",\n        email: \"Email ID\",\n        phoneNumber: \"Phone Number\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item && item.user && item.user.username,\n                name: item.name,\n                email: item.email,\n                phoneNumber: item.phone_number.toString(),\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data && data.user && data.user.username,\n            name: data.name,\n            email: data.email,\n            phoneNumber: data.phone_number,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatClient (data) {\n    let response = [];\n    const meta = {\n        clientId: \"Client ID\",\n        name: \"Record Name\",\n        age: \"Age\",\n        gender_bio: \"Gender\",\n        gender_id: \"Gender ID\",\n        ethnicity: \"Ethnicity\",\n        status: \"Status\",\n        dateCreated: \"Date Created\",\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item.client_id,\n                name: item.name,\n                age: item.age,\n                gender_bio: item.gender_bio,\n                gender_id: item.gender_identified,\n                ethnicity: item.ethnicity,\n                status: item.status,\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data.id,\n            name: data.name,\n            age: data.age,\n            gender_bio: data.gender_bio,\n            gender_id: data.gender_identified,\n            status: data.status,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response['meta'] = meta\n    return response;\n}\n\nexport function formatSession(data, type=null) {\n    let response = [];\n    let meta\n    if (type && type !== 'provider') {\n        meta = {\n            counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    } else {\n        meta = {\n            // counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                // counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    }\n    \n    response['meta']= meta\n    return response;\n}\n\nexport function formatDetails(data) {\n    let icon = 'http://localhost:1337'+data[(data.role.name).toLowerCase()].logo_image\n\n    const response = {\n        UserID: data.username,\n        name: getName(data),\n        phoneNumber: data[(data.role.name).toLowerCase()].phone_number,\n        // username: data.username,\n        email: data.email,\n        verified: data.confirmed,\n        logo:icon,\n        date_created: moment(data.createdAt).format('DD MMMM, YYYY'),\n        role: data.role.name\n    };\n\n    return response\n}\n\nfunction formatData(item) {\n    console.log(item.user?.username)\n    const obj = {\n        centerId: item.id,\n        id: item.user?.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        // firstName: item.first_name,\n        // lastName: item.last_name,\n        // country: item.country,\n        state: item.state?.name,\n        // city: item.city,\n        // postalCode: item.postal_code,\n        // areaCode: item.area_code,\n        centerType: item.center_type?.name,\n        // verified: item.is_verified,\n        // address: getAddress(item.street_address, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n    };\n\n    return obj\n}\n\n// function getAddress(address1, address2) {\n//     let fullAddress = address1 + ' ' + address2\n//     return fullAddress\n// }\n\nfunction getName(data) {\n    let fullName = ''\n    switch (data.role.name) {\n        case \"Center\":\n            fullName = data.center && data.center.name ? data.center.name : ''\n            break;\n        case \"Counsellor\":\n            fullName = data.counsellor && data.counsellor.name ? data.counsellor.name : ''\n            break;\n        case \"Client\":\n            fullName = data.client && data.client.name ? data.client.name: ''\n            break;\n        case \"Admin\":\n            fullName = data.profile && data.profile.first_name ? data.profile.first_name + data.profile.last_name : ''\n            break;\n        default:\n            fullName = \"NIL\"\n            break;\n    }\n    return fullName\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import React, { useState, useEffect } from 'react';\nimport { SearchInput } from 'app/components';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport './Centers.css';\n\nconst ProviderList = ({ counsellorData }) => {\n    const page = 1;\n    const [searchData, setSearchData] = useState('');\n    const [searchItems, setSearchItems] = useState([]);\n    const [rows, setRows] = useState(() => counsellorData);\n    const [searchResult, setSearchResult] = useState(false);\n    const [pageDetails, setPageDetails] = useState(() => (\n        {\n            total: counsellorData.length, \n            page: page\n        })\n    );\n\n    function handleSearch({ target: { value }}){\n        setSearchData(value);\n        if(value && value.length > 2) {\n            let data = counsellorData.filter((item) => {\n                return (\n                    item && item.id && item.id.toLowerCase().includes(value.toLowerCase()) ||\n                    item && item.name && item.name.toLowerCase().includes(value.toLowerCase()) || \n                    item && item.email && item.email?.toLowerCase().includes(value.toLowerCase()) || \n                    item && item.phoneNumber && item.phoneNumber?.toString().toLowerCase().includes(value.toLowerCase())\n                )\n            })\n            data['meta'] = counsellorData.meta;\n            setSearchResult(true);\n            setSearchItems(data);\n            setRows(data);\n            setPageDetails({ total: data.length, page});\n        } else {\n            setSearchResult(false);\n            setSearchItems([]);\n            setRows(counsellorData);\n            setPageDetails({ total: counsellorData.length, page });\n        }\n    }\n\n    const handlePageChange = (event, newPage) => {\n        const skip = ((Number(newPage) + 1) - 1) * 10;\n        let arr = [];\n        let total = 0;\n        if(searchResult){\n            arr = searchItems.slice(skip, skip + 10);\n            arr['meta'] = counsellorData.meta;\n            total = searchItems.length;\n        } else {\n            arr = counsellorData.slice(skip, skip + 10);\n            arr['meta'] = counsellorData.meta;\n            total = counsellorData.length;\n        }\n        setRows(arr);\n        setPageDetails({ total, page: Number(newPage) + 1});\n    }\n\n    return (\n        <>\n            <SearchInput\n                label=\"Search Provider\"\n                placeholder=\"Search Provider\"\n                value={searchData}\n                handleBlur={handleSearch}\n            />\n            <UsersCustomTable\n                page={page}\n                pageDetails={pageDetails}\n                handlePageChange={handlePageChange}\n                rows={rows}\n                view={'counsellor'}\n            />\n        </>\n    )\n}\n\nexport default ProviderList;\n"],"sourceRoot":""}