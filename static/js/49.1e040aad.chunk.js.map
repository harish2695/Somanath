{"version":3,"sources":["app/services/centerService.js","app/utils/center.list.formatter.js","app/views/center/ClientList.jsx","app/views/center/CenterDetails.jsx"],"names":["fetchCenter","page","url","makeRequest","then","resp","json","getAllCenters","getCenterDetails","id","findCenters","searchData","filters","catch","err","clientMeta","client_id","clinician","name","gender_bio","gender_identified","license","device","appointment","formatClientsList","data","response","Array","isArray","forEach","item","push","formatClientData","handleSession","res","sessions","attributes","length","i","el","status","clientID","clinician_status","counsellor","device_status","device_id","getMetaData","pagination","formatCenters","formatCenterData","centerId","user","username","email","phoneNumber","phone_number","firstName","first_name","logo","logo_image","lastName","last_name","country","state","city","postalCode","postal_code","areaCode","area_code","centerType","center_type","verified","is_verified","address","getAddress","street_address1","street_address2","createdAt","moment","format","address1","address2","ClientList","searchFilters","clientData","useState","searchValue","setSearchValue","searchResult","setSearchResult","gender","setFilters","rows","setRows","searchedItems","setSearchedItems","total","pageDetails","setPageDetails","checkFilters","temp","allClear","Object","entries","sortClients","search","type","filter","toLowerCase","includes","meta","SearchFilter","handleSearch","value","target","multipleFilters","filterValue","handleFilter","handleReset","UsersCustomTable","handlePageChange","event","newPage","skip","Number","arr","slice","view","Container","styled","theme","margin","breakpoints","down","marginBottom","clientSearchFilters","label","placeholder","items","CenterDetails","props","navigate","useNavigate","loading","setLoading","setValue","tab","tabsData","center","centerData","setCenterData","counsellorData","setCounsellorData","setClientData","appointmentData","setAppointmentData","client","searchedData","setSearchedData","values","setValues","window","location","href","split","pop","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","handleClose","handleEdit","fetchData","a","useEffect","formatCounsellor","counsellors","formatClient","clients","formatSession","console","error","Center","role","Appointment","handleBlur","prop","e","toString","caseId","sessionId","routeSegments","path","TabContext","Box","sx","borderBottom","borderColor","TabList","onChange","newValue","map","index","Tab","TabPanel","title","subtitle","icon","action","navigateTo","borderTop","paddingTop","paddingBottom","Grid","container","xs","ProviderList"],"mappings":"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","file":"static/js/49.1e040aad.chunk.js","sourcesContent":["import { makeRequest } from './authenticationService';\n\nexport const fetchCenter = (page) => {\n    // let url = `/api/centers?pagination[page]=${page}`;\n    let url = '/api/centers';\n\n    if(page){\n        url += `?pagination[page]=${page}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getAllCenters = () => {\n    let url = '/api/centers?all=-1';\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getCenterDetails = (id) => {\n    let url = `/api/centers/${id}`;\n\n    return makeRequest('GET', url, )\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\n\nexport const searchCenters = (data,page) => {\n    let url = `/api/centers?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const filterCenters = (data,page) => {\n    let url = `/api/centers?filter=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const findCenters = (searchData, filters, page) => {\n    let url = `/api/centers?search=${searchData}&filter=${filters}&pagination[page]=${page}`;\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import moment from 'moment'\n\nconst meta = {\n    counsellorId: 'Center ID',\n    name: 'State',\n    firstName: 'Name',\n    lastName: 'Phone',\n    traumaCodes: 'Email',\n    clients: 'Clients',\n    sessions: 'Providers',\n    sessionsHours: 'Devices',\n    type: 'Type',\n}\n\nconst deviceMeta = {\n    // id: \"ID\",\n    device_id: 'Device ID',\n    device_type: 'Device Type',\n    device_serial: 'Device Serial',\n    mac_address: 'Mac Address',\n    is_assigned: 'Is Assigned',\n    status: 'Status',\n    owned_by: 'Owned By',\n    edit_action: 'Edit Action',\n    device_action: 'Device Action',\n}\n\n\nconst clientMeta = {\n    client_id: \"Client ID\",\n    clinician: 'Provider',\n    name: \"Record Name\",\n    gender_bio: \"Birth Gender\",\n    gender_identified: \"ID Gender\",\n    license:\"License\",\n    device: \"Device\",\n    appointment:\"Appointment\"\n}\n\nexport function formatClientsList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientData(item))\n        })\n        response['meta'] = clientMeta;\n    } else {\n        response.push(formatClientData(data))\n    }\n    return response\n}\n\nfunction getDeviceMeta(tab) {\n    let obj = {};\n    if(tab == 1){\n        obj = deviceMeta;\n    } else {\n        obj = {\n            mac_address: 'Mac Address',\n            ip_address: 'IP Address',\n            passphrase: 'Passphrase'\n        }\n    }\n    return obj;\n}\n\nexport function formatDevicesList(data, activeTab) {\n    const response = [];\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatDeviceData(item, activeTab))\n        })\n        response['meta'] = getDeviceMeta(activeTab);\n    } else {\n        response.push(formatDeviceData(data, activeTab))\n    }\n    return response\n}\n\nfunction handleSession(item){\n    let res = 'NotScheduled';\n    const sessions = item?.attributes?.sessions?.data;\n    if(sessions?.length){\n        for(let i = 0;i < sessions.length;i++){\n            let el = sessions[i];\n            if(el?.attributes?.status === 'pending' || el?.attributes?.status === 'scheduled'){\n                res = 'Scheduled';\n            }\n        }\n    } else {\n        res = 'NotScheduled';\n    }\n    return res;\n}\n\nfunction formatClientData(item) {\n    const obj = {\n        clientID: (item && item.id) || '',\n        client_id: (item && item.attributes && item.attributes.client_id) || '',\n        clinician_status:\n            item &&\n            item.attributes &&\n            item.attributes.counsellor &&\n            item.attributes?.counsellor?.data\n                ? item.attributes?.counsellor?.data?.attributes?.name\n                : 'Not Assigned',\n        name: (item && item.attributes && item.attributes.name) || '',\n        gender_bio:\n            (item && item.attributes && item.attributes.gender_bio) || '',\n        gender_identified:\n            (item && item.attributes && item.attributes.gender_identified) ||\n            '',\n        license:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data\n                ? 'Issued'\n                : 'Not Issued',\n        device_status:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data &&\n            item.attributes.license.data.attributes &&\n            item.attributes.license.data.attributes.device &&\n            item.attributes.license.data.attributes.device.data &&\n            item.attributes.license.data.attributes.device.data.id\n                ? item.attributes.license.data.attributes.device.data.attributes.device_id\n                : 'Not Assigned',\n        appointment: handleSession(item)\n    }\n\n    return obj;\n}\n\n\nfunction getPassPhrase(item) {\n    return (\n        (item &&\n            item.attributes &&\n            item.attributes.licenses &&\n            item.attributes.licenses.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1] &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase  &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes && \n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes.name\n        ) ||\n        ''\n    )\n}\n\n\nfunction formatDeviceData(item, activeTab) {\n    let obj = {};\n    if(activeTab == 1) {\n        obj = {\n            // id: item.id,\n            device_id: item.attributes.device_id,\n            device_type: item.attributes.device_type,\n            device_serial: item.attributes.device_serial,\n            mac_address: item.attributes.mac_address,\n            is_assigned: String(item.attributes.is_assigned),\n            status: item.attributes.status,\n            owned_by: item.attributes.owned_by,\n            edit_action: `/devices/edit?id=${item.id}`,\n            device_action: {\n                deviceID: item.id,\n                isAssigned: item.attributes.center && item.attributes.center.data ? true : false,\n                center_name: item && item.attributes && item.attributes.center && item.attributes.center.data && item.attributes.center.data && item.attributes.center.data.attributes && item.attributes.center.data.attributes.name || '',\n                owned_by: item.attributes.owned_by,\n            },\n        }\n    } else {\n        obj = {\n            mac_address: item && item.attributes && item.attributes.mac_address || '',\n            ip_address: item && item.attributes && item.attributes.ip_address || '',\n            passphrase: getPassPhrase(item)\n        }\n    }\n    return obj\n}\n\nconst logoBaseUrl = 'http://localhost:1337'\n\nexport function getMetaData(data) {\n    return data.pagination\n}\n\nexport function formatCenters(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatCenterData(item))\n        })\n    } else {\n        response = formatCenterData(data)\n    }\n\n    return response\n}\n\nfunction formatCenterData(item) {\n    const obj = {\n        id: item.id,\n        centerId:item && item.user && item.user.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        firstName: item.first_name,\n        logo: logoBaseUrl + item.logo_image,\n        lastName: item.last_name,\n        country: item.country,\n        state: item.state,\n        city: item.city,\n        postalCode: item.postal_code,\n        areaCode: item.area_code,\n        centerType: item.center_type,\n        verified: item.is_verified,\n        address: getAddress(item.street_address1, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY'),\n    }\n\n    return obj\n}\n\nfunction getAddress(address1, address2) {\n    let fullAddress = address1 + ' ' + address2\n    return fullAddress\n}\n\nexport function formatClients(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientUserData(item));\n        })\n    } else {\n        response = formatClientUserData(data);\n    }\n\n    return response\n}\n\nfunction formatClientUserData(item) {\n    const obj = {\n        id: item && item.id || '',\n        name: item && item.name || '',\n        client_id: item && item.client_id || '',\n        gender_bio: item && item.gender_bio || '',\n        gender_identified: item && item.gender_identified || '',\n        centers: item && item.centers && item.centers.length || '0',\n        counselors: item && item.counsellors && item.counsellors.length || '0',\n        sessions: item && item.sessions && item.sessions.length || '0'\n    };\n    return obj;\n}\n\n","import React, { useState, useEffect } from 'react';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport './Centers.css';\n\nconst ClientList = ({ searchFilters, clientData}) => {\n    const page = 1;\n    const [searchValue, setSearchValue] = useState('');\n    const [searchResult, setSearchResult] = useState(false);\n    const [filters, setFilters] = useState({\n        gender: 'All',\n        status: 'All'\n    });\n    const [rows, setRows] = useState(() => clientData);\n    const [searchedItems, setSearchedItems] = useState([]);\n    const [pageDetails, setPageDetails] = useState({ total: clientData.length, page });\n\n    function checkFilters(temp){\n        let allClear = true;\n        for(const [key] of Object.entries(temp)){\n            if(temp[key] !== 'All'){\n                allClear = false;\n            }\n        }\n        return allClear;\n    }\n\n    function sortClients(search, type) {\n        let searchData = [];\n        let allClear = checkFilters(type);\n        if(search && search.length > 2) {\n            searchData = clientData.filter((item) => {\n                return ( \n                    item && item.id && item.id.toLowerCase().includes(search.toLowerCase()) ||\n                    item && item.name && item.name.toLowerCase().includes(search.toLowerCase()) || \n                    item && item.status && item.status.toLowerCase().includes(search.toLowerCase()) || \n                    item && item.gender_bio && item.gender_bio.toLowerCase().includes(search.toLowerCase())\n                )    \n            })\n        }\n\n        if(!allClear){\n            let data = [];\n            if(search && search.length > 2) {\n                data = searchData;\n            } else {\n                data = clientData;\n            }\n            searchData = data.filter((item) => {\n                if(item){\n                    return (\n                        (type.gender !== 'All' && type.status !== 'All') ?\n                        ((item && item.gender_bio === type.gender) && (item && item.status === type.status)) :\n                        (type.gender !== 'All') ?\n                        (item && item.gender_bio === type.gender) :\n                        (item && item.status === type.status)\n                    )\n                }\n            })\n        }\n        searchData['meta'] = clientData.meta;\n        setSearchResult(true);\n        setSearchedItems(searchData);\n        setRows(searchData);\n        setPageDetails({ total: searchData.length, page });\n    }\n\n    const handleClientSearch = ({ target: { value }}) => {\n        setSearchValue(value);\n        let allClear = checkFilters(filters);\n        if(value && value.length > 2) {\n            sortClients(value, filters);\n        } else if (value.length === 0) {\n            if(allClear){\n                setSearchResult(false);\n                setRows(clientData);\n                setPageDetails({ total: clientData.length, page});\n            } else {\n                sortClients('', filters);\n            }\n        }\n    }\n\n    const handleClientFilter = ({ target: { name, value }}) => {\n        let temp = {...filters};\n        temp[name] = value;\n        setFilters(temp);\n\n        let allClear = checkFilters(temp);\n        if(allClear) {\n            if(searchValue){\n                sortClients(searchValue, temp);\n            } else {\n                setSearchResult(false);\n                setRows(clientData);\n                setPageDetails({ total: clientData.length, page});\n            }\n        } else {\n            sortClients(searchValue, temp);\n        }\n    }\n\n    const handleClientReset = () => {\n        setSearchResult(false);\n        setSearchValue('');\n        setFilters({ gender: 'All', status: 'All'});\n        setSearchedItems([]);\n        setRows(clientData);\n        setPageDetails({ total: clientData.length, page});\n    }\n\n    const handlePageChange = (event, newPage) => {\n        const skip = ((Number(newPage) + 1) - 1) * 10;\n        let arr = [];\n        let total = 0;\n        if(searchResult) {\n            arr = searchedItems.slice(skip, skip + 10);\n            arr['meta'] = clientData.meta;\n            total = searchedItems.length;\n        } else {\n            arr = clientData.slice(skip, skip + 10);\n            arr['meta'] = clientData.meta;\n            total = clientData.length;\n        }\n        setRows(arr);\n        setPageDetails({ total, page: Number(newPage) + 1 });\n    }\n\n    return (\n        <>\n            <SearchFilter\n                data={searchFilters}\n                searchValue={searchValue}\n                handleSearch={handleClientSearch}\n                multipleFilters={true}\n                filterValue={filters}\n                handleFilter={handleClientFilter}\n                handleReset={handleClientReset}\n            />\n            <UsersCustomTable\n                page={page}\n                pageDetails={pageDetails}\n                handlePageChange={handlePageChange}\n                rows={rows}\n                view={'client'}\n            />\n        </>\n    )\n}\n\nexport default ClientList;","import React, { Fragment, useEffect, useState } from 'react'\nimport { Grid, FormControl } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport './CenterDetails.css'\n\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\n\nimport { ProfileCard, Breadcrumb, SearchInput } from 'app/components';\n\nimport { tabsData } from 'app/constants/data';\n\nimport { formatCounsellor, formatClient, formatSession } from '../../utils/data.formater'\n\nimport { styled } from '@mui/system';\nimport { getCenterDetails } from 'app/services/centerService';\nimport { formatCenters } from 'app/utils/center.list.formatter';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\nimport ProviderList from './ProviderList';\nimport ClientList from './ClientList';\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst clientSearchFilters = [\n    {\n        id: 1,\n        type: 'search',\n        name: 'search',\n        label: 'Search Client',\n        placeholder: 'Search Client'\n    },\n    {\n        id: 2,\n        type: 'filter',\n        label: 'Gender Bio',\n        name: 'gender',\n        items: [\n            {\n                id: 1,\n                name: 'All',\n                value: 'All'\n            },\n            {\n                id: 2,\n                name: 'Male',\n                value: 'Male'\n            },\n            {\n                id: 3,\n                name: 'Female',\n                value: 'Female'\n            },\n            {\n                id: 4,\n                name: 'Other',\n                value: 'Other'\n            }\n        ]\n    },\n    {\n        id: 3,\n        type: 'filter',\n        label: 'Status',\n        name: 'status',\n        items: [\n            {\n                id: 1,\n                name: 'All',\n                value: 'All'\n            },\n            {\n                id: 2,\n                name: 'New',\n                value: 'new'\n            },\n            {\n                id: 3,\n                name: 'In Process',\n                value: 'inProcess'\n            },\n            {\n                id: 4,\n                name: 'Successful',\n                value: 'successful'\n            },\n            {\n                id: 5,\n                name: 'Unsuccessful',\n                value: 'unsuccessful'\n            }\n        ]\n    }\n]\n\nconst CenterDetails = (props) => {\n    // const {id} = params\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false)\n    const [value, setValue] = useState('1');\n    // const [tab, setTab] = useState(tabsData.center)\n    const tab = tabsData.center\n    // const [detailsData, setDetailsData] = useState('')\n    const [centerData, setCenterData] = useState('')\n    const [counsellorData, setCounsellorData] = useState('')\n    const [clientData, setClientData] = useState('')\n    const [appointmentData, setAppointmentData] = useState('')\n    const [searchResult, setSearchResult] = useState(false)\n    const [searchedData, setSearchedData] = useState({\n        center: [],\n        counsellor: [],\n        client: [],\n        appointment: [],\n    })\n    const [values, setValues] = useState({\n        center: '',\n        counsellor: '',\n        client: '',\n        appointment: '',\n    })\n    const id = window.location.href.split('/').pop();\n\n    //Edit button function\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const [ page, setPage] = useState(0)\n    const rowsPerPage = 10\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        // navigate(`/users/editCenter?id=${centerData.id}`)\n        setAnchorEl(null);\n    }\n\n    const handleEdit = () => {\n        navigate(`/users/editCenter?id=${centerData.id}`);\n        setAnchorEl(null);\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const fetchData = async (id) => {\n        const res = await getCenterDetails(id)\n        return res\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        fetchData(id)\n        .then((res) => {     \n                setCenterData(formatCenters(res))\n                setCounsellorData(formatCounsellor(res.counsellors))\n                setClientData(formatClient(res.clients))\n                setAppointmentData(formatSession(res.sessions))            \n            \n            // setDetailsData(formatDetails(res))\n        })\n        .catch(console.error)\n    }, [id])\n\n    useEffect(() => {\n        setLoading(false)\n    }, [centerData, loading, tab])\n\n    const handleBlur = (prop) => (e) => {\n        let value = e.target.value\n        setValues({ ...values, [prop]: value })\n        if (value && value.length > 2) {\n            let searchData\n            if (prop && prop === 'counsellor') {\n                searchData = counsellorData.filter((item) => {\n                    return (\n                        item && item.id && item.id.toLowerCase().includes(value.toLowerCase()) ||\n                        item && item.name && item.name.toLowerCase().includes(value.toLowerCase()) || \n                        item && item.email && item.email?.toLowerCase().includes(value.toLowerCase()) || \n                        item && item.phoneNumber && item.phoneNumber?.toString().toLowerCase().includes(value.toLowerCase())\n                    )\n                })\n                searchData['meta'] = counsellorData.meta\n            } else if (prop && prop === 'center') {\n                searchData = centerData.filter((item) => {\n                    return (\n                        item.name.toLowerCase().includes(value) || \n                        item.email?.toLowerCase().includes(value) || \n                        item.phoneNumber?.toString().toLowerCase().includes(value)\n                    )\n                })\n                searchData['meta'] = centerData.meta\n            } else if (prop && prop === 'client') {\n                searchData = clientData.filter((item) => {\n                    return ( \n                        item.id.toLowerCase().includes(value) ||\n                        item?.name.toLowerCase().includes(value) || \n                        item.status.toLowerCase().includes(value) || \n                        item?.gender.toLowerCase().includes(value)\n                    )    \n                })\n                searchData['meta'] = clientData.meta\n            } else if (prop && prop === 'appointment') {\n                searchData = appointmentData.filter((item) => {\n                    return item.caseId.includes(value) || item.sessionId?.includes(value) || item.status.toLowerCase().includes(value)\n                })\n                searchData['meta'] = appointmentData.meta\n            }\n\n            setSearchResult(true);\n            setSearchedData({ ...searchedData, [prop]: searchData });\n        } if (value.length === 0) {\n            setSearchResult(false);\n        }\n    }\n\n    const Center = () => {\n        return (\n            <>\n                <UsersCustomTable role=\"Center\" rows={centerData} />\n            </>\n        )\n    }\n    \n    const handlePageChange = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    \n    const Appointment = () => {\n        return (\n            <>\n                <SearchInput\n                    placeholder=\"Search Appointment\"\n                    value={values.appointment}\n                    handleBlur={handleBlur('appointment')}\n                />\n                <UsersCustomTable\n                    role=\"Session\"\n                    rows={\n                        searchResult && values.appointment !== ''\n                            ? searchedData.appointment\n                            : appointmentData\n                    }\n                />\n            </>\n        )\n    }\n    \n\n    return (\n        <Container>\n            <Breadcrumb\n                routeSegments={[\n                    { name: \"Center\", path: \"/centers/list\" },\n                    { name: \"Center Details\" }\n                ]}\n            />\n            {!loading &&\n             centerData !== '' &&\n              (\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"User Details Segement\">\n                            {tab.map((item, index) => (\n                                <Tab label={item.name} value={item.id.toString()} key={index} />\n                            ))}\n                        </TabList>\n                    </Box>\n                    {tab && tab.map((item, index) => {\n                        return (\n                            <TabPanel value={item.id.toString()} key={index}>\n                                {item.id === 1 ? (\n                                    <ProfileCard\n                                        title={centerData.name}\n                                        subtitle={'Center'}\n                                        icon={centerData.logo}\n                                        anchorEl={anchorEl}\n                                        action={true}\n                                        open={open}\n                                        handleClick={handleClick}\n                                        handleClose={handleClose}\n                                        navigateTo={handleEdit}\n                                    >\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Center ID\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.centerId}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Full name\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.name}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Email\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.email}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Phone Number\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.phoneNumber}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Address\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.address\n                                                        ? centerData.address\n                                                        : 'ABC Street, Dakota, US'}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Date Created\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {centerData.createdAt}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                    </ProfileCard>\n                                ) : item.id === 2 ? (\n                                    <Center />\n                                ) : item.id === 3 ? (\n                                    <ProviderList counsellorData={counsellorData} />\n                                ) : item.id === 4 ? (\n                                    <ClientList \n                                        searchFilters={clientSearchFilters}\n                                        clientData={clientData}\n                                    />\n                                ) : (\n                                    <Appointment />\n                                )}\n                            </TabPanel>\n                        )\n                    })}\n\n                </TabContext>\n            )}\n\n        </Container>\n    )\n}\n\nexport default CenterDetails\n"],"sourceRoot":""}