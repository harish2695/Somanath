{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/components/UsersCustomTable/UsersCustomTable.jsx","app/constants/data.js","app/components/SearchAutoComplete/SearchAutoComplete.js","app/components/SearchFilter/SearchFilter.js","app/services/deviceService.js","app/views/CenterView/Devices/PassphraseDialogModal.js","app/views/CenterView/Devices/DeviceDetails.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","_status","UsersCustomTable","props","user","useAuth","CustomHeadCell","meta","data","entries","Object","index","key","value","push","align","className","showDisableBtn","role","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","marginLeft","center_name","type","owned_by","handleOpen","deviceID","showBtn","flexDirection","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","scope","overflow","minWidth","size","rowsPerPage","slice","page","map","i","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","tabsData","admin","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","label","placeholder","items","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","phone_number","address","validators","errorMessages","validationRules","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","SearchAutoComplete","onChange","options","selectValue","handleSelect","Autocomplete","disablePortal","event","newValue","inputValue","onInputChange","newInputValue","renderInput","params","TextField","fullWidth","SearchFilter","searchValue","handleSearch","multipleFilters","filterValue","handleFilter","autoCompleteValue","handleAutoComplete","handleReset","renderContent","el","FormControl","autoFocus","InputProps","startAdornment","Box","InputLabel","padding","Select","item","k","MenuItem","val","Grid","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","alignSelf","fetchDevices","url","makeRequest","then","resp","json","getDeviceById","createDevice","editDevice","findDevices","searchData","search","filterData","tab","activeTab","centerName","catch","err","fetchDeviceUsage","findDeviceUsage","filter","updatePassphrase","StyledProgress","CircularProgress","CancelButton","PassphraseDialogModal","handleClose","passphraseId","handleRefresh","useState","loading","setLoading","alertOpen","setAlertOpen","message","statusInfo","setStatusInfo","Modal","Typography","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","CardRoot","Card","height","DeviceDetails","currentTab","setCurrentTab","anchorEl","setAnchorEl","device_id","device_type","device_serial","mac_address","is_assigned","passphrase","deviceInfo","setDeviceInfo","setDeviceID","setRows","setPageDetails","searchFilters","setSearchData","filters","setFilters","searchResult","setSearchResult","setPassphraseID","modalVisible","setModalVisible","openModal","setOpenModal","msg","setMsg","Boolean","getDeviceDetails","error","String","getStatus","getAllDeviceUsage","pageNo","formatDevice","getMetaData","console","log","sortDeviceUsage","response","client_id","client_name","assigned_date","returned_date","forEach","obj","attributes","formatDate","createdAt","updatedAt","pagination","includes","useEffect","window","location","href","split","at","handleClick","currentTarget","newPage","Number","target","routeSegments","path","TabContext","borderBottom","borderColor","TabList","Tab","toString","TabPanel","elevation","CardHeader","title","action","IconButton","undefined","Icon","Menu","PaperProps","maxHeight","ITEM_HEIGHT","selected"],"mappings":"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","file":"static/js/26.9f0e0d46.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport './SearchAutoComplete.css';\n\nconst SearchAutoComplete = ({ name, label, value, onChange, options, selectValue, handleSelect }) => {\n\n\n    return (\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={options}\n            name={name}\n            value={selectValue}\n            onChange={(event, newValue) => {\n                handleSelect(newValue);\n            }}\n            inputValue={value}\n            onInputChange={(event, newInputValue) => {\n                onChange(newInputValue);\n            }}\n            renderInput={(params) => (\n            <TextField \n                {...params}\n                fullWidth \n                label={label} \n            />\n        )}\n        />\n    );\n}\n\nexport default SearchAutoComplete;","import React from 'react';\nimport {\n    Grid,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchAutoComplete from 'app/components/SearchAutoComplete/SearchAutoComplete';\n\nconst SearchFilter = ({ data, searchValue, handleSearch, multipleFilters, filterValue, handleFilter, autoCompleteValue, handleAutoComplete, options, selectValue, handleSelect, handleReset }) => {\n    \n    const renderContent = (el) => {\n        let content = null;\n        if(el.type === 'search') {\n            content = (\n                <FormControl fullWidth>\n                    <TextField\n                        autoFocus\n                        label={el.label}\n                        variant=\"outlined\"\n                        onChange={handleSearch}\n                        value={searchValue}\n                        name={el.name}\n                        placeholder={el.placeholder}\n                        type=\"text\"\n                        fullWidth\n                        InputProps={{\n                            startAdornment: <SearchIcon />,\n                        }}\n                    />\n                </FormControl>\n            );\n        } else if(el.type === 'filter') {\n            content = (\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>{el.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={multipleFilters ? filterValue[el.name] : filterValue}\n                            label={el.label}\n                            name={el.name}\n                            onChange={handleFilter}\n                        >\n                            {el.items.map((item, k) => (\n                                <MenuItem key={k} value={item.value}>{item.name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )\n        } else if(el.type === 'searchAutoComplete') {\n            content = (\n                <SearchAutoComplete\n                    name={el.name}\n                    label={el.label}\n                    value={autoCompleteValue}\n                    onChange={(val) => handleAutoComplete(val)}\n                    options={options}\n                    selectValue={selectValue}\n                    handleSelect={(val) => handleSelect(val)}\n                />\n            );\n        }\n\n        return content;\n    }\n    \n    return (\n        <>\n        <Grid sx={{ marginBottom: '20px'}} container rowSpacing={3} columnSpacing={6}>\n            {data.map((el, i) => (\n                <Grid item key={i} lg={6} md={6} sm={12} xs={12}>\n                    {renderContent(el)}\n                </Grid>\n            ))}\n        </Grid>\n        <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n            <Button\n                color=\"primary\"\n                variant='contained'\n                onClick={handleReset}\n                sx={{ alignSelf: 'flex-end'}}\n            >\n                Reset\n            </Button>\n        </FormControl>\n        </>\n    );\n}\n\nexport default SearchFilter;","import { makeRequest } from './authenticationService';\n\nexport const fetchDevices = (page, value) => {\n    let url = `/api/devices?pagination[page]=${page}&tab=${value}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\n\nexport const getDeviceById = (id) => {\n    let url = '/api/devices/' + id;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const createDevice = (data) => {\n    let url = '/api/devices';\n\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const editDevice = (data, id) => {\n    let url = '/api/devices/' + id;\n\n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchDevices = (data, page) => {\n    let url = `/api/devices?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterDevices = (data, page) => {\n    let url = `/api/devices?filter=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findDevices = (options) => {\n    let searchData = options && options.search || '';\n    let filterData = options && options.type || null;\n    let page = options && options.page || 1;\n    let tab = options && options.activeTab || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n    if(filterData) {\n        for(const [key, value] of Object.entries(filterData)) {\n            url += `&filter[${key}]=${value}`;\n        }\n    }\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n\nexport const fetchDeviceUsage = (page, deviceId) => {\n\n    let url = `/api/device-usages?pagination[page]=${page}`;\n    \n    if(deviceId) {\n        url += `&deviceId=${deviceId}`;\n    }\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findDeviceUsage = (options) => {\n    const page = options?.page || 1;\n    const search = options?.search || '';\n    const filter = options?.type || 'All';\n    const deviceId = options?.deviceId;\n\n    let url = `/api/device-usages?pagination[page]=${page}`;\n\n    if(search){\n        url += `&search=${search}`;\n    }\n    if(filter && filter !== 'All') {\n        url += `&filter=${filter}`;\n    }\n    if(deviceId) {\n        url += `&deviceId=${deviceId}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const updatePassphrase = (id) => {\n    let url = '/api/passphrases/' + id;\n\n    return makeRequest('PUT', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Slide from '@mui/material/Slide'\nimport { \n    Alert,\n    Modal, \n    Typography,\n    CircularProgress,\n    Snackbar \n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport {\n    updatePassphrase\n} from 'app/services/deviceService';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    top: '6px',\n    left: '25px',\n}))\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}))\n\nconst PassphraseDialogModal = ({open, handleClose, passphraseId, handleRefresh }) => {\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [statusInfo, setStatusInfo] = useState({\n        status: '',\n        message: ''\n    });\n\n    const handleReset = () => {\n        setAlertOpen(false);\n        setStatusInfo({\n            ...statusInfo,\n            status: '',\n            message: ''\n        })\n    }\n\n    const handleEdit = () => {\n        setLoading(true);\n        updatePassphrase(passphraseId)\n        .then(resp => {\n            if(resp && resp.status === 'success') {\n                setLoading(false);\n                setAlertOpen(true);\n                setStatusInfo({\n                    ...statusInfo,\n                    status: 'success',\n                    message: resp.message\n                })\n                handleRefresh();\n            }\n        })\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        Do you want to regenerate the passphrase?\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        <CancelButton onClick={handleClose}>\n                            Cancel\n                        </CancelButton>\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                disabled={loading}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={handleEdit}\n                            >\n                                Yes\n                            </Button>\n                            {loading && (\n                                <StyledProgress\n                                    size={24}\n                                    className=\"buttonProgress\"\n                                />\n                            )}\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n            <Snackbar\n                open={alertOpen}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                autoHideDuration={3000}\n                onClose={() => {\n                   handleReset();\n                }}\n            >\n                <Alert\n                    onClose={() => {\n                        handleReset();\n                    }}\n                    variant=\"filled\"\n                    severity={statusInfo.status}\n                    sx={{ width: '100%' }}\n                >\n                    {statusInfo.message}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}\n\nexport default PassphraseDialogModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n    Grid,\n    Box,\n    Snackbar,\n    Alert,\n    Card,\n    IconButton,\n    Icon,\n    Menu,\n    MenuItem,\n} from '@mui/material';\nimport { Breadcrumb } from 'app/components';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from '@mui/system'\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport { tabsData } from 'app/constants/data';\nimport useAuth from 'app/hooks/useAuth';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\nimport { ProfileCard, UserProfileDetail  } from 'app/components';\nimport { formatDate } from 'app/utils/utils';\nimport {\n    getDeviceById,\n    fetchDeviceUsage,\n    findDeviceUsage,\n    updatePassphrase\n} from 'app/services/deviceService';\nimport moment from 'moment';\nimport PassphraseDialogModal from './PassphraseDialogModal';\nimport Loading from 'app/components/MatxLoading/MatxLoading';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport './Devices.css';\n\nconst CardRoot = styled(Card)(() => ({\n    height: '100%',\n    padding: '20px 24px',\n    // textAlign: 'center',\n}))\n\nconst ITEM_HEIGHT = 48;\n\nconst DeviceDetails = () => {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n    const [currentTab, setCurrentTab] = useState('1');\n    const [loading, setLoading] = useState(false);\n    const [logo, setLogo] = useState('');\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [deviceInfo, setDeviceInfo] = useState({\n        device_id: '',\n        device_type: '',\n        device_serial: '',\n        mac_address: '',\n        is_assigned: '',\n        status: '',\n        passphrase: ''\n    });\n    const [deviceId, setDeviceID] = useState('');\n    const [rows, setRows] = useState([]);\n    const [pageDetails, setPageDetails] = useState({});\n    const [searchFilters, setSearchFilters] = useState(() => tabsData['deviceUsageFilters']);\n    const [searchData, setSearchData] = useState(\"\");\n    const [filters, setFilters] = useState('All');\n    const [searchResult, setSearchResult] = useState(false);\n    const [passphraseId, setPassphraseID] = useState('');\n    const [modalVisible, setModalVisible] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n    const tab = tabsData['deviceDetail'];\n    const page = 1;\n    const open = Boolean(anchorEl);\n\n    useEffect(() => {\n        let id = window.location.href.split('/').at(-1);\n        if(id) {\n            getDeviceDetails(id);\n        }\n    },[]);\n\n    function getDeviceDetails(id) {\n        getDeviceById(id)\n            .then(resp => {\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    if(resp){\n                        setDeviceInfo({\n                            ...deviceInfo,\n                            device_id: resp.device_id,\n                            device_type: resp.device_type,\n                            device_serial: resp.device_serial,\n                            mac_address: resp.mac_address,\n                            is_assigned: String(resp.is_assigned),\n                            status: resp.owned_by === 'bmc' ? resp.status : getStatus(resp),\n                            passphrase: resp?.license?.passphrase?.name\n                        })\n                        setDeviceID(resp?.id);\n                        setPassphraseID(resp?.license?.passphrase?.id);\n                    }\n                }\n            })\n    }\n\n    function getAllDeviceUsage(pageNo){\n        setLoading(true);\n        fetchDeviceUsage(pageNo, deviceId)\n        .then(resp => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setRows(formatDevice(resp.data));\n                setPageDetails(getMetaData(resp.meta));\n            }\n        }).catch((err) => {\n            console.log(\"error\",err);\n        })\n    }\n\n    function sortDeviceUsage(search, type, pageNo) {\n        setLoading(true);\n        setSearchResult(true);\n\n        let options = {\n            search,\n            type,\n            page: pageNo,\n            deviceId\n        };\n\n        findDeviceUsage(options)\n        .then(resp => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setRows(formatDevice(resp.data));\n                setPageDetails(getMetaData(resp.meta));\n            }\n        }).catch((err) => {\n            console.log(\"error\",err);\n        })\n    }\n\n    function formatDevice(data) {\n        let response = [];\n        let meta = {};\n        meta = {\n            client_id: \"Record ID\",\n            client_name: \"Record Name\",\n            passphrase: \"Passphrase\",\n            assigned_date: \"Assigned Date\",\n            returned_date: \"Returned Date\",\n            status: \"Status\"\n        }\n\n        data.forEach((item) => {\n            let obj = {\n                client_id: item?.attributes?.client?.data?.attributes?.client_id,\n                client_name: item?.attributes?.client?.data?.attributes?.name,\n                passphrase: item?.attributes?.passphrase?.data?.attributes?.name,\n                assigned_date: formatDate(item?.attributes?.createdAt),\n                returned_date: item?.attributes?.status === 'Active' ? '-' : formatDate(item?.attributes?.updatedAt),\n                status: item?.attributes?.status\n            }\n            response.push(obj);\n        })\n        response[\"meta\"] = meta;\n        return response;\n    }\n\n    function getMetaData(data) {\n        return data.pagination;\n    }\n\n    function getStatus(val) {\n        return ['New', 'Used'].includes(val?.license?.status) ? 'Active' : 'Inactive';\n    }\n\n    const handleTab = (e, val) => {\n        setCurrentTab(val);\n        if(Number(val) === 2){\n            getAllDeviceUsage(page);\n        }\n    }\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    const handlePageChange = (e, newPage) => {\n        if(searchResult){\n            sortDeviceUsage(searchData, filters, Number(newPage) + 1)\n        } else {\n            getAllDeviceUsage(Number(newPage) + 1);\n        }\n    }\n\n    const handleSearch = ({ target: { value }}) => {\n        setSearchData(value);\n        if (value && value.length > 2) {\n            sortDeviceUsage(value, filters, page);\n        } else if(value === ''){\n            if(filters !== 'All') {\n                sortDeviceUsage('', filters, page);\n            } else {\n                setSearchResult(false);\n                getAllDeviceUsage(page);\n            }\n        }\n    }\n\n    const handleFilter = ({ target: { value }}) => {\n        setFilters(value);\n        if(value === 'All') {\n            if(searchData) {\n                sortDeviceUsage(searchData, 'All', page);\n            } else {\n                setSearchResult(false);\n                getAllDeviceUsage(page);\n            }\n        } else {\n            sortDeviceUsage(searchData, value, page);\n        }\n    }\n\n    const handleReset = () => {\n        setSearchResult(false);\n        setFilters('All');\n        setSearchData('');\n        getAllDeviceUsage(page);\n    }\n\n    const onClick = (visible) => {\n        setModalVisible(visible);\n    }\n\n    function handleRefresh() {\n        setModalVisible(!modalVisible);\n        getDeviceDetails(deviceId);\n    }\n\n    return (\n        <div className='DeviceList-container'>\n            <div className=\"Breadcrumb-box\">\n                <Breadcrumb routeSegments={[\n                    { name: \"Devices\", path: \"/devices\" },\n                    { name: \"Device Details\" }\n                ]} />\n                    {/* <AddDeviceBtn /> */}\n            </div>\n            <TabContext value={currentTab}>\n                <Box\n                    sx={{\n                        borderBottom: 1,\n                        borderColor: 'divider',\n                        marginBottom: '20px',\n                    }}\n                >\n                    <TabList\n                        onChange={handleTab}\n                        aria-label=\"Device Details Segment\"\n                    >\n                        {tab.map((item, index) => (\n                            <Tab\n                                label={item.name}\n                                value={item.id.toString()}\n                                key={index}\n                            />\n                        ))}\n                    </TabList>\n                </Box>\n\n                {tab && tab.map((item, index) => {\n                    return (\n                        <TabPanel key={index} value={item.id.toString()}>\n                            {item.id === 1 ? (\n                                <CardRoot elevation={6}>\n                                <CardHeader\n                                    title={'Device Details'}\n                                    action={\n                                        (\n                                        <div>\n                                            <IconButton\n                                                aria-label=\"More\"\n                                                aria-owns={open ? 'long-menu' : undefined}\n                                                aria-haspopup=\"true\"\n                                                onClick={handleClick}\n                                            >\n                                                <Icon>more_vert</Icon>\n                                            </IconButton>\n                                            <Menu\n                                                id=\"long-menu\"\n                                                anchorEl={anchorEl}\n                                                open={open}\n                                                onClose={handleClose}\n                                                PaperProps={{\n                                                    style: {\n                                                        maxHeight: ITEM_HEIGHT * 4.5,\n                                                        width: 200,\n                                                    },\n                                                }}\n                                            >\n                                                <MenuItem\n                                                    // key={option}\n                                                    selected={false}\n                                                    \n                                                    onClick={() => {\n                                                        onClick(true);\n                                                        handleClose();\n                                                    }}\n                                                >\n                                                    Regenerate Passphrase\n                                                </MenuItem>\n                                            </Menu>\n                                        </div>\n                                    )}\n                                />\n                                    <UserProfileDetail \n                                        data={deviceInfo} \n                                    />\n                                </CardRoot>\n                            ) : (\n                                <>\n                                    <SearchFilter\n                                        data={searchFilters}\n                                        searchValue={searchData}\n                                        handleSearch={handleSearch}\n                                        multipleFilters={false}\n                                        filterValue={filters}\n                                        handleFilter={handleFilter}\n                                        handleReset={handleReset}\n                                    />\n                                    {!loading && rows.meta && (\n                                        <UsersCustomTable\n                                            page={page}\n                                            pageDetails={pageDetails}\n                                            handlePageChange={handlePageChange}\n                                            rows={rows}\n                                            view={'device'}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </TabPanel>\n                    )\n                })}\n            </TabContext> \n            {\n                loading &&\n                <Loading />\n            }\n            <PassphraseDialogModal\n                open={modalVisible}\n                handleClose={() => setModalVisible(false)}\n                passphraseId={passphraseId}\n                handleRefresh={handleRefresh}\n            />\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </div>\n    );\n}\n\nexport default DeviceDetails;"],"sourceRoot":""}