{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/counselorService.js","app/components/CustomModal/NotesModal.js","app/components/common/SearchFilter.js","app/components/CustomModal/AcceptModal.js","app/components/CustomModal/RejectModal.js","app/components/AppointmentListTable/AppointmentListTable.js","app/views/counsellorView/SearchFilter/ClientSearchFilter.js","app/views/counsellorView/Appointments/UpcomingList.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","NotesModal","props","useState","clientId","setClientId","useStateRef","notes","setNotes","notesRef","select","setSelect","sessionData","setSessionData","setSessionId","closeModal","handleClose","useEffect","sessionId","multipleSession","sort","a","b","Date","updatedAt","Fragment","fullWidth","maxWidth","noValidate","lg","md","sm","xs","flexDirection","mt","minWidth","htmlFor","autoFocus","value","onChange","e","target","result","filter","item","attributes","session_id","map","push","formatNotes","current","label","inputProps","name","index","moment","scheduled_at","format","multiline","rows","readOnly","defaultValue","details","container","added_by","SearchFilter","renderMenuItem","key","genderValue","filterValue","marginBottom","rowSpacing","columnSpacing","searchLabel","handleSearch","placeholder","searchValue","InputProps","startAdornment","multiFilter","Object","entries","i","padding","genderSelectValue","selectValue","handleChange","handleReset","alignSelf","StyledProgress","CircularProgress","bottom","right","borderRadius","AcceptModal","center","setCenter","setData","ValidatorForm","addValidationRule","length","removeValidationRule","Modal","Box","onSubmit","handleSubmit","onError","Typography","mb","Grid","spacing","TextField","scheduledAt","marginLeft","marginRight","disabled","loading","ml","size","className","RejectModal","rejectReason","setRejectReason","error","setError","validators","errorMessages","AppointmentListTable","acceptModalData","setAcceptModalData","rejectModalData","setRejectModalData","modalVisible","setModalVisible","acceptModalVisible","setAcceptModalVisible","rejectModalVisible","setRejectModalVisible","setLoading","React","rowsPerPage","setRowsPerPage","setPage","handleNotes","visible","handleAcceptModal","handleRejectModal","getCellContent","content","IconButton","Badge","badgeContent","addNotes","handleOpenNewNotes","viewNotes","status","user","role","fontSize","Chip","scheduleAppointment","CustomTable","handleChangePage","event","newPage","handleChangeRowsPerPage","CustomHeadCell","meta","TableCell","align","CustomBodyCell","row","scope","fetchData","counsellor","cancell_reason","ClientSearchFilter","searchClient","filterClient","fetchClientList","searchResult","useAuth","Gender","Ethnicity","setType","ethnicity","gender","queryData","setQueryData","queryRef","filterValueGender","UpcomingList","sessionInfo","setSessionInfo","setSearchResult","openModal","setOpenModal","msg","setMsg","fetchUpcomingList","td_start","startOf","isAfter","res","checkTimeDiffBetween","formatSessions","getSession","sessions","response","forEach","client","traumas","trauma_code","join","getTrauma","obj","client_id","clientName","gender_bio","sessionHours","duration","formatTime","view_notes","center_id","routeSegments","pageNumber"],"mappings":"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","file":"static/js/32.82b6c146.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    Grid, Card, Button,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Box,\n    DialogActions,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n\n    Modal,\n    Typography,\n} from '@mui/material'\nimport { styled, useTheme } from '@mui/system'\nimport moment from 'moment'\nimport useStateRef from 'react-usestateref'\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    // marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}))\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px'\n}\nconst NotesModal = (props) => {\n    const [clientId, setClientId] = useState('')\n    const [notes, setNotes, notesRef] = useStateRef([])\n    const [select, setSelect] = useState('')\n    const [sessionData, setSessionData] = useState([])\n    const [sessionId, setSessionId] = useState('')\n\n    const closeModal = () => {\n        setSelect('')\n        setNotes([])\n        setSessionData([])\n        props.handleClose();\n    }\n    function formatNotes(data) {\n        let notes = []\n        data && data.map((item) => {\n            notes.push(item.attributes)\n        })\n        return notes\n    }\n\n    function handleSession(e) {\n        // setSessionId(data)\n        setSelect(e.target.value)\n        const result = sessionData.filter(item => item.attributes.session_id == e.target.value);\n        if (result) {\n            result[0].attributes.notes.data.sort(function (a, b) {\n                return new Date(b.updatedAt) - new Date(a.updatedAt)\n            })\n            setNotes(formatNotes(result[0].attributes.notes.data))\n        }\n        console.log(notesRef.current)\n        // setNotes(result[0].attributes.notes && )\n    }\n\n    useEffect(() => {\n\n        if (props.data) {\n            setClientId(props.data.clientId)\n            setSessionId(props.data.sessionId)\n            props.multipleSession && props.data.notes && setSessionData(props.data.notes)\n            if (!props.multipleSession) {\n                props.data.notes && props.data.notes.sort(function (a, b) {\n                    return new Date(b.updatedAt) - new Date(a.updatedAt)\n                })\n                setNotes(props.data.notes)\n            }\n        }\n    }, [props])\n\n    const handleMaxWidthChange = (event) => {\n        console.log('fadfs')\n    };\n    return (\n        <React.Fragment>\n\n            <Dialog\n                fullWidth={true}\n                maxWidth=\"sm\"\n                open={props.open}\n                onClose={closeModal}\n            >\n                <DialogTitle>Notes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Client : {clientId}\n                    </DialogContentText>\n                    {props.multipleSession && (\n                        <Box\n                            noValidate\n                            component=\"form\"\n                            lg={12} md={6} sm={12} xs={12}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                //   alignItems: 'flex-start',\n                                //   m: 'auto',\n                                width: '50%',\n                            }}\n                        >\n                            <FormControl sx={{ mt: 2, minWidth: 120 }}>\n                                <InputLabel htmlFor=\"max-width\">Select Session</InputLabel>\n                                <Select\n                                    autoFocus\n                                    value={select}\n                                    onChange={handleSession}\n                                    label=\"Select Session\"\n                                    inputProps={{\n                                        name: 'max-width',\n                                        id: 'max-width',\n                                    }}\n                                >\n                                    {/* <MenuItem value=\"\">None</MenuItem> */}\n                                    {sessionData && sessionData.map((item, index) => {\n                                        return <MenuItem key={index} value={item.attributes.session_id}>{`${item.attributes.session_id} - ${moment(item.attributes.scheduled_at).format('DD MMMM, YYYY')}`}</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    )}\n                    <DialogContentText>\n                        {notesRef.current && notesRef.current.map((item, index) => (\n                            <Grid item lg={12} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\n                                <TextField\n                                    key={`${index}`}\n                                    fullWidth\n                                    multiline\n                                    rows={3}\n                                    inputProps={{ readOnly: true }}\n                                    defaultValue={item.details}\n                                />\n                                <Grid container style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Grid >{item.added_by}</Grid>\n                                    <Grid >{moment(item.updatedAt).format('DD/MM/YYYY hh:mm A')}</Grid>\n\n                                </Grid>\n                            </Grid>\n                        ))}\n                        {!notes && sessionData && <Grid mt={2}>No Record Found</Grid>}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" type=\"submit\" onClick={closeModal}>Close</Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nexport default NotesModal","import React from 'react'\nimport {\n    Grid,\n    Button,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './common.css'\n\nconst SearchFilter = (props) => {\n    const renderMenuItem = (key) => {\n        if (key == 'Gender') {\n            return props.genderValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            })\n        } else {\n            return props.filterValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            }\n            )\n        }\n    }\n    const renderFilters = () => {\n        if (props.multiFilter) {\n            return Object.entries(props.type).map(([key, value], i) => {\n                return <Grid item lg={6} md={6} sm={12} xs={12} key={`${i}`}>\n                    <Box>\n                        <FormControl fullWidth>\n                            <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{key}</InputLabel>\n                            <Select\n                                id=\"demo-simple-select\"\n                                value={key == 'Gender' ? props.genderSelectValue : props.selectValue}\n                                label=\"Age\"\n                                onChange={(e) => props.handleChange(e, key)}\n                                placeholder=\"Search Center\"\n                            >\n                                {renderMenuItem(key)}\n                            </Select>\n                        </FormControl>\n                    </Box>\n                </Grid>\n            }\n            )\n        } else {\n            return <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{props.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={props.selectValue}\n                            label=\"Age\"\n                            onChange={(e) => props.handleChange(e)}\n                            placeholder=\"Search Center\"\n                        >\n                            {props.filterValue && props.filterValue.map((item, index) => {\n                                return <MenuItem key={index} value={item}>{item}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n        }\n    }\n    return (\n        <>\n            <Grid sx={{ marginTop: '0px', marginBottom: '20px' }} container rowSpacing={3} columnSpacing={6}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {/* <FormControl fullWidth> */}\n                        <TextField\n                            sx={{width: '100%'}}\n                            label={props.searchLabel}\n                            variant=\"outlined\"\n                            // className=\"client-search\"\n                            onChange={props.handleSearch}\n                            \n                            placeholder={props.searchLabel}\n                            type=\"text\"\n                            value={props.searchValue}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: <SearchIcon />,\n                            }}\n                        />\n                    {/* </FormControl> */}\n                </Grid>\n                {renderFilters()}\n            </Grid>\n            <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n                <Button\n                    color=\"primary\"\n                    variant='contained'\n                    onClick={props.handleReset}\n                    sx={{ alignSelf: 'flex-end' }}\n                >\n                    Reset\n                </Button>\n            </FormControl>\n        </>\n\n    )\n}\n\nexport default SearchFilter","import React, { useEffect, useState } from 'react'\nimport {\n    Box,\n    Button,\n    Modal,\n    Typography,\n    CircularProgress,\n    Grid,\n    TextField,\n} from '@mui/material'\n\nimport { styled } from '@mui/system'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    bottom: '38px',\n    right: '60px',\n}))\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px',\n}\n\nconst AcceptModal = (props) => {\n    const [sessionId, setSessionId] = useState('')\n    const [clientId, setClientId] = useState('')\n    const [center, setCenter] = useState('')\n    const [data, setData] = useState()\n\n    // const closeModal = () => {\n    //     props.handleClose()\n    // }\n\n    function handleSubmit(e, data) {\n        props.handleSubmit(e, data)\n    }\n\n    useEffect(() => {\n        ValidatorForm.addValidationRule('REQUIRED', (value) => {\n            if (value.length === 0) {\n                return false\n            }\n            return true\n        })\n        if (props.data) {\n            console.log(props.data)\n            setSessionId(props.data.sessionId)\n            setCenter(props.data.center)\n            setClientId(props.data.clientId)\n            setData(props.data)\n        }\n        return () => {\n            ValidatorForm.removeValidationRule('REQUIRED')\n        }\n    }, [props])\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <ValidatorForm\n                        // ref={formEl}\n                        onSubmit={(e) => handleSubmit(e, props)}\n                        onError={() => null}\n                    >\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"h6\"\n                            component=\"h2\"\n                        >\n                            Confirm this appointment\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Appointment ID : {sessionId}\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Client ID : {clientId}\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Center : {center}\n                        </Typography>\n                        <Box sx={{ minWidth: 500, mb: 2 }}>\n                            {data && (\n                                <Grid container spacing={3}>\n                                    <Grid\n                                        item\n                                        lg={12}\n                                        md={6}\n                                        sm={12}\n                                        xs={12}\n                                        sx={{ mt: 2 }}\n                                    >\n                                        <TextField\n                                            fullWidth\n                                            label=\"Scheduled At\"\n                                            inputProps={{ readOnly: true }}\n                                            value={data.scheduledAt}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'table',\n                                marginLeft: 'auto',\n                                marginRight: '0px',\n                            }}\n                        >\n                            <Button\n                                color=\"error\"\n                                variant=\"contained\"\n                                onClick={() => {\n                                    // dispatch(resetClient())\n                                    props.handleClose()\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                disabled={props.loading}\n                                sx={{ ml: 2 }}\n                                type=\"submit\"\n                                variant=\"contained\"\n                            >\n                                Accept\n                            </Button>\n                            {props.loading && (\n                                <StyledProgress\n                                    size={24}\n                                    className=\"buttonProgress\"\n                                />\n                            )}\n                        </Box>\n                    </ValidatorForm>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AcceptModal\n","import React, { useRef, useState, useEffect } from 'react'\n// import MenuItem from '@mui/material/MenuItem'\nimport { styled } from '@mui/system'\nimport FormControl from '@mui/material/FormControl'\nimport {\n    Box,\n    Button,\n    Modal,\n    Typography,\n    CircularProgress,\n    Grid,\n    TextField\n} from '@mui/material'\n\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport moment from 'moment'\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    bottom: '38px',\n    right: '60px',\n}))\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px'\n}\n\nconst RejectModal = (props) => {\n    const [sessionId, setSessionId] = useState('')\n    const [clientId, setClientId] = useState('')\n    const [center, setCenter] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState()\n    const [rejectReason, setRejectReason] = useState('')\n    const [error, setError] = useState(false)\n    const closeModal = () => {\n        setRejectReason('')\n        setError('')\n        props.handleClose();\n    }\n    function handleSubmit(e, data) {\n        console.log(rejectReason)\n        if (rejectReason.length === 0) {\n            setError(true)\n            return\n        }\n        setError(false)\n        props.handleSubmit(data, rejectReason)\n    }\n\n    useEffect(() => {\n\n        ValidatorForm.addValidationRule('REQUIRED', (value) => {\n            if (value.length === 0) {\n                return false;\n            }\n            return true;\n        })\n        if (props.data) {\n            console.log(props.data)\n            setSessionId(props.data.sessionId)\n            setCenter(props.data.center)\n            setClientId(props.data.clientId)\n            setData(props.data)\n            props.data && props.data.disabled && setRejectReason('Appointment cancelled, time slot not available.')\n        }\n\n        return () => {\n            ValidatorForm.removeValidationRule('REQUIRED');\n        }\n    }, [props])\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <ValidatorForm\n                        // ref={formEl}\n                        onSubmit={(e) => handleSubmit(e, props)}\n                        onError={() => null}\n                    >\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"h6\"\n                            component=\"h2\"\n                        >\n                            Reject this appointment\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Appointment ID : {sessionId}\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Client ID : {clientId}\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"body2\"\n                            component=\"h6\"\n                        >\n                            Center : {center}\n                        </Typography>\n                        <Box sx={{ minWidth: 500, mb: 2 }}>\n                            {data && (\n                                <Grid container spacing={3}>\n                                    <Grid item lg={12} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Scheduled At\"\n                                            inputProps={{ readOnly: true }}\n                                            value={data.scheduledAt}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={12} md={6} sm={12} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Reason\"\n                                            multiline\n                                            rows={4}\n                                            // inputProps={{ readOnly: true }}\n                                            // defaultValue={data.scheduledAt}\n                                            inputProps={{ readOnly: data.disabled }}\n                                            value={rejectReason}\n                                            onChange={(e) => setRejectReason(e.target.value)}\n                                            validators={['REQUIRED']}\n                                            errorMessages={['This field is required']}\n                                        />\n                                        \n                                    </Grid>\n                                    {error && (\n                                            <span style={{ marginLeft:20, color: 'red' }}>\n                                                Error: Please add the reason of cancellation\n                                            </span>\n                                        )}\n                                </Grid>\n                            )}\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'table',\n                                marginLeft: 'auto',\n                                marginRight: '0px',\n                            }}\n                        >\n                            <Button\n                                color=\"error\"\n                                variant=\"contained\"\n                                onClick={() => {\n                                    // dispatch(resetClient())\n                                    closeModal()\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                disabled={props.loading}\n                                sx={{ ml: 2 }}\n                                type=\"submit\"\n                                variant=\"contained\"\n                            >\n                                Reject\n                            </Button>\n                            {props.loading && (\n                                <StyledProgress\n                                    size={24}\n                                    className=\"buttonProgress\"\n                                />\n                            )}\n                        </Box>\n                    </ValidatorForm>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default RejectModal","import React, {useState} from 'react'\nimport {\n    Grid,\n    IconButton, Badge,\n    Button,\n    TableCell,\n    Chip\n} from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport CustomTable from '../common/CustomTable';\nimport NotesModal from '../CustomModal/NotesModal'\nimport AcceptModal from '../CustomModal/AcceptModal'\nimport RejectModal from '../CustomModal/RejectModal'\nimport { updateSessionStatus } from 'app/services/counselorService';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst AppointmentListTable = (props) => {\n    const [sessionId, setSessionId] = useState([])\n    const [acceptModalData, setAcceptModalData] = useState()\n    const [rejectModalData, setRejectModalData] = useState()\n    const [modalVisible, setModalVisible] = useState(false);\n    const [acceptModalVisible, setAcceptModalVisible] = useState(false);\n    const [rejectModalVisible, setRejectModalVisible] = useState(false);\n    const [loading, setLoading] = useState(false)\n    // const [rejectReason, setRejectReason] = useState('')\n    // const [page, setPage] = useState(0)\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(10)\n    const [page, setPage] = useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n        // if (!searchResult) {\n        //     try {\n        //         let pageNumber = (Number(newPage)) === 0 ? 0 : (Number(newPage) - 1) + 10\n        //         fetchData(pageNumber)\n        //             .then((resp) => {\n        //                 setCounsellorData(formatCounsellor(resp))\n        //                 // setRootRows(resp)\n        //             })\n        //             .catch(err => {\n        //                 console.log(\"ERROR\", err)\n        //             })\n        //     } catch (error) {\n        //         console.log(\"ERROR\", error)\n        //     }\n        // }\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    const handleSubmit = (e, data) => {\n        setLoading(true)\n        const options = {\n            data: {\n                status: 'scheduled',\n            },\n        }\n        updateSessionStatus(data.data.id, options)\n            .then((resp) => {\n                setLoading(false)\n                setAcceptModalVisible(false);\n                props.fetchData(page, props.user.counsellor.id)\n            })\n            .catch(err => console.log(err))\n    }\n    const handleRejectSubmit = (data, rejectReason) => {\n        setLoading(true)\n        const options = {\n            data: {\n                status: 'cancelled',\n                cancell_reason: rejectReason\n            },\n        }\n        updateSessionStatus(data.data.id, options)\n            .then((resp) => {\n                if (resp) {\n                    setRejectModalVisible(false);\n                    props.fetchData(page, props.user.counsellor.id)\n                }\n                setLoading(false)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleNotes = (id, visible) => {\n        setSessionId(id);\n        setModalVisible(visible);\n    }\n\n    const handleAcceptModal = (data, visible) => {\n        // setSessionId(id);\n        setAcceptModalData(data)\n        setAcceptModalVisible(visible);\n    }\n\n    const handleRejectModal = (data, visible) => {\n        // setSessionId(id);\n        setRejectModalData(data)\n        setRejectModalVisible(visible);\n    }\n\n    const viewNotes = (value) => {\n        // console.log(value)\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => handleNotes(value, true)} //props.handleOpen(value, true) }\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                        <PreviewIcon /></Badge>\n                </IconButton>\n                {props.addNotes && <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton> }\n            </div>\n        );\n    }\n    const scheduleAppointment = (value) => {\n        if (value.status === 'scheduled') {\n            return <div style={{ marginLeft: '1rem' }}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{props.user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n            // onClick={() => props.handleOpen(value, true)}\n\n        } else if (value.status === 'pending') {\n            return (\n                <div>\n                    <div style={{ marginBottom:10 }}>{`${value.scheduledAt}`}</div>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                    <Button\n                    disabled={value.disabled}\n                        variant=\"contained\"\n                        color=\"success\"\n                        style={{ marginRight: 5 }}\n                        onClick={() => handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                    >\n                        <div style={{ fontSize: '.8rem' }}>Accept</div>\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"error\"\n                        onClick={(e) => handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                    >\n                        <div style={{ fontSize: '.8rem' }}>Reject</div>\n                    </Button>\n                </div>\n                </div>\n            )\n        } else if (value.status === 'cancelled') {\n            return <div style={{ marginLeft: '1rem' }}>{`${value.scheduledAt}`}<Chip label=\"Cancelled\" size=\"small\" variant=\"outlined\" color=\"error\"/></div>\n        } else if (value.status === 'missed') {\n            return <div style={{ marginLeft: '1rem' }}>{`${value.scheduledAt}`}<Chip label=\"Missed\" size=\"small\" variant=\"outlined\" color=\"error\"/></div>\n        }\n        else {\n            return <div style={{ marginLeft: '1rem' }}>{value.scheduledAt}<Chip label={value.status === 'completed' && 'Completed' || value.status} size=\"small\" variant=\"outlined\" color=\"success\"/></div>\n        }\n    }\n\n    const getCellContent = (key, value) => {\n        let content = null;\n        switch (key) {\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value);\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            key !== 'id' && data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n        }\n        return data\n    }\n    \n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            key !== 'id' && rows.push(<TableCell className=\"text-style\" component=\"th\" scope=\"row\" align=\"center\" key={index}>{getCellContent(key, value)}</TableCell>)\n        }\n        return rows\n    }\n    return (\n        <>\n            <Grid>\n                {props.role === 'Provider' ? (\n                    <Grid>\n                        <CustomTable\n                            // onClick={props.onClick}\n                            page={page}\n                            handleChangePage={handleChangePage}\n                            rowsPerPage={rowsPerPage}\n                            handleChangeRowsPerPage={handleChangeRowsPerPage}\n                            rows={props.data}\n                            CustomHeadCell={CustomHeadCell}\n                            CustomBodyCell={CustomBodyCell}\n                        />\n                    </Grid>\n                ) : (\n                    <Grid>\n\n                    </Grid>\n                )}\n                <NotesModal\n                    open={modalVisible}\n                    data={sessionId}\n                    multipleSession={false}\n                    handleClose={() => {\n                        handleNotes(null, false);\n                        //handlePageChange(null, 0);\n                    }}\n                />\n                <AcceptModal\n                    open={acceptModalVisible}\n                    data={acceptModalData}\n                    handleClose={() => handleAcceptModal(null, false)}\n                    handleSubmit={handleSubmit}\n                    loading={loading}\n                // currentClient={currentClient}\n                />\n                <RejectModal\n                    open={rejectModalVisible}\n                    data={rejectModalData}\n                    handleClose={() => handleRejectModal(null, false)}\n                    handleSubmit={handleRejectSubmit}\n                    loading={loading}\n                // reason={rejectReason}\n                // handleReasonChange={handleReasonChange}\n                // currentClient={currentClient}\n                />\n            </Grid>\n        </>\n    )\n}\n\nexport default AppointmentListTable","import React, { useState, useEffect } from 'react';\nimport useStateRef from 'react-usestateref';\nimport SearchFilter from 'app/components/common/SearchFilter';\nimport useAuth from 'app/hooks/useAuth';\n\nexport const ClientSearchFilter = ({ searchClient, filterClient, fetchClientList, searchResult, page }) => {\n    const { user } = useAuth();\n    const [type, setType] = useState({\n        Gender: 'All',\n        Ethnicity: 'All'\n    });\n    const [queryData, setQueryData, queryRef] = useStateRef({\n        search: '',\n        ethnicity: 'All',\n        gender: 'All'\n    })\n    const [filterValue, setFilterValue] = useState([\n        'All', 'American Indian', 'Alaska Native', 'Asian', 'Black or African American', 'Hispanic or Latino', 'Native Hawaiian', 'Pacific Islander', 'White', 'Unknown'\n    ])\n    const [filterValueGender, setFilterValueGender] = useState([\n        'All', 'Male', 'Female', 'Other'\n    ])\n\n    const handleChange = ({ target: { value } }, type) => {\n        if (type == 'Gender') {\n            setQueryData({ ...queryData, gender: value })\n        } else if (type == 'Ethnicity') {\n            setQueryData({ ...queryData, ethnicity: value })\n        }\n        if (value !== 'All') {\n            searchResult(true)\n            filterClient(value, page, type);\n        }\n        else {\n            searchResult(false)\n            fetchClientList(page, user.counsellor.id)\n        }\n\n    }\n    const handleReset = () => {\n        setType({\n            Gender: 'All',\n            Ethnicity: 'All'\n        });\n        setQueryData({\n            search: '',\n            ethnicity: 'All',\n            gender: 'All'\n        });\n        fetchClientList(page, user.counsellor.id)\n    }\n\n    const handleSearch = async ({ target: { value } }) => {\n        setQueryData({ ...queryData, search: value })\n        if (value && value.length > 2) {\n            // setQueryData({ ...queryData, search: value })\n            // setSearchData({...searchData, search: value})\n            searchClient(value, type, page);\n            searchResult(true)\n        } else if (value === \"\") {\n            fetchClientList(page, user.counsellor.id);\n            searchResult(false)\n        }\n    }\n\n    return (\n        <SearchFilter\n            handleSearch={handleSearch}\n            handleChange={handleChange}\n            filterValue={filterValue}\n            genderValue={filterValueGender}\n            multiFilter={true}\n            selectValue={queryRef.current.ethnicity}\n            genderSelectValue={queryRef.current.gender}\n            searchValue={queryRef.current.search}\n            label=\"Ethnicity\"\n            searchLabel=\"Search Client\"\n            type={type}\n            handleReset={handleReset}\n        />\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Grid,\n} from '@mui/material'\nimport moment from 'moment'\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { Breadcrumb } from 'app/components';\nimport { ClientSearchFilter } from '../SearchFilter/ClientSearchFilter';\nimport AppointmentListTable from 'app/components/AppointmentListTable/AppointmentListTable';\nimport Loading from 'app/components/MatxLoading/MatxLoading';\nimport {\n    fetchSessions,\n    findSession,\n    filterSessions\n} from 'app/services/counselorService';\nimport { formatTime, checkTimeDiffBetween } from 'app/utils/utils';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport '../Clients/Clients.css'\n\n\nconst UpcomingList = () => {\n    const navigate = useNavigate();\n    const { user } = useAuth();\n    \n    const [loading, setLoading] = useState(false);\n    const [sessionInfo, setSessionInfo] = useState()\n    const [searchResult, setSearchResult] = useState(false)\n    const [page, setPage] = useState(0)\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const filterSession = (data, pageNumber, type) => {\n        setLoading(true);\n        filterSessions(data, pageNumber, user.counsellor.id, type)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            }\n            let data = []\n            const td_start = moment().startOf('hour')\n            // const td_end = moment().endOf('day')\n            resp.data.map((item) => {\n                if (moment(moment(item.attributes.scheduled_at).format('x'), 'x').isAfter(td_start)) {\n                    data.push(item)\n                }\n            })\n            data.sort(function (a, b) {\n                return new Date(a.updatedAt) - new Date(b.updatedAt)\n            })\n            setSessionInfo(formatSessions(data));\n            // setPageDetails(getMetaData(resp.meta));\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const searchSession = (data, pageNumber) => {\n        setLoading(true);\n        findSession(data, pageNumber)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            }\n            let data = []\n            const td_start = moment().startOf('hour')\n            // const td_end = moment().endOf('day')\n            resp.data.map((item) => {\n                if (moment(moment(item.attributes.scheduled_at).format('x'), 'x').isAfter(td_start)) {\n                    data.push(item)\n                }\n            })\n            data.sort(function (a, b) {\n                return new Date(a.updatedAt) - new Date(b.updatedAt)\n            })\n            setSessionInfo(formatSessions(data));\n            // setPageDetails(getMetaData(resp.meta));\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n\n    const fetchUpcomingList = async (page, user) => {\n        setLoading(true)\n        fetchSessions(page, user)\n            .then((resp) => {\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setLoading(false);\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                }\n                if (resp) {\n                    setLoading(false)\n                    console.log(resp)\n                    let data = []\n                    const td_start = moment().startOf('minute')\n                    // const td_end = moment().endOf('day')\n                    resp.data.map((item) => {\n                        if (moment(moment(item.attributes.scheduled_at).format('x'), 'x').isAfter(td_start)) {\n                            const res = item.attributes.status === 'pending' && checkTimeDiffBetween(item, resp.data) || false\n                            item.disabled = res.length > 0 ? true : false\n                            data.push(item)\n                        }\n                    })\n                    data.sort(function (a, b) {\n                        return new Date(a.updatedAt) - new Date(b.updatedAt)\n                    })\n                    setSessionInfo(formatSessions(data))\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    const getTrauma = (data) => {\n        let traumaCode\n        // console.log(data)\n        const code = data.map((item) => {\n            return item.attributes.trauma_code\n        })\n        traumaCode = code.join(', ')\n\n        return traumaCode\n    }\n\n    const getSession = (data, clientId, center) => {\n        let sessions = data.attributes ? data.attributes : null\n        let obj = {\n            id: data.id,\n            status : sessions.status,\n            scheduledAt: `${moment(sessions.scheduled_at).format('DD MMMM, YYYY hh:mm A')}`,\n            sessionId: sessions.session_id,\n            clientId: clientId,\n            center: center,\n            disabled: data.disabled\n        }\n        return obj\n        // sessions.scheduled_at && sessions.status == 'scheduled' ? `${moment(sessions.scheduled_at).format('DD MMMM, YYYY hh:mm')} CST` : (sessions.status == 'pending' ? 'pending' : sessions.status == 'cancelled' ? 'Cancelled' : '-')\n    }\n\n    const formatSessions = (data) => {\n        let response = [];\n        const meta = {\n            id: \"ID\",\n            clientId: \"Client ID\",\n            clientName: \"Record Name\",\n            center: \"Center\",\n            // counsellor: \"Counselor\",\n            gender: \"Birth Gender\",\n            // idGender: \"ID Gender\",\n            traumas: \"Trauma\",\n            ethnicity: \"Ethnicity\",\n            // sessionCount: \"Sessions\",\n            sessionHours: \"Duration\",\n            scheduledAt : 'Scheduled',\n            view_notes: \"Notes\"\n\n        }\n        console.log(data)\n        data.forEach((item) => {\n            let client = item.attributes.client?.data ? item.attributes.client?.data.attributes : null\n            let center = item.attributes.center?.data ? item.attributes.center.data.attributes : null\n            let sessions = item.attributes ? item.attributes : null\n            let notes = item.attributes.notes ? item.attributes.notes : null\n            \n            let traumas = client.traumas ? getTrauma(client.traumas.data) : ''\n            const obj = {\n                id: item.id,\n                clientId: client.client_id,\n                clientName: client.name,\n                center: center ? center.name : '',\n                // counsellor: counsellor ? counsellor.name : '',\n                gender: client.gender_bio,\n                // idGender: client.gender_identified,\n                traumas: traumas,\n                ethnicity: client.ethnicity ? client.ethnicity : '',\n                // sessionCount: sessions.data.length > 0 ? sessions.data.length : '-',\n                // sessionHours: sessions.data.length > 0 ? getSessionHours(sessions.data.length, sessions.data) : '-',\n                sessionHours: sessions.duration ? formatTime(sessions.duration) : '0',\n                scheduledAt: getSession(item,client.client_id, center.name),\n                view_notes: {\n                    clientId: client.client_id,\n                    clientName: client.name,\n                    sessionId: sessions.session_id ? sessions.session_id : '-',\n                    center_id: center ? center.center_id : '-',\n                    notes: notes?.data?.length > 0 ? formatNotes(notes?.data) : ''\n                    // owned_by: item.attributes.owned_by,\n                },\n            };\n            response.push(obj)\n        })\n        response['meta'] = meta\n        return response;\n    }\n\n    function formatNotes(data) {\n        let notes = []\n        data && data.map((item) => {\n            notes.push(item.attributes)\n        })\n        return notes\n    }\n\n    useEffect(() => {\n        // console.log(modalVisible)\n        fetchUpcomingList(page, user.counsellor.id)\n    }, [])\n    return (\n        <Grid className=\"client-container\">\n            <Grid className=\"client-breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'Upcoming Appointments' }]} />\n            </Grid>\n            <ClientSearchFilter \n                filterClient={filterSession}\n                fetchClientList={fetchUpcomingList}\n                searchResult={setSearchResult}\n                searchClient={searchSession}\n                page={page}\n            />\n            {sessionInfo &&\n                <AppointmentListTable\n                    role={user.role.name}\n                    data={sessionInfo}\n                    loading={setLoading}\n                    fetchData={fetchUpcomingList}\n                    user={user}\n                    // getCellContent={getCellContent}\n                    // onClick={goToDetails}\n                />\n            }\n\n            {\n                loading &&\n                <Loading />\n            }\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </Grid>\n    )\n}\n\nexport default UpcomingList"],"sourceRoot":""}