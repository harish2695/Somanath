{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","app/views/sessions/login/JwtLogin.jsx"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","overridesResolver","styles","label","labelPlacement","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","flexDirection","color","vars","palette","text","FormControlLabel","inProps","useThemeProps","componentsProps","control","disableTypography","labelProp","controlProps","forEach","key","fcs","formControlState","states","error","Typography","typography","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","FlexBox","Box","JustifyBox","justifyContent","ContentBox","background","IMG","JWTRoot","minHeight","maxWidth","StyledProgress","CircularProgress","JwtLogin","navigate","useNavigate","useState","loading","setLoading","email","password","agreement","userInfo","setUserInfo","message","login","useAuth","useEffect","ValidatorForm","addValidationRule","length","removeValidationRule","handleChange","temp","useTheme","textError","textPrimary","primary","handleFormSubmit","a","console","log","toast","container","item","lg","md","sm","xs","p","src","alt","onSubmit","sx","mb","variant","validators","errorMessages","flexWrap","onClick","autoClose","hideProgressBar","newestOnTop"],"mappings":"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","file":"static/js/60.01846bc2.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import {\n    Card,\n    Grid,\n    Button,\n    Checkbox,\n    CircularProgress,\n    FormControlLabel,\n} from '@mui/material'\nimport React, { useState, useEffect } from 'react'\nimport useAuth from 'app/hooks/useAuth'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\nimport { Paragraph, Span } from 'app/components/Typography';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    justifyContent: 'center',\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    padding: '32px',\n    position: 'relative',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n    background: '#1A2038',\n    minHeight: '100% !important',\n    '& .card': {\n        maxWidth: 800,\n        borderRadius: 12,\n        margin: '1rem',\n    },\n}))\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    top: '6px',\n    left: '25px',\n}))\n\nconst JwtLogin = () => {\n    const navigate = useNavigate()\n    const [loading, setLoading] = useState(false)\n    const [userInfo, setUserInfo] = useState({\n        email: '',\n        password: '',\n        agreement: false\n    })\n    const [message, setMessage] = useState('')\n    const { login } = useAuth()\n\n    useEffect(() => {\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            if (value.length < 6) {\n                return false;\n            }\n            return true;\n        }); \n\n        return () => {\n            // remove rule when it is not needed\n            ValidatorForm.removeValidationRule('isPasswordMatch');\n        }\n    },[]);\n\n    const handleChange = ({ target: { name, value } }) => {\n        let temp = { ...userInfo }\n        temp[name] = value\n        setUserInfo(temp)\n    }\n\n    const { palette } = useTheme()\n    const textError = palette.error.main\n    const textPrimary = palette.primary.main\n\n    const handleFormSubmit = async (event) => {\n        setLoading(true)\n        try {\n            await login(userInfo.email, userInfo.password);\n            navigate('/')\n        } catch (e) {\n            console.log(e)\n            // setMessage(e.message)\n            setLoading(false)\n            toast.error(e, {\n                theme: 'colored'\n            });\n        }\n    }\n\n    return (\n        <JWTRoot>\n            <Card className=\"card\">\n                <Grid container>\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <JustifyBox p={4} height=\"100%\">\n                            <IMG\n                                src=\"/assets/images/illustrations/dreamer.svg\"\n                                alt=\"\"\n                            />\n                        </JustifyBox>\n                    </Grid>\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\n                        <ContentBox>\n                            <ValidatorForm onSubmit={handleFormSubmit}>\n                                <TextValidator\n                                    sx={{ mb: 3, width: '100%' }}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"Email or Username\"\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    name=\"email\"\n                                    value={userInfo.email}\n                                    validators={['required']}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'email is not valid',\n                                    ]}\n                                />\n                                <TextValidator\n                                    sx={{ mb: '12px', width: '100%' }}\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={handleChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={userInfo.password}\n                                    validators={['required', 'isPasswordMatch']}\n                                    errorMessages={['This field is required', 'Password should be atleast 6 characters']}\n                                />\n                                <FormControlLabel\n                                    sx={{ mb: '12px', maxWidth: 288 }}\n                                    name=\"agreement\"\n                                    onChange={handleChange}\n                                    control={\n                                        <Checkbox\n                                            size=\"small\"\n                                            onChange={({\n                                                target: { checked },\n                                            }) =>\n                                                handleChange({\n                                                    target: {\n                                                        name: 'agreement',\n                                                        value: checked,\n                                                    },\n                                                })\n                                            }\n                                            checked={userInfo.agreement}\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n\n                                {message && (\n                                    <Paragraph sx={{ color: textError }}>\n                                        {message}\n                                    </Paragraph>\n                                )}\n\n                                <FlexBox mb={2} flexWrap=\"wrap\">\n                                    <Box position=\"relative\">\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            disabled={loading}\n                                            type=\"submit\"\n                                        >\n                                            Sign in\n                                        </Button>\n                                        {loading && (\n                                            <StyledProgress\n                                                size={24}\n                                                className=\"buttonProgress\"\n                                            />\n                                        )}\n                                    </Box>\n                                    {/* <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\n                                    <Button\n                                        sx={{ textTransform: 'capitalize' }}\n                                        onClick={() =>\n                                            navigate('/session/signup')\n                                        }\n                                    >\n                                        Sign up\n                                    </Button> */}\n                                </FlexBox>\n                                <Button\n                                    sx={{ color: textPrimary }}\n                                    onClick={() =>\n                                        navigate('/session/forgot-password')\n                                    }\n                                >\n                                    Forgot password?\n                                </Button>\n                            </ValidatorForm>\n                        </ContentBox>\n                    </Grid>\n                </Grid>\n            </Card>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n            />\n        </JWTRoot>\n    )\n}\n\nexport default JwtLogin\n"],"sourceRoot":""}