{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","ForgotPasswordRoot","width","minHeight","maxWidth","borderRadius","margin","ForgotPassword","navigate","useNavigate","useState","state","setState","email","className","sx","container","item","lg","md","sm","xs","onSubmit","event","sendPasswordOnEmail","then","resp","status","toast","success","message","theme","error","catch","err","mb","variant","label","onChange","target","name","value","type","size","validators","errorMessages","color","mr","ml","textTransform","onClick","autoClose","hideProgressBar","newestOnTop"],"mappings":"gQAUMA,EAAUC,YAAOC,IAAPD,EAAY,iBAAO,CAC/BE,QAAS,OACTC,WAAY,aAGVC,EAAaJ,YAAOD,EAAPC,EAAgB,iBAAO,CACtCK,eAAgB,aAGdC,EAAaN,YAAOC,IAAPD,EAAY,iBAAO,CAClCO,OAAQ,OACRC,QAAS,OACTC,SAAU,WACVC,WAAY,0BAOVC,GAJMX,YAAO,MAAPA,EAAc,iBAAO,CAC7BY,MAAO,WAGgBZ,YAAOI,EAAPJ,EAAmB,iBAAO,CACjDU,WAAY,UACZG,UAAW,mBACX,UAAW,CACPC,SAAU,IACVC,aAAc,GACdC,OAAQ,aAiGDC,UA7FQ,WACnB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KA4BMC,EAAUF,EAAVE,MAEN,OACI,eAACZ,EAAD,WACI,cAAC,IAAD,CAAMa,UAAU,OAAOC,GAAI,CAAEb,MAAO,SAApC,SACI,cAAC,IAAD,CAAMc,WAAS,EAAf,SASI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAvC,SACI,cAACzB,EAAD,UACI,eAAC,gBAAD,CAAe0B,SAnCd,SAACC,GACtBC,YAAoBb,GACnBc,MAAK,SAAAC,GACEA,GAAwB,YAAhBA,EAAKC,OACbC,IAAMC,QAAQH,EAAKI,QAAS,CACxBC,MAAO,YAEJL,GAAwB,SAAhBA,EAAKC,QACpBC,IAAMI,MAAMN,EAAKI,QAAS,CACtBC,MAAO,eAGhBE,OAAM,SAAAC,GACLN,IAAMI,MAAM,uBAAwB,CACpCD,MAAO,gBAqBS,UACI,cAAC,gBAAD,CACIhB,GAAI,CAAEoB,GAAI,EAAGjC,MAAO,QACpBkC,QAAQ,WACRC,MAAM,QACNC,SA/CX,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpC7B,EAAS,2BACFD,GADC,kBAEH6B,EAAOC,MA6CgBC,KAAK,QACLF,KAAK,QACLG,KAAK,QACLF,MAAO5B,GAAS,GAChB+B,WAAY,CAAC,WAAY,WACzBC,cAAe,CACX,yBACA,wBAGR,eAACxD,EAAD,WACI,cAAC,IAAD,CACI+C,QAAQ,YACRU,MAAM,UACNJ,KAAK,SAHT,4BAOA,cAAC,IAAD,CAAM3B,GAAI,CAAEgC,GAAI,EAAGC,GAAI,QAAvB,gBACA,cAAC,IAAD,CACIjC,GAAI,CAAEkC,cAAe,cACrBC,QAAS,kBAAM1C,EAAS,oBAF5B,mCAYxB,cAAC,IAAD,CACIT,SAAS,aACToD,UAAW,IACXC,iBAAiB,EACjBC,aAAa","file":"static/js/85.4472f79f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Box, styled } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport { Span } from 'app/components/Typography'\nimport { Card, Grid, Button } from '@mui/material'\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\nimport { sendPasswordOnEmail } from 'app/services/userService';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    justifyContent: 'center',\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    padding: '32px',\n    position: 'relative',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst ForgotPasswordRoot = styled(JustifyBox)(() => ({\n    background: '#1A2038',\n    minHeight: '100vh !important',\n    '& .card': {\n        maxWidth: 800,\n        borderRadius: 12,\n        margin: '1rem',\n    },\n}))\n\nconst ForgotPassword = () => {\n    const navigate = useNavigate()\n    const [state, setState] = useState({})\n\n    const handleChange = ({ target: { name, value } }) => {\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        sendPasswordOnEmail(state)\n        .then(resp => {\n            if (resp && resp.status === 'success') {\n                toast.success(resp.message, {\n                    theme: 'colored'\n                })\n            } else if (resp && resp.status === 'fail') {\n                toast.error(resp.message, {\n                    theme: 'colored'\n                })\n            }\n        }).catch(err => {\n            toast.error('Something went wrong', {\n            theme: 'colored'\n            })\n        })\n    }\n\n    let { email } = state\n\n    return (\n        <ForgotPasswordRoot>\n            <Card className=\"card\" sx={{ width: '360px' }}>\n                <Grid container>\n                    {/* <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <JustifyBox p={4} height=\"100%\">\n                            <IMG\n                                src=\"/assets/images/illustrations/dreamer.svg\"\n                                alt=\"\"\n                            />\n                        </JustifyBox>\n                    </Grid> */}\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\n                        <ContentBox>\n                            <ValidatorForm onSubmit={handleFormSubmit}>\n                                <TextValidator\n                                    sx={{ mb: 3, width: '100%' }}\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    size=\"small\"\n                                    value={email || ''}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={[\n                                        'This field is required',\n                                        'email is not valid',\n                                    ]}\n                                />\n                                <FlexBox>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                    >\n                                        Reset Password\n                                    </Button>\n                                    <Span sx={{ mr: 1, ml: '16px' }}>or</Span>\n                                    <Button\n                                        sx={{ textTransform: 'capitalize' }}\n                                        onClick={() => navigate(\"/session/signin\")}\n                                    >\n                                        Sign in\n                                    </Button>\n                                </FlexBox>\n                            </ValidatorForm>\n                        </ContentBox>\n                    </Grid>\n                </Grid>\n            </Card>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n            />\n        </ForgotPasswordRoot>\n    )\n}\n\nexport default ForgotPassword\n"],"sourceRoot":""}