{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/counselorService.js","app/utils/counseler.data.formater.js","app/views/Calender/AppointmentDetailsModal.jsx","app/views/Calender/MyCalender.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","getTraumas","map","item","trauma_code","join","getSession","clientId","center","sessions","status","moment","scheduled_at","format","isBefore","startOf","scheduledAt","sessionId","session_id","disabled","formatSession","response","meta","name","gender","traumas","ethnicity","view_notes","forEach","obj","client","client_id","gender_bio","clientName","center_id","notes","push","clinicianMeta","clininicain_id","profesional_name","first_name","last_name","clients","disable_provider","formatClinicians","Array","isArray","cliniciansData","clinicId","attributes","user","username","length","provider_id","blocked","formatSessions","SessionData","title","start","toDate","end","add","session","StyledProgress","CircularProgress","bottom","right","reject","borderRadius","accept","styles","padding","flexWrap","titleStyle","cursor","fontSize","fontWeight","lineHeight","maxHeight","AppointmentDetailsModal","props","React","useState","loading","setLoading","rejectReason","setRejectReason","error","setError","showReject","setShowReject","showAccept","setShowAccept","useEffect","ValidatorForm","addValidationRule","value","removeValidationRule","Modal","handleClose","Box","onSubmit","event","handleSubmit","onError","Typography","minWidth","mb","Grid","container","spacing","lg","md","sm","xs","mt","TextField","fullWidth","label","inputProps","readOnly","marginLeft","marginRight","ml","size","className","cancell_reason","multiline","rows","onChange","e","target","validators","margin","renderStatus","textAlign","marginBottom","localizer","momentLocalizer","MyCalender","useAuth","events","setEvents","setOpen","succes","setSuccess","message","setMessage","currentEvent","setCurrentEvent","openModal","setOpenModal","msg","setMsg","counsellor","res","evnts","height","views","day","week","month","step","defaultDate","Date","onSelectEvent","popup","eventPropGetter","isSelected","masg","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity"],"mappings":"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","file":"static/js/45.3a0b8d54.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import moment from 'moment';\n\nfunction getTraumas(data){\n    let traumaCode = ''\n    const code = data.map((item) => {\n        return item.trauma_code\n    })\n    traumaCode = code.join(', ')\n    return traumaCode\n}\n\nconst getSession = (data, clientId, center,type) => {\n    let sessions = data ? data : null\n    let obj\n    if(type && type === 'upcoming'){\n        obj = {\n            id: data.id,\n            status : sessions.status === 'scheduled' && moment(moment(sessions.scheduled_at).format('x'), 'x').isBefore(moment().startOf('second')) && 'missed' || sessions.status,\n            scheduledAt: `${moment(sessions.scheduled_at).format('DD MMMM, YYYY hh:mm A')}`,\n            sessionId: sessions.session_id,\n            clientId: clientId,\n            center: center,\n            disabled: data.disabled\n        }\n    } else {\n        obj = {\n            id: data.id,\n            status : (sessions.status === 'scheduled' || sessions.status === 'pending') && 'missed' || sessions.status,\n            scheduledAt: `${moment(sessions.scheduled_at).format('DD MMMM, YYYY hh:mm A')}`,\n            sessionId: sessions.session_id,\n            clientId: clientId,\n            center: center,\n            disabled: data.disabled\n        }\n    }\n    \n    return obj\n    // sessions.scheduled_at && sessions.status == 'scheduled' ? `${moment(sessions.scheduled_at).format('DD MMMM, YYYY hh:mm')} CST` : (sessions.status == 'pending' ? 'pending' : sessions.status == 'cancelled' ? 'Cancelled' : '-')\n}\nexport function formatSession(data,type = null) {\n    let response = [];\n    const meta = {\n        // id: \"ID\",\n        clientId: \"Client ID\",\n        name: \"Record Name\",\n        center: \"Center\",\n        gender: \"Birth Gender\",\n        // idGender: \"ID Gender\",\n        traumas: \"Trauma Codes\",\n        ethnicity: \"Ethnicity\",\n        scheduledAt: \"Scheduled\",\n        view_notes: \"Notes\"\n\n    }\n    data.forEach((item) => {\n        const obj = {\n            // id: item.id,\n            clientId: item?.client?.client_id,\n            name: item?.client?.name,\n            center: item?.center?.name,\n            gender: item?.client?.gender_bio,\n            // idGender: item.client.gender_identified,\n            traumas: item?.client?.traumas ? getTraumas(item?.client?.traumas) : '',\n            ethnicity: item?.client?.ethnicity ? item?.client?.ethnicity : '',\n            // scheduledAt: item.scheduled_at && item.status !== 'pending' ? moment(item.scheduled_at).format('DD MMMM, YYYY hh:mm') + ' CST' : 'pending',\n            scheduledAt: getSession(item,item?.client?.client_id, item?.center?.name, type),\n            // view_notes: item.notes ? item.notes : ''\n            view_notes: {\n                clientId: item?.client?.client_id,\n                clientName: item?.client?.name,\n                sessionId:item?.id,\n                center_id: item?.center?.id,\n                notes: item?.notes\n                // owned_by: item.attributes.owned_by,\n            },\n        };\n        response.push(obj)\n    })\n    response['meta']= meta\n    return response;\n}\n\nconst clinicianMeta = {\n    clininicain_id: \"Provider ID\",\n    profesional_name: \"Professional Name\",\n    first_name: 'First Name',\n    last_name: \"Last Name\",\n    traumas: \"Trauma Codes\",\n    status: \"Status\",\n    clients:\"Clients\",\n    sessions: \"Sessions\",\n    disable_provider: \"Disable Provider\"\n}\n\nexport function formatClinicians(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(cliniciansData(item))\n        })\n        response['meta'] = clinicianMeta;\n    } else {\n        response.push(cliniciansData(data))\n    }\n    return response\n}\n\nfunction getTraumaCodes(data) {\n    let traumaCode = ''\n    const code = data.map((item) => {\n        return item.attributes.trauma_code\n    })\n    traumaCode = code.join(', ')\n    return traumaCode\n}\n\nfunction cliniciansData(item) {\n    const obj = {\n        clinicId:item?.id || \"-\",\n        clininicain_id: (item && item.attributes?.user?.data?.attributes?.username) || '-',\n        profesional_name: (item && item.attributes && item.attributes.name) || '-',\n        first_name: (item && item.attributes && item.attributes.first_name) || '-',\n        last_name:(item && item.attributes && item.attributes.last_name) || '-',\n        traumas:(item && item.attributes && item.attributes.traumas && getTraumaCodes(item.attributes.traumas?.data)) || '-',\n        status: item?.attributes?.status || \"-\",\n        clients:(item && item.attributes && item.attributes.clients && item.attributes.clients.data && item.attributes.clients.data?.length) || '-',\n        sessions:(item && item.attributes && item.attributes.sessions && item.attributes.sessions.data && item.attributes.sessions?.data?.length) || '-',\n        disable_provider: {\n            provider_id: item?.id,\n            disabled: item?.attributes?.user?.data?.attributes?.blocked || false\n        }\n    }\n\n    return obj;\n}\n\n\nexport function formatSessions(data){\n    const sessions = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            sessions.push(SessionData(item))\n        })\n    } else {\n        sessions.push(SessionData(data))\n    }\n    return sessions\n}\nfunction SessionData(item) {\n    const obj = {\n        title: (item?.client?.name+\"-\"+item?.client?.client_id) || \"Anonymous\", \n        start: moment(item?.scheduled_at).toDate(),\n        end: moment(item?.scheduled_at).add(50,'minutes').toDate(),\n        session:item\n    }\n    return obj\n}","import React from 'react'\nimport { Box, Button, Modal } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ScheduleIcon from '@mui/icons-material/Schedule'\nimport EventNoteIcon from '@mui/icons-material/EventNote'\nimport TimelapseIcon from '@mui/icons-material/Timelapse'\nimport moment from 'moment'\nimport { updateSessionStatus } from 'app/services/counselorService'\n\n// import MenuItem from '@mui/material/MenuItem'\nimport { styled } from '@mui/system'\nimport { Typography, CircularProgress, Grid, TextField } from '@mui/material'\n\nimport { ValidatorForm } from 'react-material-ui-form-validator'\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    bottom: '38px',\n    right: '60px',\n}))\n\nconst reject = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px',\n}\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n}\nconst accept = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px',\n}\n\nconst styles = {\n    display: 'flex',\n    padding: '10px',\n    flexWrap: 'wrap',\n    justifyContent: 'end',\n}\nconst titleStyle = {\n    cursor: 'default',\n    fontSize: '20px',\n    fontWeight: '500',\n    lineHeight: 1.5,\n    maxHeight: '87px',\n    color: '#fff',\n}\n\nconst AppointmentDetailsModal = (props) => {\n    const [loading, setLoading] = React.useState(false)\n    const [rejectReason, setRejectReason] = React.useState('')\n    const [error, setError] = React.useState(false)\n    const [showReject, setShowReject] = React.useState(false)\n    const [showAccept, setShowAccept] = React.useState(false)\n\n    const renderStatus = () => {\n        if (props.event.session.status === 'completed') {\n            return <p style={{ color: '#efa80d' }}>Completed</p>\n        } else if (props.event.session.status === 'cancelled') {\n            return <p style={{ color: '#f60a0a' }}>Canceled</p>\n        } else if (moment(props?.event?.session?.scheduled_at) < moment()) {\n            return <p style={{ color: 'orange' }}>Expired</p>\n        } else if (\n            moment(props.event?.session?.scheduled_at) > moment() &&\n            props.event?.session?.status === 'pending'\n        ) {\n            return <p style={{ color: '#3f51b5' }}>Pending approval</p>\n        } else if (\n            moment(props.event?.session?.scheduled_at >= moment().add(1, 'day'))\n        ) {\n            return <p style={{ color: '#3f51b5' }}>Upcoming session</p>\n        } else {\n            return <p>unknown</p>\n        }\n    }\n\n    const handleSubmit = () => {\n        setLoading(true)\n        const options = {\n            data: {\n                status: 'scheduled',\n            },\n        }\n        updateSessionStatus(props.event?.session?.id, options)\n            .then((resp) => {\n                setLoading(false)\n                setShowAccept(false)\n                setShowReject(false)\n                props.handleSubmit(\"Appointment successfully scheduled\")\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleReject = () => {\n        console.log(rejectReason)\n        if (rejectReason.length === 0) {\n            setError(true)\n            return\n        }\n        setError(false)\n        setLoading(true)\n        const options = {\n            data: {\n                status: 'cancelled',\n                cancell_reason: rejectReason,\n            },\n        }\n        updateSessionStatus(props.event?.session?.id, options)\n            .then((resp) => {\n                if (resp) {\n                    setLoading(false)\n                    setShowAccept(false)\n                    setShowReject(false)\n                    props.handleSubmit(\"Appointment successfully canceled\")\n                }\n            })\n            .catch((err) => console.log(err))\n    }\n    React.useEffect(() => {\n        ValidatorForm.addValidationRule('REQUIRED', (value) => {\n            if (value.length === 0) {\n                return false\n            }\n            return true\n        })\n        return () => {\n            ValidatorForm.removeValidationRule('REQUIRED')\n        }\n    }, [props])\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={props.open}\n                onClose={() =>{\n                    setShowReject(false)\n                    setShowAccept(false)\n                    props.handleClose()}}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                {!showReject ? (\n                    <Box sx={style}>\n                        <div\n                            style={{ backgroundColor: 'rgba(34,42,69, 0.96)' }}\n                        >\n                            <div style={styles}>\n                                <Button\n                                    style={{ minWidth: '0' }}\n                                    onClick={props.handleClose}\n                                >\n                                    <CloseIcon style={{ color: 'white' }} />\n                                </Button>\n                            </div>\n                            <div style={{ padding: '0 24px 16px' }}>\n                                <div style={titleStyle}>\n                                    {props.event?.session?.client?.name +\n                                        '-' +\n                                        props.event?.session?.client?.client_id}\n                                </div>\n                                <p style={{ color: 'white', margin: '0' }}>\n                                    {props.event.session.center.name}\n                                </p>\n                            </div>\n                        </div>\n                        <div style={{ padding: '8px 18px 26px 26px' }}>\n                            <div style={{ display: 'flex' }}>\n                                <ScheduleIcon style={{ margin: '12px' }} />{' '}\n                                <p>\n                                    {moment(\n                                        props.event?.session?.scheduled_at\n                                    ).format('LLLL')}\n                                </p>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <TimelapseIcon style={{ margin: '12px' }} />{' '}\n                                <p>50 minutes</p>\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                                <EventNoteIcon style={{ margin: '12px' }} />{' '}\n                                {renderStatus()}\n                            </div>\n                        </div>\n                        {moment(props.event?.session?.scheduled_at) >\n                            moment() &&\n                            props.event?.session?.status === 'pending' && (\n                                <div\n                                    style={{\n                                        textAlign: 'center',\n                                        marginBottom: '10px',\n                                    }}\n                                >\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"success\"\n                                        style={{ marginRight: 5 }}\n                                        onClick={() => {\n                                            setShowReject(true)\n                                            setShowAccept(true)\n                                        }}\n                                    >\n                                        Accept\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"error\"\n                                        onClick={() => setShowReject(true)}\n                                    >\n                                        Reject\n                                    </Button>\n                                </div>\n                            )}\n                    </Box>\n                ) : (\n                    <>\n                        {!showAccept ? (\n                            <Box sx={reject}>\n                                <ValidatorForm\n                                    // ref={formEl}\n                                    onSubmit={handleReject}\n                                    onError={() => null}\n                                >\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"h6\"\n                                        component=\"h2\"\n                                    >\n                                        Reject this appointment\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Appointment ID :{' '}\n                                        {props.event?.session?.session_id ||\n                                            'Unknown'}\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Client ID :{' '}\n                                        {props.event?.session?.client\n                                            ?.client_id || 'Unknown'}\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Center :{' '}\n                                        {props.event?.session?.center?.name}\n                                    </Typography>\n                                    <Box sx={{ minWidth: 500, mb: 2 }}>\n                                        {true && (\n                                            <Grid container spacing={3}>\n                                                <Grid\n                                                    item\n                                                    lg={12}\n                                                    md={6}\n                                                    sm={12}\n                                                    xs={12}\n                                                    sx={{ mt: 2 }}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Scheduled At\"\n                                                        inputProps={{\n                                                            readOnly: true,\n                                                        }}\n                                                        value={moment(\n                                                            props.event.session\n                                                                .scheduled_at\n                                                        ).format('lll')}\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    item\n                                                    lg={12}\n                                                    md={6}\n                                                    sm={12}\n                                                    xs={12}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Reason\"\n                                                        multiline\n                                                        rows={4}\n                                                        value={rejectReason}\n                                                        onChange={(e) =>\n                                                            setRejectReason(\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                        validators={[\n                                                            'REQUIRED',\n                                                        ]}\n                                                    />\n                                                </Grid>\n                                                {error && (\n                                                    <span\n                                                        style={{\n                                                            marginLeft: 20,\n                                                            color: 'red',\n                                                        }}\n                                                    >\n                                                        Error: Please add the\n                                                        reason of cancelation\n                                                    </span>\n                                                )}\n                                            </Grid>\n                                        )}\n                                    </Box>\n\n                                    <Box\n                                        sx={{\n                                            display: 'table',\n                                            marginLeft: 'auto',\n                                            marginRight: '0px',\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"error\"\n                                            variant=\"contained\"\n                                            onClick={() => {\n                                                setShowReject(false)\n                                                props.handleClose()\n                                            }}\n                                        >\n                                            Cancel\n                                        </Button>\n                                        <Button\n                                            disabled={loading}\n                                            sx={{ ml: 2 }}\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                        >\n                                            Reject\n                                        </Button>\n                                        {loading && (\n                                            <StyledProgress\n                                                size={24}\n                                                className=\"buttonProgress\"\n                                            />\n                                        )}\n                                    </Box>\n                                </ValidatorForm>\n                            </Box>\n                        ) : (\n                            <Box sx={accept}>\n                                <ValidatorForm\n                                    onSubmit={handleSubmit}\n                                    onError={() => null}\n                                >\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"h6\"\n                                        component=\"h2\"\n                                    >\n                                        Confirm this appointment\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Appointment ID :{' '}\n                                        {props.event?.session?.session_id ||\n                                            'Unknown'}\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Client ID :{' '}\n                                        {props.event?.session?.client\n                                            ?.client_id || 'Unknown'}\n                                    </Typography>\n                                    <Typography\n                                        id=\"keep-mounted-modal-title\"\n                                        variant=\"body2\"\n                                        component=\"h6\"\n                                    >\n                                        Center :{' '}\n                                        {props.event?.session?.center?.name}\n                                    </Typography>\n                                    <Box sx={{ minWidth: 500, mb: 2 }}>\n                                        {true && (\n                                            <Grid container spacing={3}>\n                                                <Grid\n                                                    item\n                                                    lg={12}\n                                                    md={6}\n                                                    sm={12}\n                                                    xs={12}\n                                                    sx={{ mt: 2 }}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Scheduled At\"\n                                                        inputProps={{\n                                                            readOnly: true,\n                                                        }}\n                                                        value={moment(\n                                                            props.event.session\n                                                                .scheduled_at\n                                                        ).format('lll')}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        )}\n                                    </Box>\n\n                                    <Box\n                                        sx={{\n                                            display: 'table',\n                                            marginLeft: 'auto',\n                                            marginRight: '0px',\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"error\"\n                                            variant=\"contained\"\n                                            onClick={() => {\n                                                setShowReject(false)\n                                                setShowAccept(false)\n                                                props.handleClose()\n                                            }}\n                                        >\n                                            Cancel\n                                        </Button>\n                                        <Button\n                                            disabled={loading}\n                                            sx={{ ml: 2 }}\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                        >\n                                            Accept\n                                        </Button>\n                                        {loading && (\n                                            <StyledProgress\n                                                size={24}\n                                                className=\"buttonProgress\"\n                                            />\n                                        )}\n                                    </Box>\n                                </ValidatorForm>\n                            </Box>\n                        )}\n                    </>\n                )}\n            </Modal>\n        </div>\n    )\n}\n\nexport default AppointmentDetailsModal\n","import React, { useEffect } from 'react'\nimport { fetchClinicianDetails } from 'app/services/counselorService'\nimport useAuth from 'app/hooks/useAuth'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport './styles.css'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { formatSessions } from 'app/utils/counseler.data.formater'\nimport AppointmentDetailsModal from './AppointmentDetailsModal'\nimport { Alert, Snackbar } from '@mui/material'\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst localizer = momentLocalizer(moment)\n\nconst MyCalender = () => {\n    const { user } = useAuth()\n    const [events, setEvents] = React.useState([])\n    const [open, setOpen] = React.useState(false)\n    const [succes,setSuccess] = React.useState(false)\n    const [message,setMessage] = React.useState(false)\n    const [currentEvent, setCurrentEvent] = React.useState('')\n    const [openModal, setOpenModal] = React.useState(false);\n    const [msg, setMsg] = React.useState('');\n\n    const handleEventClick = (event) => {\n        setCurrentEvent(event)\n        setOpen(true)\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        let backgroundColor = '#08ab08'\n        if (event.session.status === 'completed') {\n            backgroundColor = '#efa80d'\n        } else if (event.session.status === 'cancelled') {\n            backgroundColor = '#f60a0a'\n        } else if (moment(start) < moment()) {\n            backgroundColor = 'orange'\n        } else if (moment(start) >= moment().add(1, 'day')) {\n            backgroundColor = '#3f51b5'\n        } else {\n            backgroundColor = '#08ab08'\n        }\n        let style = {\n            backgroundColor: backgroundColor,\n            // borderRadius: '0px',\n            // opacity: 0.8,\n            // color: 'black',\n            // border: '0px',\n            // display: 'block'\n        }\n        return {\n            style: style,\n        }\n    }\n    const fetchSessions = (id) => {\n        fetchClinicianDetails(user?.counsellor?.id)\n            .then((res) => {\n                const evnts = formatSessions(res.sessions)\n                setEvents(evnts)\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    const handleSubmit = (masg) => {\n        setOpen(false)\n        setMessage(masg)\n        setSuccess(true)\n        fetchSessions()\n    }\n\n    useEffect(() => {\n        const fetchSessions = (id) => {\n            fetchClinicianDetails(user?.counsellor?.id)\n                .then((res) => {\n                    if(res?.error?.name === 'UnauthorizedError'){\n                        setOpenModal(true);\n                        setMsg('Your session has expired. You will be logged out.');\n                    } \n                    const evnts = formatSessions(res.sessions)\n                    setEvents(evnts)\n                })\n                .catch((err) => {\n                    console.log('error', err)\n                })\n        }\n        fetchSessions()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])  \n\n\n    return (\n        <div className=\"App\">\n            <div style={{ height: 700, margin: '10px 4px 0px 7px' }}>\n                <Calendar\n                    localizer={localizer}\n                    views={{\n                        day: true,\n                        week: true,\n                        month: true,\n                    }}\n                    events={events}\n                    step={60}\n                    defaultDate={new Date()}\n                    onSelectEvent={handleEventClick}\n                    // components={{\n                    //   event:EventComponent\n                    // }}\n                    popup={true}\n                    eventPropGetter={eventStyleGetter}\n                />\n            </div>\n            {currentEvent && currentEvent !== '' && (\n                <AppointmentDetailsModal\n                    handleSubmit={handleSubmit}\n                    open={open}\n                    event={currentEvent}\n                    handleClose={() => setOpen(false)}\n                />\n            )}\n            <Snackbar\n                open={succes}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                autoHideDuration={3000}\n                onClose={() => {\n                   setSuccess(false)\n                }}\n            >\n                <Alert\n                    onClose={() => {\n                        setSuccess(false)\n                    }}\n                    variant=\"filled\"\n                    severity=\"success\"\n                    sx={{ width: '100%' }}\n                >\n                    {message}\n                </Alert>\n            </Snackbar>\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </div>\n    )\n}\n\nexport default MyCalender\n"],"sourceRoot":""}