{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/clientService.js","app/components/common/AppointmentList.jsx","app/views/CenterView/Clients/Clients/ClientDetails.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClicians","url","makeRequest","then","resp","json","fetchClients","page","fetchBarriers","createClient","data","fetchClient","createLicense","updateLicense","getClientDetails","updateClientTrauma","addNotes","catch","err","fetchPassphrases","findClients","searchData","filterData","clinician","device","fetchInitialDiagnosis","fetchListOfTreatments","fetchListOfLocations","updateNote","createSession","checkUnique","updateClient","AppointmentList","searchFilters","appointmentData","useState","searchValue","setSearchValue","searchResult","setSearchResult","filters","setFilters","rows","setRows","searchedItems","setSearchedItems","total","length","pageDetails","setPageDetails","sortAppointments","search","type","filter","item","counsellor_name","toLowerCase","includes","caseId","sessionId","status","meta","SearchFilter","handleSearch","value","target","multipleFilters","filterValue","handleFilter","name","handleReset","UsersCustomTable","handlePageChange","event","newPage","skip","Number","arr","slice","view","Container","theme","margin","breakpoints","down","marginBottom","ClientDetails","loading","setLoading","setValue","tab","tabsData","client","clientData","setClientData","setCenterData","counselorData","setCounselorData","setAppointmentData","center","counselor","appointment","openModal","setOpenModal","msg","setMsg","window","location","href","split","pop","formatClientUserData","client_id","gender_bio","gender_identified","centers","counselors","counsellors","sessions","center_id","user","username","center_name","center_email","email","useEffect","res","error","response","Array","isArray","forEach","push","formatClients","formatCenters","formatCounsellor","counsellor","formatSession","console","routeSegments","path","TabContext","Box","borderBottom","borderColor","TabList","onChange","newValue","map","index","Tab","label","toString","TabPanel","title","subtitle","action","borderTop","paddingTop","paddingBottom","Grid","container","xs","ProviderList","counsellorData"],"mappings":"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","file":"static/js/63.5533ce5c.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClicians = (id) => {\n    let url = `/api/centers/${id}`;\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClients = (page) => {\n    let url = `/api/clients?pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const fetchBarriers = (id) => {\n    let url = `/api/barriers`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const createClient = (data) => {\n    let url = `/api/clients`\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClient = (id) => {\n    let url = `/api/clients/${id}`\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const createLicense = (data) => {\n    let url = `/api/licenses`\n    return makeRequest('POST', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const updateLicense = (id, data) => {\n    let url = `/api/licenses/${id}`\n    return makeRequest('PUT', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const getClientDetails = (id) => {\n    let url = `/api/clients/${id}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const updateClientTrauma = (id,data) => {\n    let url = `/api/clients/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const filterClients = (data, page) => {\n    let url = `/api/clients?filter[clinician]=${data.clinician}&filter[device]=${data.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const addNotes = (data) => {\n    let url = `/api/notes`;\n\n    return makeRequest('POST', url,data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchPassphrases = () => {\n    let url = `/api/passphrases`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const findClients = (searchData, filterData, page) => {\n    let url = `/api/clients?search=${searchData}&filter[clinician]=${filterData.clinician}&filter[device]=${filterData.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchInitialDiagnosis = () => {\n    let url = `/api/initial-diagnoses`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchListOfTreatments = () => {\n    let url = `/api/treatments`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\nexport const fetchListOfLocations = () => {\n    let url = `/api/treatment-locations`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateNote = (id,data) => {\n    let url = `/api/notes/${id}`\n\n    return makeRequest('PUT', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createSession = (data) => {\n    let url = `/api/sessions`\n\n    return makeRequest('POST', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const checkUnique = (data) => {\n    let url = `/api/clients?check=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateClient = (id, data) => {\n    let url = `/api/clients/${id}`;\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}","import React, { useState, useEffect } from 'react';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\n\nconst AppointmentList = ({ searchFilters, appointmentData }) => {\n    const page = 1;\n    const [searchValue, setSearchValue] = useState('');\n    const [searchResult, setSearchResult] = useState(false);\n    const [filters, setFilters] = useState('All');\n    const [rows, setRows] = useState(() => appointmentData);\n    const [searchedItems, setSearchedItems] = useState([]);\n    const [pageDetails, setPageDetails] = useState({ total: appointmentData.length, page });\n\n    function sortAppointments(search, type) {\n        let searchData = [];\n        if(search && search.length > 1) {\n            searchData = appointmentData.filter((item) => {\n                return ( \n                    item && item.counsellor_name && item.counsellor_name.toLowerCase().includes(search.toLowerCase()) ||\n                    item && item.caseId && item.caseId.toLowerCase().includes(search.toLowerCase()) || \n                    item && item.sessionId && item.sessionId.toLowerCase().includes(search.toLowerCase())\n                )    \n            })\n        }\n        if(type !== 'All') {\n            let data = [];\n            if(search && search.length > 1) {\n                data = searchData;\n            } else {\n                data = appointmentData;\n            }\n\n            searchData = data.filter((item) => {\n                return item && item.status === type;\n            })\n        }\n        searchData['meta'] = appointmentData.meta;\n        setSearchResult(true);\n        setSearchedItems(searchData);\n        setRows(searchData);\n        setPageDetails({ total: searchData.length, page });\n    }\n\n    const handleSearch = ({ target: { value }}) => {\n        setSearchValue(value);\n        if(value && value.length > 1) {\n            sortAppointments(value, filters);\n        } else if (value.length === 0) {\n            if(filters === 'All'){\n                setSearchResult(false);\n                setRows(appointmentData);\n                setPageDetails({ total: appointmentData.length, page});\n            } else {\n                sortAppointments('', filters);\n            }\n        }\n    }\n\n    const handleFilter = ({ target: { name, value }}) => {\n        setFilters(value);\n        if(value === 'All') {\n            if(searchValue){\n                sortAppointments(searchValue, value);\n            } else {\n                setSearchResult(false);\n                setRows(appointmentData);\n                setPageDetails({ total: appointmentData.length, page});\n            }\n        } else {\n            sortAppointments(searchValue, value);\n        }\n    }\n\n    const handlePageChange = (event, newPage) => {\n        const skip = ((Number(newPage) + 1) - 1) * 10;\n        let arr = [];\n        let total = 0;\n        if(searchResult) {\n            arr = searchedItems.slice(skip, skip + 10);\n            arr['meta'] = appointmentData.meta;\n            total = searchedItems.length;\n        } else {\n            arr = appointmentData.slice(skip, skip + 10);\n            arr['meta'] = appointmentData.meta;\n            total = appointmentData.length;\n        }\n        setRows(arr);\n        setPageDetails({ total, page: Number(newPage) + 1 });\n    }\n\n    const handleReset = () => {\n        setSearchResult(false);\n        setSearchValue('');\n        setFilters('All');\n        setSearchedItems([]);\n        setRows(appointmentData);\n        setPageDetails({ total: appointmentData.length, page});\n    }\n\n    return (\n        <>\n            <SearchFilter\n                data={searchFilters}\n                searchValue={searchValue}\n                handleSearch={handleSearch}\n                multipleFilters={false}\n                filterValue={filters}\n                handleFilter={handleFilter}\n                handleReset={handleReset}\n            />\n            <UsersCustomTable\n                page={page}\n                pageDetails={pageDetails}\n                handlePageChange={handlePageChange}\n                rows={rows}\n                view={'client'}\n            />\n        </>\n    )\n}\n\nexport default AppointmentList;","import React, { Fragment, useEffect, useState } from 'react'\nimport { Grid } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\n\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\n\nimport { ProfileCard, Breadcrumb, SearchInput } from 'app/components';\n\nimport { tabsData } from 'app/constants/data';\n\nimport { formatCounsellor, formatCenters, formatSession } from 'app/utils/data.formater';\n\nimport { styled } from '@mui/system';\nimport { getClientDetails } from 'app/services/clientService';\nimport ProviderList from 'app/views/center/ProviderList';\nimport AppointmentList from 'app/components/common/AppointmentList';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\n\nconst ClientDetails = () => {\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false);\n    const [value, setValue] = useState('1');\n    const tab = tabsData.client;\n    const [clientData, setClientData] = useState('');\n    const [centerData, setCenterData] = useState('');\n    const [counselorData, setCounselorData] = useState('');\n    const [appointmentData, setAppointmentData] = useState('');\n    const [searchResult, setSearchResult] = useState(false);\n    const [searchedData, setSearchedData] = useState({\n        center: [],\n        counselor: [],\n        appointment: [],\n    });\n    const [values, setValues] = useState({\n        center: '',\n        counselor: '',\n        appointment: '',\n    });\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const id = window.location.href.split('/').pop();\n\n    useEffect(() => {\n        setLoading(true);\n        getClientDetails(id)\n        .then((res) => {\n            if(res?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setClientData(formatClients(res));     \n                setCenterData(formatCenters(res.center));\n                setCounselorData(formatCounsellor(res.counsellor));\n                setAppointmentData(formatSession(res.sessions));       \n            }\n            // setDetailsData(formatDetails(res))\n        })\n        .catch(console.error)\n    }, [id]);\n\n    useEffect(() => {\n        setLoading(false);\n    }, [clientData, loading, tab]);\n\n    function formatClients(data) {\n        let response = []\n        if (Array.isArray(data)) {\n            data.forEach((item) => {\n                response.push(formatClientUserData(item));\n            })\n        } else {\n            response = formatClientUserData(data);\n        }\n    \n        return response\n    }\n    \n    function formatClientUserData(item) {\n        const obj = {\n            id: item && item.id || '',\n            name: item && item.name || '',\n            client_id: item && item.client_id || '',\n            gender_bio: item && item.gender_bio || '',\n            gender_identified: item && item.gender_identified || '',\n            centers: item && item.centers && item.centers.length || '0',\n            counselors: item && item.counsellors && item.counsellors.length || '0',\n            sessions: item && item.sessions && item.sessions.length || '0',\n            center_id: item && item.center && item.center.user && item.center.user.username ||'',\n            center_name: item && item.center && item.center.name || '',\n            center_email: item && item.center && item.center.user && item.center.user.email || ''\n        };\n        return obj;\n    }\n\n    const handleBlur = ({ target: { value }}, prop) => {\n        setValues({ ...values, [prop]: value });\n\n        if (value && value.length > 2) {\n            let searchData;\n            if (prop && prop === 'counselor') {\n                searchData = counselorData.filter((item) => {\n                    return item.name.toLowerCase().includes(value) || item.email?.toLowerCase().includes(value) || item.phoneNumber?.toString().toLowerCase().includes(value)\n                })\n                searchData['meta'] = counselorData.meta\n            } else if (prop && prop === 'center') {\n                searchData = centerData.filter((item) => {\n                    return item.name.toLowerCase().includes(value) || item.email?.toLowerCase().includes(value) || item.phoneNumber?.toString().toLowerCase().includes(value)\n                })\n                searchData['meta'] = centerData.meta\n            } else if (prop && prop === 'appointment') {\n                searchData = appointmentData.filter((item) => {\n                    return item.caseId.includes(value) || item.sessionId?.includes(value) || item.status.toLowerCase().includes(value);\n                })\n                searchData['meta'] = appointmentData.meta\n            }\n\n            setSearchResult(true)\n            setSearchedData({ ...searchedData, [prop]: searchData })\n        } if (value.length === 0) {\n            setSearchResult(false)\n        }\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const Appointment = (props) => {\n        return (\n            <>\n                <SearchInput\n                    placeholder=\"Search Appointment\"\n                    value={values.appointment}\n                    handleBlur={(e) => handleBlur(e, 'appointment')}\n                />\n                <UsersCustomTable\n                    role=\"Session\"\n                    rows={props && props.data}\n                />\n            </>\n        )\n    }\n\n   \n    return (\n        <Container>\n            <Breadcrumb\n                routeSegments={[\n                    { name: \"All Clients\", path: \"/clients\" },\n                    { name: \"Client Details\" }\n                ]}\n            />\n            {!loading &&\n             clientData !== '' &&\n              (\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"Client Details Segment\">\n                            {tab.map((item, index) => (\n                                <Tab label={item.name} value={item.id.toString()} key={index} />\n                            ))}\n                        </TabList>\n                    </Box>\n\n                    {tab && tab.map((item, index) => {\n                        return (\n                            <TabPanel value={item.id.toString()} key={index}>\n                                {item.id === 1 ? (\n                                    <ProfileCard\n                                        title={clientData.name}\n                                        subtitle={'Client'}\n                                        action={false}\n                                        // icon={clientData.logo}\n                                        // anchorEl={anchorEl}\n                                        // open={open}\n                                        // handleClick={handleClick}\n                                        // handleClose={handleClose}\n                                        // navigateTo={handleEdit}\n                                    >\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Client ID\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.client_id}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Full name\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.name}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Birth Gender\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.gender_bio}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    ID Gender\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.gender_identified}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Center ID\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.center_id}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Center Name\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.center_name}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                borderTop: 1,\n                                                paddingTop: 1,\n                                                paddingBottom: 1,\n                                                borderColor: 'divider',\n                                            }}\n                                        >\n                                            <Grid container>\n                                                <Grid item xs={6}>\n                                                    Center Email\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    {clientData.center_email}\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                    </ProfileCard>\n                                ) : item.id === 2 ? (\n                                    <ProviderList\n                                        counsellorData={counselorData}\n                                    />\n                                ) : item.id === 3 ? (\n                                    <AppointmentList\n                                        appointmentData={appointmentData}\n                                        searchFilters={tabsData['appointmentsListing']}\n                                    />\n                                ) : null}\n                            </TabPanel>\n                        )\n                    })}\n\n                </TabContext>\n            )}\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </Container>\n    )\n}\n\nexport default ClientDetails;"],"sourceRoot":""}