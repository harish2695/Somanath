{"version":3,"sources":["../node_modules/@mui/icons-material/Preview.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Videocam.js","app/components/UsersCustomTable/UsersCustomTable.jsx","app/services/clientService.js","../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","app/utils/center.list.formatter.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","app/components/ClientList/ClientBreadCrumb.jsx","app/components/ClientList/ClientSearchFilter.jsx","app/components/ClientList/ClientListTable.jsx","app/components/ClientList/ClientList.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","_status","UsersCustomTable","props","navigate","useNavigate","user","useAuth","CustomHeadCell","meta","data","entries","index","key","push","width","variant","align","className","showDisableBtn","role","color","onClick","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","style","marginLeft","center_name","type","owned_by","handleOpen","deviceID","showBtn","display","flexDirection","justifyContent","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","component","scope","sx","overflow","minWidth","size","rowsPerPage","slice","page","map","i","border","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","id","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","fetchClicians","url","makeRequest","then","resp","json","fetchClients","fetchBarriers","createClient","fetchClient","createLicense","updateLicense","getClientDetails","updateClientTrauma","addNotes","catch","err","fetchPassphrases","findClients","searchData","filterData","clinician","device","fetchInitialDiagnosis","fetchListOfTreatments","fetchListOfLocations","updateNote","createSession","checkUnique","updateClient","appendOwnerState","elementType","existingProps","ownerState","isHostComponent","_extends","shouldSpreadAdditionalProps","Slot","clientMeta","client_id","name","gender_bio","gender_identified","appointment","formatClientsList","response","Array","isArray","forEach","item","formatClientData","handleSession","res","sessions","attributes","el","clinician_status","counsellor","device_status","device_id","getMetaData","pagination","formatCenters","formatCenterData","username","email","phoneNumber","phone_number","firstName","first_name","logo","logo_image","lastName","last_name","country","state","city","postalCode","postal_code","areaCode","area_code","centerType","center_type","verified","is_verified","address","getAddress","street_address1","street_address2","createdAt","moment","format","address1","address2","usePreviousProps","ref","React","current","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","children","components","componentsProps","max","maxProp","showZero","other","_objectWithoutPropertiesLoose","badgeContentProp","invisible","invisibleProp","prevProps","displayValue","Number","useBadge","classes","slots","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","Badge","badgeProps","_jsxs","clsx","_jsx","getBadgeUtilityClass","badgeClasses","BadgeRoot","styled","overridesResolver","styles","position","verticalAlign","flexShrink","BadgeBadge","capitalize","anchorOrigin","vertical","horizontal","overlap","theme","flexWrap","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","bottom","left","leavingScreen","inProps","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","useThemeProps","anchorOriginProp","overlapProp","colorProp","variantProp","as","ClientBreadCrumb","routeSegments","ClientSearchFilter","searchedData","handleChange","filterType","target","onFilterType","handleFilterResult","handleClearType","handleFilter","Grid","marginTop","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","TextField","label","onChange","onSearchData","handleSearchResult","handleSearch","handleClearSearch","placeholder","fullWidth","InputProps","startAdornment","Box","FormControl","InputLabel","Select","MenuItem","ClientListTable","useState","setRows","setPageDetails","searchResult","setSearchResult","filterResult","setSearchData","setType","loading","getAllClients","pageNumber","updateLoading","useEffect","searchClient","console","log","filterClient","val","event","newPage","ClientList","setLoading"],"mappings":"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","file":"static/js/21.178cadf8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"\n}), 'Videocam');\n\nexports.default = _default;","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","import { makeRequest } from './authenticationService';\n\nexport const fetchClicians = (id) => {\n    let url = `/api/centers/${id}`;\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClients = (page) => {\n    let url = `/api/clients?pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const fetchBarriers = (id) => {\n    let url = `/api/barriers`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const createClient = (data) => {\n    let url = `/api/clients`\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClient = (id) => {\n    let url = `/api/clients/${id}`\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const createLicense = (data) => {\n    let url = `/api/licenses`\n    return makeRequest('POST', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const updateLicense = (id, data) => {\n    let url = `/api/licenses/${id}`\n    return makeRequest('PUT', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const getClientDetails = (id) => {\n    let url = `/api/clients/${id}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const updateClientTrauma = (id,data) => {\n    let url = `/api/clients/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const filterClients = (data, page) => {\n    let url = `/api/clients?filter[clinician]=${data.clinician}&filter[device]=${data.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const addNotes = (data) => {\n    let url = `/api/notes`;\n\n    return makeRequest('POST', url,data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchPassphrases = () => {\n    let url = `/api/passphrases`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const findClients = (searchData, filterData, page) => {\n    let url = `/api/clients?search=${searchData}&filter[clinician]=${filterData.clinician}&filter[device]=${filterData.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchInitialDiagnosis = () => {\n    let url = `/api/initial-diagnoses`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchListOfTreatments = () => {\n    let url = `/api/treatments`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\nexport const fetchListOfLocations = () => {\n    let url = `/api/treatment-locations`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateNote = (id,data) => {\n    let url = `/api/notes/${id}`\n\n    return makeRequest('PUT', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createSession = (data) => {\n    let url = `/api/sessions`\n\n    return makeRequest('POST', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const checkUnique = (data) => {\n    let url = `/api/clients?check=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateClient = (id, data) => {\n    let url = `/api/clients/${id}`;\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.\n * @param existingProps Props of the element.\n * @param ownerState\n */\n\nexport default function appendOwnerState(elementType, existingProps = {}, ownerState) {\n  if (isHostComponent(elementType)) {\n    return existingProps;\n  }\n\n  return _extends({}, existingProps, {\n    ownerState: _extends({}, existingProps.ownerState, ownerState)\n  });\n}","import { isHostComponent } from '@mui/base';\n\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\n\nexport default shouldSpreadAdditionalProps;","import moment from 'moment'\n\nconst meta = {\n    counsellorId: 'Center ID',\n    name: 'State',\n    firstName: 'Name',\n    lastName: 'Phone',\n    traumaCodes: 'Email',\n    clients: 'Clients',\n    sessions: 'Providers',\n    sessionsHours: 'Devices',\n    type: 'Type',\n}\n\nconst deviceMeta = {\n    // id: \"ID\",\n    device_id: 'Device ID',\n    device_type: 'Device Type',\n    device_serial: 'Device Serial',\n    mac_address: 'Mac Address',\n    is_assigned: 'Is Assigned',\n    status: 'Status',\n    owned_by: 'Owned By',\n    edit_action: 'Edit Action',\n    device_action: 'Device Action',\n}\n\n\nconst clientMeta = {\n    client_id: \"Client ID\",\n    clinician: 'Provider',\n    name: \"Record Name\",\n    gender_bio: \"Birth Gender\",\n    gender_identified: \"ID Gender\",\n    license:\"License\",\n    device: \"Device\",\n    appointment:\"Appointment\"\n}\n\nexport function formatClientsList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientData(item))\n        })\n        response['meta'] = clientMeta;\n    } else {\n        response.push(formatClientData(data))\n    }\n    return response\n}\n\nfunction getDeviceMeta(tab) {\n    let obj = {};\n    if(tab == 1){\n        obj = deviceMeta;\n    } else {\n        obj = {\n            mac_address: 'Mac Address',\n            ip_address: 'IP Address',\n            passphrase: 'Passphrase'\n        }\n    }\n    return obj;\n}\n\nexport function formatDevicesList(data, activeTab) {\n    const response = [];\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatDeviceData(item, activeTab))\n        })\n        response['meta'] = getDeviceMeta(activeTab);\n    } else {\n        response.push(formatDeviceData(data, activeTab))\n    }\n    return response\n}\n\nfunction handleSession(item){\n    let res = 'NotScheduled';\n    const sessions = item?.attributes?.sessions?.data;\n    if(sessions?.length){\n        for(let i = 0;i < sessions.length;i++){\n            let el = sessions[i];\n            if(el?.attributes?.status === 'pending' || el?.attributes?.status === 'scheduled'){\n                res = 'Scheduled';\n            }\n        }\n    } else {\n        res = 'NotScheduled';\n    }\n    return res;\n}\n\nfunction formatClientData(item) {\n    const obj = {\n        clientID: (item && item.id) || '',\n        client_id: (item && item.attributes && item.attributes.client_id) || '',\n        clinician_status:\n            item &&\n            item.attributes &&\n            item.attributes.counsellor &&\n            item.attributes?.counsellor?.data\n                ? item.attributes?.counsellor?.data?.attributes?.name\n                : 'Not Assigned',\n        name: (item && item.attributes && item.attributes.name) || '',\n        gender_bio:\n            (item && item.attributes && item.attributes.gender_bio) || '',\n        gender_identified:\n            (item && item.attributes && item.attributes.gender_identified) ||\n            '',\n        license:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data\n                ? 'Issued'\n                : 'Not Issued',\n        device_status:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data &&\n            item.attributes.license.data.attributes &&\n            item.attributes.license.data.attributes.device &&\n            item.attributes.license.data.attributes.device.data &&\n            item.attributes.license.data.attributes.device.data.id\n                ? item.attributes.license.data.attributes.device.data.attributes.device_id\n                : 'Not Assigned',\n        appointment: handleSession(item)\n    }\n\n    return obj;\n}\n\n\nfunction getPassPhrase(item) {\n    return (\n        (item &&\n            item.attributes &&\n            item.attributes.licenses &&\n            item.attributes.licenses.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1] &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase  &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes && \n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes.name\n        ) ||\n        ''\n    )\n}\n\n\nfunction formatDeviceData(item, activeTab) {\n    let obj = {};\n    if(activeTab == 1) {\n        obj = {\n            // id: item.id,\n            device_id: item.attributes.device_id,\n            device_type: item.attributes.device_type,\n            device_serial: item.attributes.device_serial,\n            mac_address: item.attributes.mac_address,\n            is_assigned: String(item.attributes.is_assigned),\n            status: item.attributes.status,\n            owned_by: item.attributes.owned_by,\n            edit_action: `/devices/edit?id=${item.id}`,\n            device_action: {\n                deviceID: item.id,\n                isAssigned: item.attributes.center && item.attributes.center.data ? true : false,\n                center_name: item && item.attributes && item.attributes.center && item.attributes.center.data && item.attributes.center.data && item.attributes.center.data.attributes && item.attributes.center.data.attributes.name || '',\n                owned_by: item.attributes.owned_by,\n            },\n        }\n    } else {\n        obj = {\n            mac_address: item && item.attributes && item.attributes.mac_address || '',\n            ip_address: item && item.attributes && item.attributes.ip_address || '',\n            passphrase: getPassPhrase(item)\n        }\n    }\n    return obj\n}\n\nconst logoBaseUrl = 'http://localhost:1337'\n\nexport function getMetaData(data) {\n    return data.pagination\n}\n\nexport function formatCenters(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatCenterData(item))\n        })\n    } else {\n        response = formatCenterData(data)\n    }\n\n    return response\n}\n\nfunction formatCenterData(item) {\n    const obj = {\n        id: item.id,\n        centerId:item && item.user && item.user.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        firstName: item.first_name,\n        logo: logoBaseUrl + item.logo_image,\n        lastName: item.last_name,\n        country: item.country,\n        state: item.state,\n        city: item.city,\n        postalCode: item.postal_code,\n        areaCode: item.area_code,\n        centerType: item.center_type,\n        verified: item.is_verified,\n        address: getAddress(item.street_address1, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY'),\n    }\n\n    return obj\n}\n\nfunction getAddress(address1, address2) {\n    let fullAddress = address1 + ' ' + address2\n    return fullAddress\n}\n\nexport function formatClients(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientUserData(item));\n        })\n    } else {\n        response = formatClientUserData(data);\n    }\n\n    return response\n}\n\nfunction formatClientUserData(item) {\n    const obj = {\n        id: item && item.id || '',\n        name: item && item.name || '',\n        client_id: item && item.client_id || '',\n        gender_bio: item && item.gender_bio || '',\n        gender_identified: item && item.gender_identified || '',\n        centers: item && item.centers && item.centers.length || '0',\n        counselors: item && item.counsellors && item.counsellors.length || '0',\n        sessions: item && item.sessions && item.sessions.length || '0'\n    };\n    return obj;\n}\n\n","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import React from 'react';\nimport { Breadcrumb } from 'app/components';\nimport './ClientList.css';\n\nconst ClientBreadCrumb = () => {\n    return (\n        <>\n            <Breadcrumb routeSegments={[{ name: 'All Clients' }]} />\n        </>\n    )\n}\n\nexport default ClientBreadCrumb;","import React, { useState, useEffect } from 'react';\nimport {\n    Grid,\n    Button,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { formatClientsList, getMetaData } from 'app/utils/center.list.formatter';\nimport './ClientList.css';\n\nconst ClientSearchFilter = (props) => {\n    const type = props && props.type;\n    const searchedData = props && props.searchedData;\n\n    const handleSearch = ({ target: { value }}) => {\n        props.onSearchData(value);\n        if(value && value.length > 2){\n            props.handleSearchResult(true);\n            props.handleSearch(value);\n        } else if(value === \"\") {\n            props.handleClearSearch();\n            props.handleSearchResult(false);\n        }\n    }\n\n\n    const handleChange = ({ target: { value }}, filterType) => {\n        if(filterType === 'clinician'){\n            props.onFilterType({ ...type, clinician: value});\n        } else {\n            props.onFilterType({ ...type, device: value });\n        }\n\n        if(filterType === 'clinician'){\n            if(value === 'All' && type.device === 'All'){\n                props.handleFilterResult(false);\n                props.handleClearType();\n            } else {\n                props.handleFilterResult(true);\n                props.handleFilter({clinician: value, device: type.device });\n            }\n        } else {\n            if(type.clinician === 'All' && value === 'All'){\n                props.handleFilterResult(false);\n                props.handleClearType();\n            } else {\n                props.handleFilterResult(true);\n                props.handleFilter({ clinician: type.clinician, device: value });\n            }\n        }\n    }\n\n\n    return (\n        <Grid sx={{ marginTop: '20px', marginBottom: '20px' }} container rowSpacing={3} columnSpacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n                <TextField\n                    label=\"Search Client\"\n                    variant=\"outlined\"\n                    className=\"client-search\"\n                    onChange={handleSearch}\n                    value={searchedData}\n                    placeholder=\"Search client\"\n                    type=\"text\"\n                    fullWidth\n                    InputProps={{\n                        startAdornment: <SearchIcon />,\n                    }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>Provider Status</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={type.clinician}\n                            label=\"Age\"\n                            onChange={(e) => handleChange(e, 'clinician')}\n                        >\n                            <MenuItem value={'All'}>All</MenuItem>\n                            <MenuItem value={'unassigned'}>Unassigned</MenuItem>\n                            <MenuItem value={'assigned'}>Assigned</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>Device Status</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={type.device}\n                            label=\"Age\"\n                            onChange={(e) => handleChange(e, 'device')}\n                        >\n                            <MenuItem value={'All'}>All</MenuItem>\n                            <MenuItem value={'unassigned'}>Unassigned</MenuItem>\n                            <MenuItem value={'assigned'}>Assigned</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default ClientSearchFilter;","import React, { useState, useEffect } from 'react';\nimport ClientSearchFilter from './ClientSearchFilter';\nimport {\n    fetchClients,\n    searchClients,\n    filterClients,\n    findClients\n} from 'app/services/clientService';\nimport { useNavigate } from 'react-router-dom';\nimport { formatClientsList, getMetaData } from 'app/utils/center.list.formatter';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport './ClientList.css';\n\n\nconst ClientListTable = (props) => {\n    const navigate = useNavigate();\n    const [rows, setRows] = useState([]);\n    const [pageDetails, setPageDetails] = useState({});\n    const [searchResult, setSearchResult] = useState(false);\n    const [filterResult, setFilterResult] = useState(false);\n    const [searchData, setSearchData] = useState(\"\");\n    const [type, setType] = useState({ \n        clinician: \"All\", \n        device: \"All\" \n    });\n    const page = 1;\n    const loading = props && props.loading;\n\n    useEffect(() => {\n        getAllClients(page);\n    }, []);\n\n    function getAllClients(pageNumber) {\n        props.updateLoading(true);\n        fetchClients(pageNumber)\n        .then(resp => {\n            props.updateLoading(false);\n            setRows(formatClientsList(resp.data));\n            setPageDetails(getMetaData(resp.meta));\n        })\n    }\n\n    const handlePageChange = (event, newPage) => {\n        if(searchResult){\n            searchClient(searchData, Number(newPage)+1);\n        } else if(filterResult) {\n            filterClient(type, Number(newPage)+1);\n        } else {\n            getAllClients(newPage + 1);\n        }\n    }\n\n    const searchClient = (data, pageNumber) => {\n        props.updateLoading(true);\n        findClients(data, type, pageNumber)\n        .then((resp) => {\n            props.updateLoading(false);\n            setRows(formatClientsList(resp.data));\n            setPageDetails(getMetaData(resp.meta));\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const filterClient = (data, pageNumber) => {\n        props.updateLoading(true);\n        findClients(searchData, data, pageNumber)\n        .then((resp) => {\n            props.updateLoading(false);\n            setRows(formatClientsList(resp.data));\n            setPageDetails(getMetaData(resp.meta));\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const handleClearSearch = () => {\n        if(type.clinician === 'All' && type.device === 'All') {\n            getAllClients(page);\n        } else {\n            filterClient(type, 1);\n        }\n    }\n\n    const handleClearType = () => {\n        if(searchData === ''){\n            getAllClients(page);\n        } else {\n            searchClient(searchData, 1);\n        }\n    }\n\n    const onClick = (id) => {\n        navigate(`/client/details/${id}`, {id: id});\n    }\n\n\n    return (\n        <>\n            <ClientSearchFilter\n                searchData={searchData}\n                type={type}\n                handleClearSearch={() => handleClearSearch()}\n                handleClearType={() => handleClearType()}\n                handleSearchResult={(val) => setSearchResult(val)}\n                handleSearch={(val) => searchClient(val, page)}\n                onSearchData={(val) => setSearchData(val)}\n                handleFilterResult={(val) => setSearchResult(val)}\n                handleFilter={(val) => filterClient(val, page)}\n                onFilterType={(val) => setType(val)}\n            />\n\n            {!loading && rows.meta && (\n                <UsersCustomTable\n                    onClick={onClick}  \n                    page={page} \n                    pageDetails={pageDetails}\n                    handlePageChange={handlePageChange}  \n                    rows={rows} \n                    view={\"client\"}\n                />\n            )}\n        </>\n    )\n}\n\nexport default ClientListTable;","import React, { useState } from 'react';\nimport ClientBreadCrumb from './ClientBreadCrumb';\nimport ClientListTable from './ClientListTable';\nimport Loading from 'app/components/MatxLoading/MatxLoading';\nimport './ClientList.css';\n\nconst ClientList = () => {\n    const [loading, setLoading] = useState(false);\n\n    function handleLoading(loadingStatus) {\n        setLoading(loadingStatus);\n    }\n\n    return (\n        <div className='ClientList-container'>\n            <ClientBreadCrumb />\n            <ClientListTable \n                loading={loading}\n                updateLoading={(val) => handleLoading(val)}\n            />\n            {\n                loading &&\n                <Loading />\n            }\n        </div>\n    );\n}\n\nexport default ClientList;\n"],"sourceRoot":""}