{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/clientService.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","app/services/centerService.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","app/utils/client.list.formatter.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/Slide/Slide.js","app/components/IntakeClient/IntakeClientForm.jsx","app/views/CenterView/Clients/AddClician/IntakeClinicianAssign.jsx","app/components/IntakeNotes/IntakeNotes.jsx","app/components/DeviseIssue/IntakeDeviceIssue.jsx","app/components/IntakeTraumaAndBarrier/IntakeTrauma.jsx","app/components/IntakeTraumaAndBarrier/IntakeBarrier.jsx","app/components/IntakeTreatments/IntakeTreatment.jsx","app/components/AlertDialog/Warning.jsx","app/views/CenterView/Clients/AddClient/AddClient.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClicians","url","makeRequest","then","resp","json","fetchClients","page","fetchBarriers","createClient","data","fetchClient","createLicense","updateLicense","getClientDetails","updateClientTrauma","addNotes","catch","err","fetchPassphrases","findClients","searchData","filterData","clinician","device","fetchInitialDiagnosis","fetchListOfTreatments","fetchListOfLocations","updateNote","createSession","checkUnique","updateClient","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","opacity","height","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getAlertUtilityClass","_CloseIcon","alertClasses","createSvgIcon","d","AlertRoot","Paper","overridesResolver","styles","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","typography","body2","light","main","fontWeight","fontWeightMedium","dark","AlertIcon","fontSize","AlertMessage","message","AlertAction","action","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","Alert","inProps","useThemeProps","closeText","iconMapping","elevation","IconButton","title","CloseIcon","fetchCenter","getAllCenters","getCenterDetails","findCenters","filters","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","label","labelPlacement","verticalAlign","WebkitTapHighlightColor","flexDirection","vars","FormControlLabel","componentsProps","control","disableTypography","labelProp","controlProps","forEach","key","fcs","formControlState","states","Typography","formatCouncelorList","response","Array","isArray","item","user","confirmed","push","formatClinician","formatTraumaList","getFormatedData","traumaCode","attributes","trauma_code","traumaName","trauma_name","traumaId","formatBarrierList","getFormatedBarrierData","barrierName","barrier_name","barrierId","getFormGroupUtilityClass","FormGroupRoot","row","flexWrap","FormGroup","setTranslateValue","direction","node","containerProp","containerPropProp","resolvedContainer","rect","getBoundingClientRect","containerRect","containerWindow","ownerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","right","innerWidth","bottom","innerHeight","getTranslateValue","webkitTransform","Slide","useTheme","defaultEasing","enter","transitions","easing","easeOut","exit","sharp","defaultTimeout","duration","enteringScreen","leavingScreen","addEndListener","appear","container","easingProp","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","Transition","childrenRef","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","current","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","webkitTransition","create","transition","handleEntered","handleExiting","handleExit","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","next","childProps","visibility","TextField","TextValidator","marginBottom","SelectField","SelectValidator","IntakeClientForm","CLientData","useSelector","client","useAuth","useState","email","age","ethnics","ethnicity","genderBio","gender_bio","genderId","gender_identified","setState","centerData","setCenterData","setOpen","openModal","setOpenModal","msg","setMsg","dispatch","useDispatch","handleChange","useEffect","center","res","console","log","onSubmit","options","status","publishedAt","moment","format","slice","blocked","provider","center_type_id","center_type","state_code","code","trim","setClientData","handleNext","onError","Grid","rowSpacing","columnSpacing","lg","md","sm","xs","fullWidth","validators","errorMessages","minWidth","FormControl","from","length","_","i","map","MenuItem","handleCancel","ml","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","autoClose","hideProgressBar","newestOnTop","AddClinician","clientData","clientId","clinicians","setClinicians","assignedClinician","setAssignedClinicin","initialValue","setInitialValue","loading","setLoading","counsellors","fetchClinicians","obj","counsellor","Number","setClicianData","Autocomplete","disablePortal","newValue","inputValue","onInputChange","newInputValue","isOptionEqualToValue","option","renderInput","params","handleBack","IntakeNotes","notesData","notes","isUpdatedNote","details","updateNotes","toast","added_by","client_id","setIsUpdatedNote","multiline","rows","IntakeDeviceIssue","deviceType","passPhrases","setPassPhrases","fetchAllPassphrases","passPhrase","Math","floor","random","license","license_type","passphrase","used","device_type","state_id","resetClient","InputLabel","Select","labelId","IntakeTrauma","traumaData","trauma","traumaList","setTraumaList","settrauma","setError","handleSave","traumas","setTraumaData","a","getTraumaList","filter","spacing","columns","Checkbox","indexOf","IntakeBarrier","barrierData","barrier","barriers","setBarriers","selectedBarrier","setSelectedBarrier","BarrierList","index","setBarrierData","IntakeTreatment","clientID","treatmentData","treatment","updateClientState","initialDiagnosis","formsOfTreatMent","locationOfTreatment","listOfDiagnosis","setListOfDiagnosis","listOfTreatment","setListOfTreatment","listOfLocations","setListOfLocations","getInitialData","initial_diagnosis","treatment_location","setTreatmentData","updatesClient","setClientId","defaultValue","Warning","Modal","handleClose","Box","mt","handleRedirect","getStepContent","stepIndex","IntakeClinicianAssign","AddClient","activeStep","setActiveStep","steps","routeSegments","Stepper","alternativeLabel","Step","StepLabel","pt","prevActiveStep"],"mappings":"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","file":"static/js/19.325fd401.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClicians = (id) => {\n    let url = `/api/centers/${id}`;\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClients = (page) => {\n    let url = `/api/clients?pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const fetchBarriers = (id) => {\n    let url = `/api/barriers`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const createClient = (data) => {\n    let url = `/api/clients`\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClient = (id) => {\n    let url = `/api/clients/${id}`\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const createLicense = (data) => {\n    let url = `/api/licenses`\n    return makeRequest('POST', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const updateLicense = (id, data) => {\n    let url = `/api/licenses/${id}`\n    return makeRequest('PUT', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const getClientDetails = (id) => {\n    let url = `/api/clients/${id}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const updateClientTrauma = (id,data) => {\n    let url = `/api/clients/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const filterClients = (data, page) => {\n    let url = `/api/clients?filter[clinician]=${data.clinician}&filter[device]=${data.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const addNotes = (data) => {\n    let url = `/api/notes`;\n\n    return makeRequest('POST', url,data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchPassphrases = () => {\n    let url = `/api/passphrases`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const findClients = (searchData, filterData, page) => {\n    let url = `/api/clients?search=${searchData}&filter[clinician]=${filterData.clinician}&filter[device]=${filterData.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchInitialDiagnosis = () => {\n    let url = `/api/initial-diagnoses`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchListOfTreatments = () => {\n    let url = `/api/treatments`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\nexport const fetchListOfLocations = () => {\n    let url = `/api/treatment-locations`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateNote = (id,data) => {\n    let url = `/api/notes/${id}`\n\n    return makeRequest('PUT', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createSession = (data) => {\n    let url = `/api/sessions`\n\n    return makeRequest('POST', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const checkUnique = (data) => {\n    let url = `/api/clients?check=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateClient = (id, data) => {\n    let url = `/api/clients/${id}`;\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import { makeRequest } from './authenticationService';\n\nexport const fetchCenter = (page) => {\n    // let url = `/api/centers?pagination[page]=${page}`;\n    let url = '/api/centers';\n\n    if(page){\n        url += `?pagination[page]=${page}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getAllCenters = () => {\n    let url = '/api/centers?all=-1';\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getCenterDetails = (id) => {\n    let url = `/api/centers/${id}`;\n\n    return makeRequest('GET', url, )\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\n\nexport const searchCenters = (data,page) => {\n    let url = `/api/centers?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const filterCenters = (data,page) => {\n    let url = `/api/centers?filter=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const findCenters = (searchData, filters, page) => {\n    let url = `/api/centers?search=${searchData}&filter=${filters}&pagination[page]=${page}`;\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","export function formatCouncelorList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            if(item && item.user && item.user.confirmed){\n                response.push(formatClinician(item))\n            }\n            \n        })\n    } else {\n        response.push(formatClinician(data))\n    }\n    return response\n}\n\nfunction formatClinician(item){\n    return {\n        name:item?.name,\n        id:item?.id,\n        label:item?.name\n    }\n}\n\nexport function formatTraumaList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(getFormatedData(item))\n        })\n    } else {\n        response.push(getFormatedData(data))\n    }\n    return response\n}\n\nfunction getFormatedData(item){\n    return {\n        traumaCode:item.attributes.trauma_code,\n        traumaName:item.attributes.trauma_name,\n        traumaId:item.id\n    }\n}\n\n\nexport function formatBarrierList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(getFormatedBarrierData(item))\n        })\n    } else {\n        response.push(getFormatedBarrierData(data))\n    }\n    return response\n}\n\nfunction getFormatedBarrierData(item){\n    return {\n        barrierName:item.barrier_name,\n        barrierId:item.id\n    }\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"container\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef, HTMLElementType, chainPropTypes } from '@mui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getTranslateValue(direction, node, resolvedContainer) {\n  const rect = node.getBoundingClientRect();\n  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    if (containerRect) {\n      return `translateX(${containerRect.right + offsetX - rect.left}px)`;\n    }\n\n    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    if (containerRect) {\n      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;\n    }\n\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    if (containerRect) {\n      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;\n    }\n\n    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  if (containerRect) {\n    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;\n  }\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nfunction resolveContainer(containerPropProp) {\n  return typeof containerPropProp === 'function' ? containerPropProp() : containerPropProp;\n}\n\nexport function setTranslateValue(direction, node, containerProp) {\n  const resolvedContainer = resolveContainer(containerProp);\n  const transform = getTranslateValue(direction, node, resolvedContainer);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n/**\n * The Slide transition is used by the [Drawer](/material-ui/react-drawer/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const theme = useTheme();\n  const defaultEasing = {\n    enter: theme.transitions.easing.easeOut,\n    exit: theme.transitions.easing.sharp\n  };\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    container: containerProp,\n    direction = 'down',\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node, containerProp);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    setTranslateValue(direction, node, containerProp);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(childrenRef.current, next);\n    }\n  };\n\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current, containerProp);\n    }\n  }, [direction, containerProp]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current, containerProp);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp, containerProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the container the Slide is transitioning from.\n   */\n  container: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.func]), props => {\n    if (props.open) {\n      const resolvedContainer = resolveContainer(props.container);\n\n      if (resolvedContainer && resolvedContainer.nodeType === 1) {\n        const box = resolvedContainer.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['MUI: The `container` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== 'function' || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {\n        return new Error(['MUI: The `container` prop provided to the component is invalid.', 'It should be an HTML element instance.'].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: theme.transitions.easing.easeOut,\n   *   exit: theme.transitions.easing.sharp,\n   * }\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import { Grid, Box, Snackbar, Alert } from '@mui/material'\nimport { styled } from '@mui/system'\nimport React, { useState,useEffect } from 'react'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Button from '@mui/material/Button'\nimport './IntakeClientForm.css'\nimport { SelectValidator } from 'react-material-ui-form-validator'\nimport { useDispatch,useSelector } from 'react-redux'\nimport {setClientData} from \"app/redux/actions/ClientIntakeActions\"\nimport {useNavigate} from \"react-router-dom\";\nimport moment from 'moment';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getCenterDetails } from 'app/services/centerService'\nimport useAuth from 'app/hooks/useAuth'\nimport { checkUnique } from 'app/services/clientService';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst TextField = styled(TextValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px',\n}))\n\n\nconst SelectField = styled(SelectValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px'\n}))\n\nfunction IntakeClientForm(props) {\n    const navigate = useNavigate();\n    const CLientData = useSelector((state) => state.client)\n    const {user} = useAuth()\n    const [state, setState] = useState({\n        email: CLientData.client &&CLientData.client.data.email?CLientData.client.data.email:\"\",\n        name: CLientData.client && CLientData.client.data.name?CLientData.client.data.name:\"\",\n        age: CLientData.client && CLientData.client.data.age?CLientData.client.data.age:\"\",\n        ethnics: CLientData.client && CLientData.client.data.ethnicity ?CLientData.client.data.ethnicity:\"\",\n        genderBio: CLientData.client && CLientData.client.data.gender_bio?CLientData.client.data.gender_bio:\"\",\n        genderId: CLientData.client && CLientData.client.data.gender_identified?CLientData.client.data.gender_identified:\"\",\n    })\n    const [centerData,setCenterData] = useState({})\n    const [open,setOpen] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n    // const [isUnique,setUnique] = useState()\n    // const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n\n    const handleChange = (event) => {\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const { name, age, ethnics, genderBio, genderId } = state\n    \n      const handleSubmit = (event) => {\n          let options = {\n              client: {\n                  data: {\n                      name: name,\n                      age: age,\n                      ethnicity: ethnics,\n                      gender_bio: genderBio,\n                      gender_identified: genderId,\n                      center: user?.center?.id,\n                      status: 'new',\n                      publishedAt:\n                          moment().format().split('T')[0] +\n                          ' ' +\n                          moment().format().split('T')[1].slice(0, 8),\n                  },\n              },\n              user: {\n                  data: {\n                      confirmed: true,\n                      blocked: false,\n                      provider: 'local',\n                      role: 3,\n                  },\n              },\n              center_type_id: centerData?.center_type?.center_type_id,\n              state_code: centerData?.state?.code,\n        }\n        checkUnique(name.trim())\n            .then(resp => {\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                if(resp === true){\n                    setOpen(true)\n                }else{\n                    dispatch(setClientData(options))\n                    props.handleNext()\n                }\n            }\n        })\n      }\n\n    useEffect(() => {\n        if(user){\n        getCenterDetails(user?.center?.id)\n        .then((res) => {\n            if(res?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setCenterData(res);\n            }\n        })\n        .catch(err => {\n            console.log(\"error\",err)\n        })\n        }\n      },[user])\n\n\n      return (\n        <>\n            <ValidatorForm\n                onSubmit={handleSubmit}\n                onError={() => null}\n                className=\"add-client\"\n            >\n                <h2>Client details</h2>\n                <Grid container rowSpacing={2} columnSpacing={6}>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"first_name\"\n                            name=\"name\"\n                            label=\"Record name*\"\n                            type=\"text\"\n                            value={name}\n                            onChange={handleChange}\n                            // onBlur={checkUniqueName}\n                            fullWidth\n                            validators={['required']}\n                            errorMessages={['This field is required']}\n                        />\n                    </Grid>\n                    \n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <TextField\n                            // autoFocus\n                            margin=\"dense\"\n                            id=\"country\"\n                            name=\"country\"\n                            label=\"Country*\"\n                            type=\"text\"\n                            value={'United states'}\n                            onChange={handleChange}\n                            fullWidth\n                            validators={['required']}\n                            disabled={true}\n                            errorMessages={['This field is required']}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container rowSpacing={2} columnSpacing={6}>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <SelectField\n                                    id=\"demo-simple-select\"\n                                    value={age}\n                                    label=\"Age*\"\n                                    onChange={handleChange}\n                                    name=\"age\"\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                >\n                                    {Array.from({length: 25}, (_, i) => i + 1).map((value,i)=>(\n                                        <MenuItem value={value} key={i}>{value}</MenuItem>\n                                    ))}\n                                </SelectField>\n                            </FormControl>\n                        </Box>\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <SelectField\n                                    id=\"demo-simple-select\"\n                                    value={ethnics}\n                                    label=\"Ethnics*\"\n                                    onChange={handleChange}\n                                    name=\"ethnics\"\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                >\n                                    <MenuItem value={\"American Indian\"}>American Indian</MenuItem>\n                                    <MenuItem value={\"Alaska Native\"}>Alaska Native</MenuItem>\n                                    <MenuItem value={\"Asian\"}>Asian</MenuItem>\n                                    <MenuItem value={\"Black or African American\"}>Black or African American</MenuItem>\n                                    <MenuItem value={\"Hispanic or Latino\"}>Hispanic or Latino</MenuItem>\n                                    <MenuItem value={\"Native Hawaiian\"}>Native Hawaiian</MenuItem>\n                                    <MenuItem value={\"Pacific Islander\"}>Pacific Islander</MenuItem>\n                                    <MenuItem value={\"White\"}>White</MenuItem>\n                                    <MenuItem value={\"Unknown\"}>Unknown</MenuItem>\n                                </SelectField>\n                            </FormControl>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid container rowSpacing={2} columnSpacing={6}>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <SelectField\n                                    id=\"demo-simple-select\"\n                                    value={genderBio}\n                                    label=\"Gender Bio*\"\n                                    onChange={handleChange}\n                                    name=\"genderBio\"\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                >\n                                    <MenuItem value={\"Male\"}>Male</MenuItem>\n                                    <MenuItem value={\"Female\"}>Female</MenuItem>\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\n                                </SelectField>\n                            </FormControl>\n                        </Box>\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <SelectField\n                                    id=\"demo-simple-select\"\n                                    value={genderId}\n                                    label=\"Identified Gender*\"\n                                    onChange={handleChange}\n                                    name=\"genderId\"\n                                    validators={['required']}\n                                    errorMessages={['This field is required']}\n                                >\n                                    <MenuItem value={genderBio}>Same as Bio</MenuItem>\n                                    <MenuItem value={\"Male\"}>Male</MenuItem>\n                                    <MenuItem value={\"Female\"}>Female</MenuItem>\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\n                                </SelectField>\n                            </FormControl>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <div className=\"client-buttons\">\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={props.handleCancel}\n                >\n                    Cancel\n                </Button>\n                {/* <Button\n                    sx={{ ml: 2 }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled\n                    onClick={props.handleBack}\n                >\n                    Back\n                </Button> */}\n                <Button\n                    sx={{ ml: 2 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                >\n                    Next\n                </Button>\n            </div>\n            </ValidatorForm>\n            <Snackbar\n                open={open}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                autoHideDuration={3000}\n                onClose={() => {\n                   setOpen(false)\n                }}\n            >\n                <Alert\n                    onClose={() => {\n                        setOpen(false)\n                    }}\n                    variant=\"filled\"\n                    severity=\"error\"\n                    sx={{ width: '100%' }}\n                >\n                    The name already exists\n                </Alert>\n            </Snackbar>\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpen(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpen(false);\n                }}\n            />\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n            />\n        </>\n    )\n}\n\nexport default IntakeClientForm\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Box } from '@mui/material'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport Button from '@mui/material/Button'\nimport useAuth from 'app/hooks/useAuth'\nimport './AddClinician.css'\nimport { fetchClicians, updateClientTrauma } from 'app/services/clientService'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { formatCouncelorList } from 'app/utils/client.list.formatter'\nimport { setClicianData } from 'app/redux/actions/ClientIntakeActions';\nimport { useNavigate } from 'react-router-dom';\nimport Loading from 'app/components/MatxLoading/MatxLoading'\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nfunction AddClinician(props) {\n    const {user} = useAuth();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const clinician = useSelector((state) => state.clinician);\n    const clientData = useSelector((state) => state.clientId);\n    const [clinicians, setClinicians]= useState([]);\n    const [assignedClinician,setAssignedClinicin]= useState(clinician?.assignedClinician || \"\");\n    const [initialValue,setInitialValue]= useState(clinician?.assignedClinician?.name || \"\");\n    const [loading,setLoading]= useState([]);\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n\n    const handleSubmit = (event) => {\n        if (assignedClinician) {\n            const obj = {\n                assignedClinician: assignedClinician,\n            }\n            const options = {\n                data: {\n                    counsellor: Number(assignedClinician.id),\n                },\n            }\n            dispatch(setClicianData(obj))\n            updateClientTrauma(clientData.id, options)\n                .then((resp) => {\n                    if(resp?.error?.name === 'UnauthorizedError'){\n                        setOpenModal(true);\n                        setMsg('Your session has expired. You will be logged out.');\n                    } else { \n                        props.handleNext();\n                    }\n                })\n                .catch((err) => {\n                    console.log('error', err)\n                })\n        } else {\n            props.handleNext();\n        }\n    }\n\n    const handleBack = () => {\n        if (assignedClinician) {\n            const obj = {\n                assignedClinician: assignedClinician,\n            }\n            dispatch(setClicianData(obj))\n            props.handleBack()\n        } else {\n            props.handleBack()\n        }\n    }\n\n    const fetchClinicians = () => {\n        setLoading(true)\n        try {\n            fetchClicians(user?.center?.id)\n            .then((res)=>{\n                setLoading(false)\n                if(res?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else { \n                    setClinicians(formatCouncelorList(res.counsellors));\n                }\n            })\n        } catch (error) {\n            setLoading(false)\n            console.log(\"error\",error)\n        }\n    }\n    useEffect(() => {\n        fetchClinicians()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n\n    return (\n        <>\n            {loading && <Loading />}\n            {!loading && (\n                <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n                    <h2>Assign Provider</h2>\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Box sx={{ minWidth: 120 }}>\n                                <Autocomplete\n                                    disablePortal\n                                    fullWidth\n                                    id=\"combo-box-demo\"\n                                    options={clinicians || []}\n                                    sx={{ width: 300 }}\n                                    value={initialValue}\n                                    onChange={(event, newValue) => {\n                                        setAssignedClinicin(newValue)\n                                    }}\n                                    inputValue={initialValue}\n                                    onInputChange={(event, newInputValue) => {\n                                        setInitialValue(newInputValue)\n                                    }}\n                                    isOptionEqualToValue={(option, value) => \n                                        true\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField {...params} label=\"Assign Provider\" />\n                                    )}\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <div className=\"client-buttons\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={props.handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleBack}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            // onClick={handleSubmit}\n                            type=\"submit\"\n                        >\n                            Save and continue\n                        </Button>\n                    </div>\n                </ValidatorForm>\n            )}\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </>\n    )\n}\n\nexport default AddClinician\n","import React, { useState } from 'react'\nimport { Grid } from '@mui/material'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport useAuth from 'app/hooks/useAuth'\nimport './IntakeNotes.css'\nimport { addNotes, updateClientTrauma, updateNote } from 'app/services/clientService'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setIsUpdatedNote, updateNotes } from 'app/redux/actions/ClientIntakeActions'\nimport moment from 'moment';\nimport { ToastContainer, toast } from 'react-toastify'\n\n// const TextField = styled(TextValidator)(() => ({\n//     width: '100%',\n//     // marginBottom: '16px',\n// }))\n\nconst IntakeNotes = (props) => {\n    const clientData = useSelector((state) => state.clientId)\n    const notesData = useSelector((state) => state.notes)\n    const isUpdatedNote = useSelector((state) => state.isUpdatedNote)\n    const [state, setState] = useState({\n        notes: notesData && notesData.notes ?notesData.notes:\"\"\n    })\n    const {user} = useAuth()\n    const dispatch = useDispatch()\n    const handleSubmit = () => {\n        if (notes !== '') {\n            if (!isUpdatedNote) {\n                const options = {\n                    data: {\n                        added_by: user?.center?.name,\n                        details: notes,\n                        center: user?.center?.id,\n                        client_id: clientData.clientId + '' || null,\n                        publishedAt:\n                            moment().format().split('T')[0] +\n                            ' ' +\n                            moment().format().split('T')[1].slice(0, 8),\n                    },\n                }\n                addNotes(options)\n                    .then((res) => {\n                        dispatch(updateNotes({ notes, id: res?.data?.id }))\n                        const updateData = {\n                            data: {\n                                status: 'inProcess',\n                            },\n                        }\n                        updateClientTrauma(clientData.id, updateData)\n                            .then((resp) => {\n                                dispatch(setIsUpdatedNote(true))\n                                props.handleNext()\n                            })\n                            .catch((err) => {\n                                console.log('error', err)\n                            })\n                    })\n                    .catch((err) => {\n                        console.log('error', err)\n                    })\n            }else{\n                const options = {\n                    data:{\n                        details:notes\n                    }\n                }\n                dispatch(updateNotes({ notes, id:notesData?.id }))\n                updateNote(notesData?.id,options)\n                .then(resp => {\n                    props.handleNext()\n                })\n                .catch(err => {\n                    console.log(\"error\",err)\n                    toast.error('Something went wrong', {\n                        theme: 'colored',\n                    })\n                })\n            }\n        } else {\n            props.handleNext()\n        }\n    }\n\n    const handleBack = () => {\n        if(notes !== '' && !isUpdatedNote){\n            dispatch(updateNotes({ notes, id: \"\" }))\n            props.handleBack()\n        }else{\n            props.handleBack()\n        }\n        \n    }\n\n    const handleChange = (event) => {\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const { notes } = state\n\n    return (\n        <>\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\n                <h2>Notes</h2>\n                <Grid>\n                    <TextField\n                        autoFocus\n                        sx={{ width: '100%' }}\n                        id=\"outlined-multiline-static\"\n                        label=\"Notes\"\n                        multiline\n                        rows={4}\n                        value={notes}\n                        name={'notes'}\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <div className=\"client-buttons\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"error\"\n                        onClick={props.handleCancel}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        sx={{ ml: 2 }}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleBack}\n                    >\n                        Back\n                    </Button>\n                    <Button\n                        sx={{ ml: 2 }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        // onClick={handleSubmit}\n                        type=\"submit\"\n                    >\n                        Save and continue\n                    </Button>\n                </div>\n            </ValidatorForm>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n            />\n        </>\n    )\n}\n\nexport default IntakeNotes\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Box, Snackbar, Alert } from '@mui/material'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select from '@mui/material/Select'\nimport Button from '@mui/material/Button'\nimport { useNavigate } from 'react-router-dom'\nimport './IntakeDeviceIssue.css'\n// import IntakeDeviceIssueSuccess from './IntakeDeviceIssueSuccess'\nimport useAuth from 'app/hooks/useAuth'\nimport {\n    createLicense,\n    fetchPassphrases,\n} from 'app/services/clientService'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport Loading from '../MatxLoading/MatxLoading'\nimport { useDispatch } from 'react-redux'\nimport { resetClient } from 'app/redux/actions/ClientIntakeActions'\nimport moment from 'moment'\n// import AssignDevice from '../AssignDialog/AssignDevice'\nimport { getCenterDetails } from 'app/services/centerService'\nimport { deviseLisence } from 'app/redux/reducers/ClientIntakeReducer'\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst IntakeDeviceIssue = (props) => {\n    const { user } = useAuth();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const clientData = useSelector((state) => state.clientId)\n    const [state, setState] = useState({\n        deviceType: '',\n    })\n    const [passPhrases, setPassPhrases] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [centerData,setCenterData] = useState({})\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const handleSave = (event) => {\n        if (deviceType !== '') {\n            setLoading(true)\n            const passPhrase =\n                passPhrases[Math.floor(Math.random() * passPhrases.length)]\n            const options = {\n                license: {\n                    data: {\n                        license_type:\n                            deviceType === 'Loaner' ? 'Limited' : 'Freehold',\n                        client: clientData?.id,\n                        center: user?.center?.id,\n                        passphrase: passPhrase?.id || null,\n                        status: deviceType === 'BYOD' ? 'Used' : 'New',\n                        publishedAt:\n                            moment().format().split('T')[0] +\n                            ' ' +\n                            moment().format().split('T')[1].slice(0, 8),\n                    },\n                },\n                passphrase: {\n                    data: {\n                        used: true,\n                        publishedAt:\n                            moment().format().split('T')[0] +\n                            ' ' +\n                            moment().format().split('T')[1].slice(0, 8),\n                    },\n                },\n                device: {\n                    data: {\n                        center: user?.center?.id,\n                        publishedAt:\n                            moment().format().split('T')[0] +\n                            ' ' +\n                            moment().format().split('T')[1].slice(0, 8),\n                    },\n                },\n                device_type: deviceType,\n                state_code: centerData?.state?.state_id,\n            }\n            createLicense(options)\n                .then((res) => {\n                    if(res?.error?.name === 'UnauthorizedError'){\n                        setLoading(false);\n                        setOpenModal(true);\n                        setMsg('Your session has expired. You will be logged out.');\n                    } else {\n                        if (res.status === 'success') {\n                            setLoading(false);\n                            setOpen(true);\n                            dispatch(resetClient())\n                        }\n                    }\n                })\n                .catch((err) => {\n                    console.log('error', err)\n                })\n        } else {\n            setLoading(false)\n            dispatch(resetClient())\n            setOpen(true)\n        }\n    }\n\n    const handleBack = () => {\n        if(deviceType !== \"\"){\n            dispatch(deviseLisence(deviceType))\n            props.handleBack()\n        }else{\n            props.handleBack()\n        }\n    }\n\n    const handleChange = (event) => {\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n    const { deviceType } = state\n\n    // const fetchClinicians = () => {\n    //     try {\n    //         fetchClicians(user?.center?.id).then((res) => {\n    //             setDevices(res.devices ? res.devices : [])\n    //         })\n    //     } catch (error) {\n    //         console.log('error', error)\n    //     }\n    // }\n\n    const fetchAllPassphrases = () => {\n        try {\n            fetchPassphrases().then((res) => {\n                if(res?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    setPassPhrases(res);\n                }\n            })\n        } catch (error) {\n            console.log('error', error)\n        }\n    }\n\n    // const handleSubmit = (data) => {\n    //     setAssignDevice(false)\n    //     setCurrentDevice(data)\n    //     setSucess(true)\n    // }\n\n    useEffect(() => {\n        // fetchClinicians()\n        fetchAllPassphrases()\n        if(user){\n            getCenterDetails(user?.center?.id)\n            .then((res)=>{\n                setCenterData(res)\n            })\n            .catch(err => {\n                console.log(\"error\",err)\n            })\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            {loading && <Loading />}\n            {!loading && (\n                <ValidatorForm onSubmit={handleSave} onError={() => null}>\n                    <h2>Device / License Type</h2>\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Box sx={{ minWidth: 120 }}>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"demo-simple-select-label\">\n                                        Device / License Type\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={deviceType}\n                                        label=\"Device / License Type\"\n                                        onChange={handleChange}\n                                        name=\"deviceType\"\n                                    >\n                                        <MenuItem value={'Loaner'}>\n                                            Loaner\n                                        </MenuItem>\n                                        <MenuItem value={'BYOD'}>BYOD</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <div className=\"client-buttons\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={props.handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={props.handleBack}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                        >\n                            Save and finish\n                        </Button>\n                    </div>\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={3000}\n                        hideProgressBar={true}\n                        newestOnTop={false}\n                    />\n                </ValidatorForm>\n                \n            )}\n            {/* {success && !loading && clientData?.clientId && passPhraseValue && (\n                <IntakeDeviceIssueSuccess\n                    clientId={clientData?.clientId || ''}\n                    passPhraseValue={passPhraseValue}\n                    deviceType={\n                        deviceType === 'BYOD'\n                            ? deviceType\n                            : currentDevice.device_id +\n                              '-' +\n                              currentDevice.device_type\n                    }\n                />\n            )}\n            <AssignDevice\n                open={assignDevice}\n                row={devices}\n                handleClose={() => setAssignDevice(false)}\n                handleSubmit={handleSubmit}\n                clientId={clientData.id}\n                licenseId={licenseId}\n            /> */}\n            <Snackbar\n                open={open}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                autoHideDuration={3000}\n                onClose={() => {\n                   setOpen(false)\n                   navigate(\"/clients\")\n                }}\n            >\n                <Alert\n                    onClose={() => {\n                        setOpen(false)\n                        navigate(\"/clients\")\n                    }}\n                    variant=\"filled\"\n                    severity=\"success\"\n                    sx={{ width: '100%' }}\n                >\n                    Client data saved succesfully\n                </Alert>\n            </Snackbar>\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </>\n    )\n}\n\nexport default IntakeDeviceIssue\n","import Button from '@mui/material/Button'\nimport React, { useEffect, useState } from 'react'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport { getTraumaList } from 'app/services/userService'\nimport { formatTraumaList } from 'app/utils/client.list.formatter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setTraumaData } from 'app/redux/actions/ClientIntakeActions'\nimport { Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst IntakeTrauma = (props) => {\n    const navigate = useNavigate();\n    const traumaData = useSelector((state) => state.trauma)\n    const [traumaList, setTraumaList] = useState([])\n    const [trauma, settrauma] = useState(\n        traumaData && traumaData.trauma && traumaData.trauma.length > 0\n            ? traumaData.trauma\n            : []\n    )\n    const [error, setError] = useState(false)\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const dispatch = useDispatch()\n    const handleSave = () => {\n        let traumas = []\n        trauma.forEach((item) => {\n            traumas.push({ id: Number(item) })\n        })\n        const options = {\n            data: {\n                traumas,\n            },\n        }\n        if (trauma.length !== 0) {\n            setError(false)\n            // updateClientTrauma(clinetId,options)\n            dispatch(setTraumaData({ options, trauma }))\n            props.handleNext()\n        } else {\n            setError(true)\n        }\n    }\n\n    const handleBack = () => {\n        let traumas = []\n        trauma.forEach((item) => {\n            traumas.push({ id: Number(item) })\n        })\n        const options = {\n            data: {\n                traumas,\n            },\n        }\n        if (trauma.length !== 0) {\n            dispatch(setTraumaData({ options, trauma }))\n            props.handleBack()\n        } else {\n            props.handleBack()\n        }\n    }\n    useEffect(() => {\n        ;(async () => {\n            try {\n                const resp = await getTraumaList();\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else { \n                    if (resp && resp.data) {\n                        setTraumaList(formatTraumaList(resp.data))\n                    }\n                }\n            } catch (err) {\n                console.log('err', err)\n            }\n        })()\n    }, [])\n\n    const handleChange = (event) => {\n        let traumas = []\n        if (event.target.checked) {\n            traumas = [...trauma, Number(event.target.value)]\n        } else {\n            traumas = trauma.filter(\n                (item) => item !== Number(event.target.value)\n            )\n        }\n        settrauma(traumas)\n    }\n\n    return (\n        <FormGroup onSubmit={handleSave} onChange={handleChange}>\n            <h2>Trauma</h2>\n            <Grid\n                container\n                spacing={{ xs: 1, md: 1 }}\n                columns={{ xs: 2, sm: 8, md: 12 }}\n            >\n                {traumaList &&\n                    traumaList.map((item, i) => (\n                        <Grid item xs={2} sm={4} md={4} key={i}>\n                            <FormControlLabel\n                                control={<Checkbox />}\n                                label={item.traumaName}\n                                value={item.traumaId}\n                                checked={\n                                    trauma.indexOf(item.traumaId) === -1\n                                        ? false\n                                        : true\n                                }\n                                // key={i}\n                            />\n                        </Grid>\n                    ))}\n            </Grid>\n            {error && (\n                <span style={{ color: 'red' }}>*Select at least one</span>\n            )}\n            <div className=\"client-buttons\">\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={props.handleCancel}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    sx={{ ml: 2 }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleBack}\n                >\n                    Back\n                </Button>\n                <Button\n                    sx={{ ml: 2 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSave}\n                >\n                    Next\n                </Button>\n            </div>\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </FormGroup>\n    )\n}\n\nexport default IntakeTrauma\n","import Button from '@mui/material/Button'\nimport React, { useEffect, useState } from 'react'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport { Grid } from '@mui/material'\nimport {\n    fetchBarriers,\n} from 'app/services/clientService';\nimport { useNavigate } from 'react-router-dom';\nimport { formatBarrierList } from 'app/utils/client.list.formatter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setBarrierData } from 'app/redux/actions/ClientIntakeActions'\nimport Loading from '../MatxLoading/MatxLoading'\nimport { ToastContainer } from 'react-toastify'\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst IntakeBarrier = (props) => {\n    const navigate = useNavigate();\n    const barrierData = useSelector((state) => state.barrier)\n    const [barriers, setBarriers] = useState([])\n    const [selectedBarrier, setSelectedBarrier] = useState(\n        barrierData &&\n            barrierData.selectedBarrier &&\n            barrierData.selectedBarrier.length > 0\n            ? barrierData.selectedBarrier\n            : []\n    )\n    const [error, setError] = useState(false)\n    const [loading] = useState(false)\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const dispatch = useDispatch()\n\n    const handleSave = () => {\n        let barriers = []\n        selectedBarrier.forEach((item) => {\n            barriers.push({ id: Number(item) })\n        })\n        const options = {\n            data: {\n                barriers,\n            },\n        }\n        if (selectedBarrier.length !== 0) {\n            setError(false)\n            dispatch(setBarrierData({ options, selectedBarrier }))\n            props.handleNext()\n            \n        } else {\n            setError(true)\n        }\n    }\n\n    const handleBack = () => {\n        let barriers = []\n        selectedBarrier.forEach((item) => {\n            barriers.push({ id: Number(item) })\n        })\n        const options = {\n            data: {\n                barriers,\n            },\n        }\n        if (selectedBarrier.length !== 0) {\n            dispatch(setBarrierData({ options, selectedBarrier }))\n            props.handleBack()\n            \n        } else {\n            props.handleBack()\n        }\n    }\n\n    useEffect(() => {\n        ;(async () => {\n            try {\n                const resp = await fetchBarriers();\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    if (resp) {\n                        setBarriers(formatBarrierList(resp))\n                    }\n                }\n            } catch (err) {\n                console.log('err', err)\n            }\n        })()\n    }, [])\n\n    const handleChange = (event) => {\n        let BarrierList = []\n        if (event.target.checked) {\n            BarrierList = [...selectedBarrier, Number(event.target.value)]\n        } else {\n            BarrierList = selectedBarrier.filter(\n                (item) => item !== Number(event.target.value)\n            )\n        }\n        setSelectedBarrier(BarrierList)\n    }\n\n    return (\n        <>\n            {loading && <Loading />}\n            {!loading && (\n                <FormGroup onChange={handleChange}>\n                    <h2>Barriers</h2>\n                    <Grid\n                        container\n                        spacing={{ xs: 1, md: 1 }}\n                        columns={{ xs: 2, sm: 8, md: 12 }}\n                    >\n                        {barriers &&\n                            barriers.map((item, index) => (\n                                <Grid item xs={2} sm={4} md={4} key={index}>\n                                    <FormControlLabel\n                                        control={<Checkbox />}\n                                        label={item.barrierName}\n                                        value={item.barrierId}\n                                        checked={\n                                            selectedBarrier.indexOf(\n                                                item.barrierId\n                                            ) === -1\n                                                ? false\n                                                : true\n                                        }\n                                    />\n                                </Grid>\n                            ))}\n                    </Grid>\n                    {error && (\n                        <span style={{ color: 'red' }}>\n                            *Select at least one\n                        </span>\n                    )}\n                    <div className=\"client-buttons\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={props.handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleBack}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSave}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={3000}\n                        hideProgressBar={true}\n                        newestOnTop={false}\n                    />\n                    <SessionModal\n                        open={openModal}\n                        text={msg}\n                        onConfirmDialogClose={() => {\n                            setMsg('');\n                            setOpenModal(false);\n                        }}\n                        onYesClick={() => {\n                            setMsg('');\n                            setOpenModal(false);\n                        }}\n                    />\n                </FormGroup>\n            )}\n        </>\n    )\n}\n\nexport default IntakeBarrier\n","import { Grid, Box } from '@mui/material'\nimport { styled } from '@mui/system'\nimport React, { useState, useEffect } from 'react'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Button from '@mui/material/Button'\nimport { SelectValidator } from 'react-material-ui-form-validator'\nimport { useDispatch } from 'react-redux'\nimport { setClientId, setTreatmentData, updatesClient } from 'app/redux/actions/ClientIntakeActions'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {useSelector } from 'react-redux'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport {\n    createClient,\n    fetchInitialDiagnosis,\n    fetchListOfLocations,\n    fetchListOfTreatments,\n    updateClientTrauma,\n} from 'app/services/clientService'\nimport Loading from '../MatxLoading/MatxLoading'\n\nconst SelectField = styled(SelectValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px',\n}))\n\nconst IntakeTreatment = (props) => {\n    const navigate = useNavigate();\n    const clientID = useSelector((state) => state.clientId)\n    const CLientData = useSelector((state) => state.client)\n    const traumaData = useSelector((state) => state.trauma)\n    const barrierData = useSelector((state) => state.barrier)\n    const treatmentData = useSelector((state) => state.treatment)\n    const updateClientState = useSelector((state) => state.updateClient)\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n    const [state, setState] = useState({\n        initialDiagnosis:\n            treatmentData && treatmentData.initialDiagnosis\n                ? treatmentData.initialDiagnosis\n                : '',\n        formsOfTreatMent:\n            treatmentData && treatmentData.formsOfTreatMent\n                ? treatmentData.formsOfTreatMent\n                : '',\n        locationOfTreatment:\n            treatmentData && treatmentData.locationOfTreatment\n                ? treatmentData.locationOfTreatment\n                : '',\n    })\n\n    const [listOfDiagnosis, setListOfDiagnosis] = useState([])\n    const [listOfTreatment, setListOfTreatment] = useState([])\n    const [listOfLocations, setListOfLocations] = useState([])\n\n    const [loading, setLoading] = useState(false)\n    const dispatch = useDispatch()\n\n    const {initialDiagnosis,formsOfTreatMent, locationOfTreatment } = state\n\n    const handleSubmit = () => {\n        const obj = {\n            initialDiagnosis:initialDiagnosis,\n            formsOfTreatMent:formsOfTreatMent,\n            locationOfTreatment:locationOfTreatment\n        }\n        const options = {\n            data: {\n                treatment: formsOfTreatMent,\n                initial_diagnosis: initialDiagnosis,\n                treatment_location: locationOfTreatment,\n            },\n        }\n        dispatch(setTreatmentData(obj))\n        if(!updateClientState){\n            try {\n                createClient(CLientData)\n                    .then((resp) => {\n                        if(resp?.error?.name === 'UnauthorizedError'){\n                            setOpenModal(true);\n                            setMsg('Your session has expired. You will be logged out.');\n                        } else if (resp && resp.status === 'success') {\n                            const clientId = resp.client.id\n                            dispatch(\n                                setClientId({\n                                    id: resp.client.id,\n                                    clientId: resp?.client?.client_id,\n                                })\n                            )\n                            updateClientTrauma(\n                                clientId,\n                                traumaData.options\n                            ).then((res) => {\n                                updateClientTrauma(\n                                    clientId,\n                                    barrierData.options\n                                ).then((res) => {\n                                    updateClientTrauma(clientId, options).then(\n                                        (resp) => {\n                                            dispatch(updatesClient(true))\n                                            setLoading(false)\n                                            toast.success(\n                                                'Client Data saved successfully',\n                                                {\n                                                    theme: 'colored',\n                                                }\n                                            )\n\n                                            props.handleNext()\n                                        }\n                                    )\n                                })\n                            })\n                        } else if (resp && resp.status === 'fail') {\n                            setLoading(false)\n                            toast.error(resp.message, {\n                                theme: 'colored',\n                            })\n                        } else {\n                            setLoading(false)\n                            toast.error('Something went wrong', {\n                                theme: 'colored',\n                            })\n                        }\n                    })\n                    .catch((err) => {\n                        setLoading(false)\n                        toast.error('Something went wrong', {\n                            theme: 'colored',\n                        })\n                    })\n            } catch (err) {\n                console.log('error', err)\n                setLoading(false)\n                toast.error('Something went wrong', {\n                    theme: 'colored',\n                })\n            }\n        }else{\n            try {\n                const options = {\n                    data: {\n                        treatment: formsOfTreatMent.id,\n                        initial_diagnosis: initialDiagnosis.id,\n                        treatment_location: locationOfTreatment.id,\n                    },\n                }\n                \n                updateClientTrauma(clientID.id,CLientData?.client)\n                .then(res => {\n                    if(res?.error?.name === 'UnauthorizedError'){\n                        setOpenModal(true);\n                        setMsg('Your session has expired. You will be logged out.');\n                    } else {\n                        updateClientTrauma(clientID.id,traumaData?.options)\n                        .then(resp => {\n                            updateClientTrauma(clientID.id,barrierData?.options)\n                            .then(resp => {\n                                updateClientTrauma(clientID.id, options).then(\n                                    (resp) => {\n                                        dispatch(updatesClient(true))\n                                        setLoading(false)\n                                        toast.success(\n                                            'Client Data saved successfully',\n                                            {\n                                                theme: 'colored',\n                                            }\n                                        )\n\n                                        props.handleNext()\n                                    }\n                                )\n                            })\n                        })\n                    }\n                })\n            } catch (error) {\n                \n            }\n        }\n    }\n\n    const handleBack = () => {\n        const obj = {\n            initialDiagnosis:initialDiagnosis,\n            formsOfTreatMent:formsOfTreatMent,\n            locationOfTreatment:locationOfTreatment\n        }\n        dispatch(setTreatmentData(obj))\n        props.handleBack()\n    }\n\n    const handleChange = (event) => {\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n    const getInitialData = () => {\n        setLoading(true)\n        try {\n            fetchInitialDiagnosis().then((resp) => {\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    if (resp) {\n                        setListOfDiagnosis(resp)\n                    }\n                }\n            })\n            fetchListOfTreatments().then((resp) => {\n                if (resp) {\n                    setListOfTreatment(resp)\n                }\n            })\n            fetchListOfLocations().then((resp) => {\n                if (resp) {\n                    setListOfLocations(resp)\n                    setLoading(false)\n                }\n            })\n        } catch (error) {\n            console.log('error', error)\n        }\n    }\n\n    useEffect(() => {\n        getInitialData()\n    }, [])\n\n   \n    return (\n        <>\n            {loading && <Loading />}\n            {!loading && (\n                <ValidatorForm\n                    onSubmit={handleSubmit}\n                    onError={() => null}\n                    className=\"add-client\"\n                >\n                    <h2>Treatments</h2>\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Box sx={{ minWidth: 120 }}>\n                                <FormControl fullWidth>\n                                    <SelectField\n                                        id=\"demo-simple-select\"\n                                        value={initialDiagnosis}\n                                        label=\"Initial Diagnosis\"\n                                        onChange={handleChange}\n                                        name=\"initialDiagnosis\"\n                                        validators={['required']}\n                                        errorMessages={[\n                                            'This field is required',\n                                        ]}\n                                        defaultValue={''}\n                                    >\n                                        {listOfDiagnosis &&\n                                            listOfDiagnosis.map((item, i) => (\n                                                <MenuItem value={item.id} key={i}>\n                                                    {item.name}\n                                                </MenuItem>\n                                            ))}\n                                    </SelectField>\n                                </FormControl>\n                            </Box>\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Box sx={{ minWidth: 120 }}>\n                                <FormControl fullWidth>\n                                    <SelectField\n                                        id=\"demo-simple-select\"\n                                        value={formsOfTreatMent}\n                                        label=\"Forms of Treatment\"\n                                        onChange={handleChange}\n                                        name=\"formsOfTreatMent\"\n                                        validators={['required']}\n                                        errorMessages={[\n                                            'This field is required',\n                                        ]}\n                                        defaultValue={''}\n                                    >\n                                        {listOfTreatment &&\n                                            listOfTreatment.map((item, i) => (\n                                                <MenuItem\n                                                    value={item.id}\n                                                    key={i}\n                                                >\n                                                    {item.name}\n                                                </MenuItem>\n                                            ))}\n                                    </SelectField>\n                                </FormControl>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Box sx={{ minWidth: 120 }}>\n                                <FormControl fullWidth>\n                                    <SelectField\n                                        id=\"demo-simple-select\"\n                                        value={locationOfTreatment}\n                                        label=\"Location of Treatment\"\n                                        onChange={handleChange}\n                                        name=\"locationOfTreatment\"\n                                        validators={['required']}\n                                        errorMessages={[\n                                            'This field is required',\n                                        ]}\n                                        defaultValue={''}\n                                    >\n                                        {listOfLocations &&\n                                            listOfLocations.map((item, i) => (\n                                                <MenuItem\n                                                    value={item.id}\n                                                    key={i}\n                                                >\n                                                    {item.name}\n                                                </MenuItem>\n                                            ))}\n                                    </SelectField>\n                                </FormControl>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    <div className=\"client-buttons\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={props.handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleBack}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            sx={{ ml: 2 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                        >\n                            Save and continue\n                        </Button>\n                    </div>\n                </ValidatorForm>\n            )}\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n            />\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </>\n    )\n}\n\nexport default IntakeTreatment\n","import * as React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Slide from '@mui/material/Slide'\nimport { Modal, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n  };\n\nconst Warning = (props) => {\n    return (\n        <div>\n            {/* <Dialog\n                open={props.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={props.handleClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle sx={{color:\"#f4d804\"}}>{\"Are you sure?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\" sx={{color:\"#ff3d3d\"}}>\n                        If you click <strong><b>Yes</b></strong>,the data which you have entered may be lost.\n                    </DialogContentText>\n                </DialogContent>\n                <div>\n                    <p>dfjdhfjdhfdhfjdhfdhfjdhfjdhfjdhfjdj</p>\n                </div>\n                <DialogActions>\n                    <Button onClick={props.handleClose} variant=\"contained\" color=\"error\">Cancel</Button>\n                    <Button onClick={props.handleRedirect} variant=\"contained\">Yes</Button>\n                </DialogActions>\n            </Dialog> */}\n            <Modal\n                keepMounted\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#f4d804\"}}\n                    >\n                        Are you sure?\n                    </Typography>\n                    <Typography\n                        id=\"keep-mounted-modal-description\"\n                        sx={{ mt: 2 ,color:\"#ff3d3d\"}}\n                    >\n                         If you click <strong><b>Yes</b></strong>,the data which you have entered may be lost.\n                    </Typography>\n                    <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}>\n                    <Button onClick={props.handleClose} variant=\"contained\" color=\"error\">Cancel</Button>\n                    <Button onClick={props.handleRedirect} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button>\n                    </Box>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Warning\n","import { Grid } from '@mui/material'\nimport Stepper from '@mui/material/Stepper'\nimport Step from '@mui/material/Step'\nimport StepLabel from '@mui/material/StepLabel'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport React from 'react'\nimport { Breadcrumb } from 'app/components'\nimport { Box } from '@mui/system'\nimport IntakeClientForm from 'app/components/IntakeClient/IntakeClientForm'\nimport './AddClient.css'\nimport IntakeClinicianAssign from '../AddClician/IntakeClinicianAssign'\nimport IntakeNotes from 'app/components/IntakeNotes/IntakeNotes'\nimport IntakeDeviceIssue from 'app/components/DeviseIssue/IntakeDeviceIssue'\nimport IntakeTrauma from 'app/components/IntakeTraumaAndBarrier/IntakeTrauma'\nimport IntakeBarrier from 'app/components/IntakeTraumaAndBarrier/IntakeBarrier'\nimport IntakeTreatment from 'app/components/IntakeTreatments/IntakeTreatment'\nimport Warning from 'app/components/AlertDialog/Warning'\nimport {useNavigate} from \"react-router-dom\"\nimport { useDispatch } from 'react-redux'\nimport { resetClient } from 'app/redux/actions/ClientIntakeActions'\n\nfunction getSteps() {\n    return [\n        'Client details',\n        'Trauma',\n        'Barriers',\n        'Treatment',\n        'Notes',\n        'Provider',\n        'Devices',\n    ]\n}\n\nfunction getStepContent(stepIndex,handleNext,handleBack,handleCancel) {\n    switch (stepIndex) {\n        case 0:\n            return <IntakeClientForm handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>\n        case 1:\n            return <IntakeTrauma handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>\n        case 2:\n            return <IntakeBarrier handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>\n        case 3:\n            return <IntakeTreatment handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>    \n        case 4:\n            return <IntakeNotes handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>\n        case 5:\n            return <IntakeClinicianAssign handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>        \n        case 6:\n            return <IntakeDeviceIssue handleNext={handleNext} handleBack={handleBack} handleCancel={handleCancel}/>\n        default:\n            return <IntakeNotes />\n    }\n}\nconst AddClient = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const [activeStep, setActiveStep] = React.useState(0)\n    const steps = getSteps()\n    const [open,setOpen] = React.useState(false)\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n        // localStorage.setItem('step', activeStep+1);\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    const handleReset = () => {\n        // setActiveStep(0)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleCancel = () => {\n        setOpen(true)\n    }\n\n    const handleRedirect = () => {\n        dispatch(resetClient())\n        navigate('/dashboard/default')\n    }\n\n    \n    return (\n        <Grid container className=\"user-container\">\n            <Grid className=\"user-breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'Add Client' }]} />\n            </Grid>\n            <Grid className=\"client-intake\">\n                <div>\n                    <Stepper activeStep={activeStep} alternativeLabel>\n                        {steps.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <div>\n                        {activeStep === steps.length ? (\n                            <div>\n                                <Typography>All steps completed</Typography>\n                                <Button\n                                    sx={{ mt: 2 }}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={handleReset}\n                                >\n                                    Reset\n                                </Button>\n                            </div>\n                        ) : (\n                            <Grid>\n                                <Box pt={2}>\n                                    <div className=\"center-card\">\n                                        {getStepContent(\n                                            activeStep,\n                                            handleNext,\n                                            handleBack,\n                                            handleCancel\n                                        )}\n                                        <Warning\n                                            handleClose={handleClose}\n                                            handleRedirect={handleRedirect}\n                                            open={open}\n                                        />\n                                    </div>\n                                </Box>\n                            </Grid>\n                        )}\n                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AddClient\n"],"sourceRoot":""}