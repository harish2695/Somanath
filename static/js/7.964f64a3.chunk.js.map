{"version":3,"sources":["app/services/counselorService.js","app/components/UsersCustomTable/UsersCustomTable.jsx","app/services/clientService.js","app/services/centerService.js","app/utils/center.list.formatter.js","app/services/sessionService.js","app/utils/enable_disable_utils.js","app/components/ConfirmModal/ConfirmModal.js"],"names":["fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","id","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","_status","UsersCustomTable","props","navigate","useNavigate","user","useAuth","CustomHeadCell","meta","entries","Object","index","key","value","push","width","variant","align","className","showDisableBtn","role","color","onClick","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","style","marginLeft","center_name","owned_by","handleOpen","deviceID","showBtn","display","flexDirection","justifyContent","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","component","scope","sx","overflow","minWidth","size","rowsPerPage","slice","map","i","border","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","fetchClicians","fetchBarriers","createClient","fetchClient","createLicense","updateLicense","getClientDetails","updateClientTrauma","addNotes","fetchPassphrases","findClients","filterData","clinician","device","fetchInitialDiagnosis","fetchListOfTreatments","fetchListOfLocations","updateNote","createSession","checkUnique","updateClient","fetchCenter","getAllCenters","getCenterDetails","findCenters","filters","clientMeta","client_id","name","gender_bio","gender_identified","appointment","formatClientsList","response","Array","isArray","forEach","item","formatClientData","handleSession","res","sessions","attributes","el","clinician_status","counsellor","device_status","device_id","getMetaData","pagination","formatCenters","formatCenterData","username","email","phoneNumber","phone_number","firstName","first_name","logo","logo_image","lastName","last_name","country","state","city","postalCode","postal_code","areaCode","area_code","centerType","center_type","verified","is_verified","address","getAddress","street_address1","street_address2","createdAt","moment","format","address1","address2","updateSession","unlinkLicense","a","unlinkProviderFromClient","cancelAppointments","disableProvider","editCounsellor","blockCenter","center","blocked","editCenter","unblockCenter","position","top","left","transform","bgcolor","boxShadow","p","CancelButton","styled","Button","marginTop","backgroundColor","ConfirmModal","open","onConfirmDialogClose","text","onYesClick","keepMounted","onClose","alignItems","gap"],"mappings":"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","file":"static/js/7.964f64a3.chunk.js","sourcesContent":["import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","import { makeRequest } from './authenticationService';\n\nexport const fetchClicians = (id) => {\n    let url = `/api/centers/${id}`;\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClients = (page) => {\n    let url = `/api/clients?pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const fetchBarriers = (id) => {\n    let url = `/api/barriers`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const createClient = (data) => {\n    let url = `/api/clients`\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClient = (id) => {\n    let url = `/api/clients/${id}`\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const createLicense = (data) => {\n    let url = `/api/licenses`\n    return makeRequest('POST', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const updateLicense = (id, data) => {\n    let url = `/api/licenses/${id}`\n    return makeRequest('PUT', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const getClientDetails = (id) => {\n    let url = `/api/clients/${id}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const updateClientTrauma = (id,data) => {\n    let url = `/api/clients/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const filterClients = (data, page) => {\n    let url = `/api/clients?filter[clinician]=${data.clinician}&filter[device]=${data.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const addNotes = (data) => {\n    let url = `/api/notes`;\n\n    return makeRequest('POST', url,data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchPassphrases = () => {\n    let url = `/api/passphrases`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const findClients = (searchData, filterData, page) => {\n    let url = `/api/clients?search=${searchData}&filter[clinician]=${filterData.clinician}&filter[device]=${filterData.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchInitialDiagnosis = () => {\n    let url = `/api/initial-diagnoses`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchListOfTreatments = () => {\n    let url = `/api/treatments`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\nexport const fetchListOfLocations = () => {\n    let url = `/api/treatment-locations`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateNote = (id,data) => {\n    let url = `/api/notes/${id}`\n\n    return makeRequest('PUT', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createSession = (data) => {\n    let url = `/api/sessions`\n\n    return makeRequest('POST', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const checkUnique = (data) => {\n    let url = `/api/clients?check=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateClient = (id, data) => {\n    let url = `/api/clients/${id}`;\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}","import { makeRequest } from './authenticationService';\n\nexport const fetchCenter = (page) => {\n    // let url = `/api/centers?pagination[page]=${page}`;\n    let url = '/api/centers';\n\n    if(page){\n        url += `?pagination[page]=${page}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getAllCenters = () => {\n    let url = '/api/centers?all=-1';\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getCenterDetails = (id) => {\n    let url = `/api/centers/${id}`;\n\n    return makeRequest('GET', url, )\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\n\nexport const searchCenters = (data,page) => {\n    let url = `/api/centers?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const filterCenters = (data,page) => {\n    let url = `/api/centers?filter=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const findCenters = (searchData, filters, page) => {\n    let url = `/api/centers?search=${searchData}&filter=${filters}&pagination[page]=${page}`;\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import moment from 'moment'\n\nconst meta = {\n    counsellorId: 'Center ID',\n    name: 'State',\n    firstName: 'Name',\n    lastName: 'Phone',\n    traumaCodes: 'Email',\n    clients: 'Clients',\n    sessions: 'Providers',\n    sessionsHours: 'Devices',\n    type: 'Type',\n}\n\nconst deviceMeta = {\n    // id: \"ID\",\n    device_id: 'Device ID',\n    device_type: 'Device Type',\n    device_serial: 'Device Serial',\n    mac_address: 'Mac Address',\n    is_assigned: 'Is Assigned',\n    status: 'Status',\n    owned_by: 'Owned By',\n    edit_action: 'Edit Action',\n    device_action: 'Device Action',\n}\n\n\nconst clientMeta = {\n    client_id: \"Client ID\",\n    clinician: 'Provider',\n    name: \"Record Name\",\n    gender_bio: \"Birth Gender\",\n    gender_identified: \"ID Gender\",\n    license:\"License\",\n    device: \"Device\",\n    appointment:\"Appointment\"\n}\n\nexport function formatClientsList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientData(item))\n        })\n        response['meta'] = clientMeta;\n    } else {\n        response.push(formatClientData(data))\n    }\n    return response\n}\n\nfunction getDeviceMeta(tab) {\n    let obj = {};\n    if(tab == 1){\n        obj = deviceMeta;\n    } else {\n        obj = {\n            mac_address: 'Mac Address',\n            ip_address: 'IP Address',\n            passphrase: 'Passphrase'\n        }\n    }\n    return obj;\n}\n\nexport function formatDevicesList(data, activeTab) {\n    const response = [];\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatDeviceData(item, activeTab))\n        })\n        response['meta'] = getDeviceMeta(activeTab);\n    } else {\n        response.push(formatDeviceData(data, activeTab))\n    }\n    return response\n}\n\nfunction handleSession(item){\n    let res = 'NotScheduled';\n    const sessions = item?.attributes?.sessions?.data;\n    if(sessions?.length){\n        for(let i = 0;i < sessions.length;i++){\n            let el = sessions[i];\n            if(el?.attributes?.status === 'pending' || el?.attributes?.status === 'scheduled'){\n                res = 'Scheduled';\n            }\n        }\n    } else {\n        res = 'NotScheduled';\n    }\n    return res;\n}\n\nfunction formatClientData(item) {\n    const obj = {\n        clientID: (item && item.id) || '',\n        client_id: (item && item.attributes && item.attributes.client_id) || '',\n        clinician_status:\n            item &&\n            item.attributes &&\n            item.attributes.counsellor &&\n            item.attributes?.counsellor?.data\n                ? item.attributes?.counsellor?.data?.attributes?.name\n                : 'Not Assigned',\n        name: (item && item.attributes && item.attributes.name) || '',\n        gender_bio:\n            (item && item.attributes && item.attributes.gender_bio) || '',\n        gender_identified:\n            (item && item.attributes && item.attributes.gender_identified) ||\n            '',\n        license:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data\n                ? 'Issued'\n                : 'Not Issued',\n        device_status:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data &&\n            item.attributes.license.data.attributes &&\n            item.attributes.license.data.attributes.device &&\n            item.attributes.license.data.attributes.device.data &&\n            item.attributes.license.data.attributes.device.data.id\n                ? item.attributes.license.data.attributes.device.data.attributes.device_id\n                : 'Not Assigned',\n        appointment: handleSession(item)\n    }\n\n    return obj;\n}\n\n\nfunction getPassPhrase(item) {\n    return (\n        (item &&\n            item.attributes &&\n            item.attributes.licenses &&\n            item.attributes.licenses.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1] &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase  &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes && \n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes.name\n        ) ||\n        ''\n    )\n}\n\n\nfunction formatDeviceData(item, activeTab) {\n    let obj = {};\n    if(activeTab == 1) {\n        obj = {\n            // id: item.id,\n            device_id: item.attributes.device_id,\n            device_type: item.attributes.device_type,\n            device_serial: item.attributes.device_serial,\n            mac_address: item.attributes.mac_address,\n            is_assigned: String(item.attributes.is_assigned),\n            status: item.attributes.status,\n            owned_by: item.attributes.owned_by,\n            edit_action: `/devices/edit?id=${item.id}`,\n            device_action: {\n                deviceID: item.id,\n                isAssigned: item.attributes.center && item.attributes.center.data ? true : false,\n                center_name: item && item.attributes && item.attributes.center && item.attributes.center.data && item.attributes.center.data && item.attributes.center.data.attributes && item.attributes.center.data.attributes.name || '',\n                owned_by: item.attributes.owned_by,\n            },\n        }\n    } else {\n        obj = {\n            mac_address: item && item.attributes && item.attributes.mac_address || '',\n            ip_address: item && item.attributes && item.attributes.ip_address || '',\n            passphrase: getPassPhrase(item)\n        }\n    }\n    return obj\n}\n\nconst logoBaseUrl = 'http://localhost:1337'\n\nexport function getMetaData(data) {\n    return data.pagination\n}\n\nexport function formatCenters(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatCenterData(item))\n        })\n    } else {\n        response = formatCenterData(data)\n    }\n\n    return response\n}\n\nfunction formatCenterData(item) {\n    const obj = {\n        id: item.id,\n        centerId:item && item.user && item.user.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        firstName: item.first_name,\n        logo: logoBaseUrl + item.logo_image,\n        lastName: item.last_name,\n        country: item.country,\n        state: item.state,\n        city: item.city,\n        postalCode: item.postal_code,\n        areaCode: item.area_code,\n        centerType: item.center_type,\n        verified: item.is_verified,\n        address: getAddress(item.street_address1, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY'),\n    }\n\n    return obj\n}\n\nfunction getAddress(address1, address2) {\n    let fullAddress = address1 + ' ' + address2\n    return fullAddress\n}\n\nexport function formatClients(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientUserData(item));\n        })\n    } else {\n        response = formatClientUserData(data);\n    }\n\n    return response\n}\n\nfunction formatClientUserData(item) {\n    const obj = {\n        id: item && item.id || '',\n        name: item && item.name || '',\n        client_id: item && item.client_id || '',\n        gender_bio: item && item.gender_bio || '',\n        gender_identified: item && item.gender_identified || '',\n        centers: item && item.centers && item.centers.length || '0',\n        counselors: item && item.counsellors && item.counsellors.length || '0',\n        sessions: item && item.sessions && item.sessions.length || '0'\n    };\n    return obj;\n}\n\n","import { makeRequest } from './authenticationService';\n\nexport const updateSession = (id, data) => {\n    let url = '/api/sessions/' + id;\n\n    return makeRequest('PUT', url, data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import moment from 'moment';\nimport { getCenterDetails } from 'app/services/centerService';\nimport {\n    updateLicense,\n    updateClient\n} from 'app/services/clientService';\nimport {\n    updateSession\n} from 'app/services/sessionService';\nimport { \n    editCounsellor,\n    editCenter \n} from 'app/services/userService';\n\nexport async function unlinkLicense(el) {\n    let res = false;\n    try {\n        const options = {\n            data: {\n                status: 'Expired'\n            }\n        };\n        await updateLicense(el?.id, options);\n        res = true;\n    } catch(err){\n        throw err;\n    }\n    return res;\n}\n\nexport async function unlinkProviderFromClient(id, options){\n    let res = false;\n    try {\n        await updateClient(id, options);\n        res = true;\n    } catch(err) {\n        throw err;\n    }\n    return res;\n}\n\nexport async function cancelAppointments(sessions){\n    let res = false;\n    try {\n        for(let i = 0;i < sessions.length; i++) {\n            let el = sessions[i];\n            if(el.status === 'scheduled' || el.status === 'pending') {\n                let options = {\n                    data: {\n                        status: 'cancelled'\n                    }\n                };\n                await updateSession(el.id, options);      \n            }\n        }\n        res = true;\n    } catch(err) {\n        throw err;\n    }\n\n    return res;\n}\n\nexport async function disableProvider(id, options) {\n    let res = false;\n    try {\n        await editCounsellor(options, id);\n        res = true;\n    } catch(err) {\n        throw err;\n    }\n    return res;\n}\n\nexport async function blockCenter(id) {\n    let res = false;\n    try {\n        const center = await getCenterDetails(id);\n        let options = {\n            user: {\n                data: {\n                    id: center?.user?.id,\n                    blocked: true\n                }\n            }\n        }\n\n        await editCenter(options, center.id);\n        res = true;\n    } catch(err) {\n        res = false;\n    }\n    return res;\n}\n\nexport async function unblockCenter(id, options) {\n    let res = false;\n    try {\n        await editCenter(options, id);\n        res = true;\n    } catch(err) {\n        res = false;\n    }\n    return res;\n}\n\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst ConfirmModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={onConfirmDialogClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton>\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={onYesClick}\n                            >\n                                Yes\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ConfirmModal;"],"sourceRoot":""}