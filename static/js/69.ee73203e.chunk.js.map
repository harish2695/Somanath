{"version":3,"sources":["app/components/Footer/Footer.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Brand/Brand.jsx","app/components/Sidenav/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["Footer","styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","maxWidth","theme","useTheme","settings","useSettings","themes","footer","IconButton","color","palette","text","primary","disabled","height","sideNavWidth","paddingLeft","boxShadow","themeShadows","marginTop","marginBottom","marginLeft","fontWeight","transition","background","marginRight","textAlign","flexGrow","whiteSpace","overflow","textOverflow","ShoppingCart","Box","position","opacity","secondary","fontSize","right","justifyContent","StyledIconButton","TopbarRoot","top","zIndex","TopbarContainer","paddingRight","main","breakpoints","down","UserMenu","cursor","borderRadius","StyledItem","MenuItem","minWidth","textDecoration","Layout1Topbar","updateSettings","useAuth","logout","user","isMdScreen","useMediaQuery","onClick","mode","sidebarSettings","layout1Settings","leftSidebar","Icon","menuButton","Hidden","xsDown","role","type","counsellor","name","center","Avatar","src","avatar","sx","to","React","memo","BrandRoot","StyledSpan","Span","Brand","children","className","StyledScrollBar","Scrollbar","SideNavMobile","left","bottom","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","smDown","Switch","onChange","checked","size","SidenavTheme","sidenavTheme","ThemeProvider","Layout1Root","default","ContentBox","overflowY","overflowX","LayoutContainer","verticalAlign","secondarySidebar","open","Layout1","topbarTheme","topbar","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","useEffect","current","sidebarMode","fixed","perfectScrollbar"],"mappings":"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","file":"static/js/69.ee73203e.chunk.js","sourcesContent":["import React from 'react'\nimport { Span, Paragraph } from '../Typography'\nimport useSettings from 'app/hooks/useSettings'\nimport { Button, Toolbar, AppBar, ThemeProvider } from '@mui/material'\nimport { styled, useTheme } from '@mui/system'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst AppFooter = styled(Toolbar)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    minHeight: topBarHeight,\n    '@media (max-width: 499px)': {\n        display: 'table',\n        width: '100%',\n        minHeight: 'auto',\n        padding: '1rem 0',\n        '& .container': {\n            flexDirection: 'column !important',\n            '& a': {\n                margin: '0 0 16px !important',\n            },\n        },\n    },\n}))\n\nconst FooterContent = styled('div')(() => ({\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0px 1rem',\n    maxWidth: '1170px',\n    margin: '0 auto',\n}))\n\nconst Footer = () => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return null;\n    // return (\n    //     <ThemeProvider theme={footerTheme}>\n    //         <AppBar\n    //             color=\"primary\"\n    //             position=\"static\"\n    //             sx={{ zIndex: 96 }}\n    //         >\n    //             <AppFooter>\n    //                 <FooterContent>\n    //                     <a href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\">\n    //                         <Button variant=\"contained\" color=\"secondary\">\n    //                             Get MatX Pro\n    //                         </Button>\n    //                     </a>\n    //                     <Span sx={{ m: \"auto\" }}></Span>\n    //                     <Paragraph sx={{ m: 0 }}>\n    //                         Design and Developed by{' '}\n    //                         <a href=\"http://ui-lib.com\">UI Lib</a>\n    //                     </Paragraph>\n    //                 </FooterContent>\n    //             </AppFooter>\n    //         </AppBar>\n    //     </ThemeProvider>\n    // )\n}\n\nexport default Footer\n","import { useEffect } from 'react'\nimport useAuth from 'app/hooks/useAuth'\nimport { H6, Small } from '../Typography'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport {\n    Icon,\n    Badge,\n    IconButton,\n    Drawer,\n    Button,\n    ThemeProvider,\n} from '@mui/material'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    '& span': {\n        color: theme.palette.text.primary,\n    },\n    '& #disable': {\n        color: theme.palette.text.disabled,\n    },\n}))\n\nconst MiniCart = styled('div')(({ theme }) => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sideNavWidth,\n}))\n\nconst CartBox = styled('div')(() => ({\n    padding: '4px',\n    paddingLeft: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    boxShadow: themeShadows[6],\n    height: topBarHeight,\n    '& h5': {\n        marginTop: 0,\n        marginBottom: 0,\n        marginLeft: '16px',\n        fontWeight: '500',\n    },\n}))\n\nconst ProductBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 8px',\n    transition: 'background 300ms ease',\n    '&:hover': {\n        background: 'rgba(0,0,0,0.01)',\n    },\n}))\n\nconst IMG = styled('img')(() => ({\n    width: 48,\n}))\n\nconst ProductDetails = styled('div')(() => ({\n    marginRight: '8',\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    '& h6': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: 'block',\n        width: 120,\n        marginBottom: '4px',\n    },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            navigate('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n        setTotalCost(total)\n    }, [cartList])\n\n    const { palette } = useTheme()\n    const textColor = palette.text.primary\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\n                    <Icon sx={{ color: textColor }}>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <MiniCart>\n                        <CartBox>\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5>Cart</h5>\n                        </CartBox>\n\n                        <Box flexGrow={1} overflow=\"auto\">\n                            {cartList.map((product) => (\n                                <ProductBox key={product.id}>\n                                    <Box\n                                        mr=\"4px\"\n                                        display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <StyledIconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon sx={{ cursor: 'pinter' }}>\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </StyledIconButton>\n                                        <StyledIconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon id={!(product.amount - 1) && 'disable'}>\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </StyledIconButton>\n                                    </Box>\n                                    <Box mr={1}>\n                                        <IMG\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </Box>\n                                    <ProductDetails>\n                                        <H6>{product.title}</H6>\n                                        <Small sx={{ color: secondary }}>\n                                            ${product.price} x {product.amount}\n                                        </Small>\n                                    </ProductDetails>\n                                    <StyledIconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </StyledIconButton>\n                                </ProductBox>\n                            ))}\n                        </Box>\n\n                        <Button\n                            sx={{ width: '100%', borderRadius: 0 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </MiniCart>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Small, Paragraph } from '../Typography'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport { getTimeDifference } from 'app/utils/utils.js'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\r\n\r\nconst Notification = styled('div')(() => ({\r\n    padding: '16px',\r\n    marginBottom: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: topBarHeight,\r\n    boxShadow: themeShadows[6],\r\n    '& h5': {\r\n        marginLeft: '8px',\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        fontWeight: '500',\r\n    },\r\n}))\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n    position: 'relative',\r\n    '&:hover': {\r\n        '& .messageTime': {\r\n            display: 'none',\r\n        },\r\n        '& .deleteButton': {\r\n            opacity: '1',\r\n        },\r\n    },\r\n    '& .messageTime': {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    '& .icon': { fontSize: '1.25rem' },\r\n}))\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n    opacity: '0',\r\n    position: 'absolute',\r\n    right: 5,\r\n    marginTop: 9,\r\n    marginRight: '24px',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n    padding: '12px 8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n    '& small': {\r\n        fontWeight: '500',\r\n        marginLeft: '16px',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const { settings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n    const { deleteNotification, clearNotifications, notifications } =\r\n        useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.text.primary\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon sx={{ color: textColor }}>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <Box sx={{ width: sideNavWidth }}>\r\n                        <Notification>\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5>Notifications</h5>\r\n                        </Notification>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <NotificationCard key={notification.id}>\r\n                                <DeleteButton\r\n                                    size=\"small\"\r\n                                    className=\"deleteButton\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon className=\"icon\">clear</Icon>\r\n                                </DeleteButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                    style={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                                        <CardLeftContent>\r\n                                            <Box display=\"flex\">\r\n                                                <Icon\r\n                                                    className=\"icon\"\r\n                                                    color={\r\n                                                        notification.icon.color\r\n                                                    }\r\n                                                >\r\n                                                    {notification.icon.name}\r\n                                                </Icon>\r\n                                                <Heading>\r\n                                                    {notification.heading}\r\n                                                </Heading>\r\n                                            </Box>\r\n                                            <Small className=\"messageTime\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}\r\n                                                ago\r\n                                            </Small>\r\n                                        </CardLeftContent>\r\n                                        <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                                            <Paragraph sx={{ m: 0 }}>\r\n                                                {notification.title}\r\n                                            </Paragraph>\r\n                                            <Small sx={{ color: secondary }}>\r\n                                                {notification.subtitle}\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Link>\r\n                            </NotificationCard>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <Box sx={{ color: secondary }}>\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, useTheme, Box } from '@mui/system'\nimport { Span } from '../../../components/Typography'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@mui/material'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    color: theme.palette.text.primary,\n}))\n\nconst TopbarRoot = styled('div')(({ theme }) => ({\n    top: 0,\n    zIndex: 96,\n    transition: 'all 0.3s ease',\n    boxShadow: themeShadows[8],\n    height: topBarHeight,\n}))\n\nconst TopbarContainer = styled(Box)(({ theme }) => ({\n    padding: '8px',\n    paddingLeft: 18,\n    paddingRight: 20,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: theme.palette.primary.main,\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    [theme.breakpoints.down('xs')]: {\n        paddingLeft: 14,\n        paddingRight: 16,\n    },\n}))\n\nconst UserMenu = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    borderRadius: 24,\n    padding: 4,\n    '& span': {\n        margin: '0 8px',\n    },\n}))\n\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 185,\n    '& a': {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n    },\n    '& span': {\n        marginRight: '10px',\n        color: theme.palette.text.primary,\n    },\n}))\n\nconst IconBox = styled('div')(({ theme }) => ({\n    display: 'inherit',\n    [theme.breakpoints.down('md')]: {\n        display: 'none !important',\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n        updateSidebarMode({ mode })\n    }\n\n\n    return (\n        <TopbarRoot>\n            <TopbarContainer>\n                <Box display=\"flex\">\n                    <StyledIconButton onClick={handleSidebarToggle}>\n                        <Icon>menu</Icon>\n                    </StyledIconButton>\n\n                    {/* <IconBox>\n                        <StyledIconButton>\n                            <Icon>mail_outline</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>web_asset</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>star_outline</Icon>\n                        </StyledIconButton>\n                    </IconBox> */}\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                    {/* <MatxSearchBox />\n                    <NotificationProvider>\n                        <NotificationBar />\n                    </NotificationProvider>\n\n                    <ShoppingCart /> */}\n\n                    <MatxMenu\n                        menuButton={\n                            <UserMenu>\n                                <Hidden xsDown>\n                                    <Span>\n                                        Welcome <strong>{user.role.type === 'admin' ? 'Admin' : (user.role.type == 'counsellor' ? user.counsellor.name : user.center.name)}</strong>\n                                    </Span>\n                                </Hidden>\n                                <Avatar\n                                    src={user.avatar}\n                                    sx={{ cursor: 'pointer' }}\n                                />\n                            </UserMenu>\n                        }\n                    >\n                        <StyledItem>\n                            <Link to=\"/\">\n                                <Icon> home </Icon>\n                                <Span> Home </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem>\n                            <Link to=\"/profile\">\n                                <Icon> person </Icon>\n                                <Span> Profile </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem onClick={logout}>\n                            <Icon> power_settings_new </Icon>\n                            <Span> Logout </Span>\n                        </StyledItem>\n                    </MatxMenu>\n                </Box>\n            </TopbarContainer>\n        </TopbarRoot>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { Span } from '../../components/Typography'\nimport { styled, Box } from '@mui/system'\nimport useSettings from 'app/hooks/useSettings'\n\nconst BrandRoot = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '20px 18px 20px 29px',\n}))\n\nconst StyledSpan = styled(Span)(({ theme, mode }) => ({\n    fontSize: 18,\n    marginLeft: '.5rem',\n    display: mode === 'compact' ? 'none' : 'block',\n}))\n\nconst Brand = ({ children }) => {\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <BrandRoot>\n            <Box display=\"flex\" alignItems=\"center\">\n                <MatxLogo />\n                <StyledSpan mode={mode} className=\"sidenavHoverShow\">\n                    Bluemoon\n                </StyledSpan>\n            </Box>\n            <Box\n                className=\"sidenavHoverShow\"\n                sx={{ display: mode === 'compact' ? 'none' : 'block' }}\n            >\n                {children || null}\n            </Box>\n        </BrandRoot>\n    )\n}\n\nexport default Brand\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled } from '@mui/system'\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    position: 'relative',\n}))\n\nconst SideNavMobile = styled('div')(({ theme }) => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100vw',\n    background: 'rgba(0, 0, 0, 0.54)',\n    zIndex: -1,\n    [theme.breakpoints.up('lg')]: {\n        display: 'none',\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <StyledScrollBar options={{ suppressScrollX: true }}>\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </StyledScrollBar>\n\n            <SideNavMobile\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\r\nimport Brand from '../../Brand/Brand'\r\nimport { convertHexToRGB } from 'app/utils/utils'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Switch, Hidden } from '@mui/material'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100vh',\r\n    width: width,\r\n    boxShadow: themeShadows[8],\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'top',\r\n    backgroundSize: 'cover',\r\n    zIndex: 111,\r\n    overflow: 'hidden',\r\n    color: theme.palette.text.primary,\r\n    transition: 'all 250ms ease-in-out',\r\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n    '&:hover': {\r\n        width: sideNavWidth,\r\n        '& .sidenavHoverShow': {\r\n            display: 'block',\r\n        },\r\n        '& .compactNavItem': {\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            '& .nav-bullet': {\r\n                display: 'block',\r\n            },\r\n            '& .nav-bullet-text': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode, bgImgURL } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return sideNavWidth\r\n        }\r\n    }\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <SidebarNavRoot\r\n            bgImgURL={bgImgURL}\r\n            primaryBg={primaryRGB}\r\n            width={getSidenavWidth()}\r\n        >\r\n            <NavListBox>\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </NavListBox>\r\n        </SidebarNavRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport { ThemeProvider, useTheme } from '@mui/material'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","import Footer from '../../Footer/Footer'\nimport Layout1Topbar from './Layout1Topbar'\nimport { MatxSuspense } from 'app/components'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, Box, useTheme } from '@mui/system'\nimport React, { useEffect, useRef } from 'react'\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\n// import SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\nimport { Outlet } from 'react-router-dom'\n\nconst Layout1Root = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    background: theme.palette.background.default,\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n}))\n\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n    marginRight: secondarySidebar.open ? 50 : 0,\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return sideNavWidth\n            case 'compact':\n                return sidenavCompactWidth\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n    const layoutClasses = `theme-${theme.palette.type}`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <Layout1Root className={layoutClasses}>\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                    <Layout1Sidenav />\n                </SidenavTheme>\n            )}\n\n            <LayoutContainer\n                width={sidenavWidth}\n                secondarySidebar={secondarySidebar}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    // <Layout1Topbar fixed={true} />\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n                {settings.perfectScrollbar && (\n                    <StyledScrollBar>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </StyledScrollBar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <ContentBox>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </ContentBox>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </LayoutContainer>\n            {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\n        </Layout1Root>\n    )\n}\n\nexport default React.memo(Layout1)\n"],"sourceRoot":""}