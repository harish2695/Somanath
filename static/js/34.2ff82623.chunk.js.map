{"version":3,"sources":["app/components/SessionModal/SessionModal.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","app/views/adminView/counsellor/add/CounsellorAdd.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","createSvgIcon","_jsx","d","getAlertUtilityClass","slot","generateUtilityClass","_CloseIcon","alertClasses","generateUtilityClasses","_excluded","AlertRoot","Paper","name","overridesResolver","props","styles","ownerState","root","capitalize","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","padding","light","icon","main","fontWeight","fontWeightMedium","dark","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","AlertAction","action","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","Alert","React","inProps","ref","useThemeProps","children","className","closeText","iconMapping","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","elevation","clsx","IconButton","size","title","CloseIcon","FlexBox","Box","Container","margin","breakpoints","down","marginBottom","StyledAvatar","Avatar","height","TextField","TextValidator","UploadButton","SelectValidator","flexDirection","borderRadius","borderColor","StyledProgress","CircularProgress","CancelButton","CounsellorAdd","useState","firstName","lastName","email","area_code","phone_number","traumas","logo","logo_image","counsellorInfo","setCounsellorInfo","traumaList","setTraumaList","loading","setLoading","roles","setRoles","traumasError","setTraumasError","isTouched","setIsTouched","setOpen","status","statusInfo","setStatusInfo","openModal","setOpenModal","msg","setMsg","formEl","useRef","handleChange","event","persist","target","value","useEffect","ValidatorForm","addValidationRule","length","isNaN","a","getTraumaList","resp","data","getAllUserRoles","console","log","map","item","type","removeValidationRule","getBase64","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","upload","result","onerror","handleFileUpload","e","files","includes","base64","toast","uploadFile","formData","FormData","append","access_token","accessToken","fetch","method","headers","authorization","body","response","JSON","parse","handleSubmit","traumaCodes","find","el","attributes","trauma_code","options","counsellor","first_name","last_name","publishedAt","moment","format","split","slice","user","confirmed","blocked","url","createCounsellor","then","catch","err","handleTraumas","onSubmit","onError","container","rowSpacing","columnSpacing","lg","md","sm","xs","autoFocus","label","onChange","fullWidth","validators","errorMessages","mt","labelId","multiple","input","onBlur","disabled","i","trauma_name","spacing","src","hidden","accept","flexWrap","mr","current","resetValidations","anchorOrigin","vertical","horizontal","autoHideDuration"],"mappings":"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","file":"static/js/34.2ff82623.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import {\n    Alert,\n    Button,\n    Icon,\n    Grid,\n    MenuItem,\n    Select,\n    OutlinedInput,\n    InputLabel,\n    FormControl,\n    Avatar,\n    CircularProgress,\n    Snackbar\n} from '@mui/material'\nimport { styled, Box } from '@mui/system'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { ValidatorForm, TextValidator, SelectValidator  } from 'react-material-ui-form-validator'\nimport { Breadcrumb } from 'app/components';\nimport moment from 'moment';\n\nimport {\n    createCounsellor,\n    getTraumaList,\n    getAllUserRoles\n} from 'app/services/userService';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './CounsellorAdd.css';\nimport '../../../users/Users.css';\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\nconst StyledAvatar = styled(Avatar)(() => ({\n    width: '120px !important',\n    height: '120px !important',\n    border: '2px'\n}))\n\nconst TextField = styled(TextValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px',\n}))\n\nconst SelectField = styled(SelectValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px',\n    marginTop: '8px'\n}))\n\nconst UploadButton = styled(Button)(() => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 120,\n    height: 120,\n    borderRadius: \"50%\",\n    borderColor: '#3498db',\n    // borderStyle: 'dotted'\n}))\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    top: '6px',\n    left: '25px',\n}))\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}))\n\nconst CounsellorAdd = (props) => {\n    const navigate = useNavigate()\n    const [counsellorInfo, setCounsellorInfo] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        area_code:\"\",\n        phone_number: '',\n        traumas: [],\n        logo: null,\n        logo_image: ''\n    });\n    const [traumaList, setTraumaList] = useState([]);\n    const [loading, setLoading] = useState(false)\n    const [roles, setRoles] = useState(null);\n    const [traumasError, setTraumasError] = useState('');\n    const [isTouched, setIsTouched] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [statusInfo, setStatusInfo] = useState({\n        status: 'success',\n        message: ''\n    });\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState(''); \n    const formEl = useRef();\n\n    useEffect(() => {\n        ValidatorForm.addValidationRule('REQUIRED', (value) => {\n            if(value.length === 0){\n                return false;\n            }\n            return true;\n        })\n\n        ValidatorForm.addValidationRule('MAX_CODE_LENGTH', (value) => {\n            if(value && value.length !== 3){\n                return false;\n            }\n            return true;\n        }) ;\n\n        ValidatorForm.addValidationRule('VALID_INPUT', (value) => {\n            if(value && isNaN(value)){\n                return false;\n            }\n            return true;\n        });\n\n        ValidatorForm.addValidationRule('MAX_PHONE_LENGTH', (value) => {\n            if(value && value.length !== 7) {\n                return false;\n            }\n            return true;\n        });\n\n        ValidatorForm.addValidationRule('MAX_POSTAL_CODE', (value) => {\n            if(value && value.length !== 5) {\n                return false;\n            }\n            return true;\n        })\n        ; (async () => {\n            try {\n                const resp = await getTraumaList();\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                }  else {\n                    if (resp && resp.data) {\n                        setTraumaList(resp.data);\n                    }\n                }\n    \n                const { roles } = await getAllUserRoles();\n                console.log(\"ROLES\",roles)\n                if (roles && roles.length > 0){\n                    roles.map((item) => {\n                        if(item.type === 'provider' || item.type === \"counsellor\"){\n                            setRoles(item)\n                        }\n                    })\n                }\n            } catch (err) {\n                console.log('err', err);\n            }\n        })();\n        return () => {\n            ValidatorForm.removeValidationRule('REQUIRED');\n            ValidatorForm.removeValidationRule('MAX_CODE_LENGTH');\n            ValidatorForm.removeValidationRule('VALID_INPUT');\n            ValidatorForm.removeValidationRule('MAX_PHONE_LENGTH');\n            ValidatorForm.removeValidationRule('MAX_POSTAL_CODE');\n        }\n    }, [])\n    function handleChange(event) {\n        event.persist()\n        setCounsellorInfo({\n            ...counsellorInfo,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const getBase64 = function (file) {\n        return new Promise((resolve) => {\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (upload) {\n                resolve(upload.target.result);\n            };\n            reader.onerror = function (error) {\n                console.log('Error: ', error);\n            };\n        });\n    };\n\n    const handleFileUpload = async (e) => {\n        const file = e.target.files[0];\n        const fileTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/svg', 'image/svg+xml'];\n        if (fileTypes.includes(file.type)) {\n            file.base64 = await getBase64(file);\n            setCounsellorInfo({ ...counsellorInfo, logo: file });\n        } else {\n            toast.error('Only files with following extensions are allowed: jpeg, jpg, png, svg', {\n                theme: 'colored'\n            });\n        }\n    }\n\n    const uploadFile = async (file) => {\n        const formData = new FormData();\n        formData.append('files', file);\n\n        let access_token = '';\n        if (localStorage.accessToken) {\n            access_token = localStorage.accessToken;\n        }\n\n        let response = await fetch('http://localhost:1337/api/upload', {\n            method: 'post',\n            headers: {\n                authorization: 'Bearer ' + access_token\n            },\n            body: formData\n        });\n\n\n        let upload = await response.text();\n\n        return JSON.parse(upload);\n\n    }\n\n    const clearFields = () => {\n        formEl.current.resetValidations();\n        setCounsellorInfo({\n            ...counsellorInfo,\n            firstName: '',\n            lastName: '',\n            email: '',\n            area_code,\n            phone_number: '',\n            traumas: [],\n            logo: null,\n            logo_image: '',\n        })\n        navigate(-1);\n    }\n\n    const handleSubmit = async (event) => {\n        const {\n            firstName,\n            lastName,\n            email,\n            area_code,\n            phone_number,\n            traumas,\n            logo,\n            // logo_image,\n            // center_type\n        } = counsellorInfo;\n\n        if(traumas.length === 0) {\n            return;\n        }\n\n        setLoading(true)\n        let upload;\n\n        if (logo) {\n            upload = await uploadFile(logo);\n        }\n\n        // const traumaObj = traumaList.find(el => el.attributes.trauma_code === traumas);\n        const traumaCodes = traumas.map((item) => {\n            return traumaList.find((el) => {\n                if (el && el.attributes && el.attributes.trauma_code === item) {\n                    return el.id\n                }\n            });\n        })\n        // const center_type_obj = centerTypes.find(el => el.attributes.center_type_id === center_type);\n\n        let options = {\n            counsellor: {\n                data: {\n                    name: firstName + ' ' + lastName,\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                    area_code: area_code,\n                    phone_number: phone_number,\n                    status:\"Approved\",\n                    traumas: traumaCodes,\n                    publishedAt: moment().format().split('T')[0] + ' ' + moment().format().split('T')[1].slice(0, 8)\n                }\n            },\n            traumas: traumaCodes,\n            // center_type_id: center_type_obj.attributes.center_type_id,\n            user: {\n                data: {\n                    email: email,\n                    confirmed: true,\n                    blocked: false,\n                    role: roles.id\n                }\n            }\n        };\n\n        if (logo) {\n            options.counsellor.data.logo_image = upload[0].url || '';\n        }\n\n        createCounsellor(options)\n            .then(resp => {\n                setLoading(false);\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } else {\n                    setOpen(true);\n                    setStatusInfo({\n                        ...statusInfo,\n                        status: resp && resp.status === 'success' ? 'success' : 'error',\n                        message: resp && resp.message || ''\n                    })\n                }\n            }).catch(err => {\n                setLoading(false)\n                setOpen(true);\n                setStatusInfo({\n                    ...statusInfo,\n                    status: 'error',\n                    message: 'Something went wrong'\n                })\n            })\n    }\n\n    const handleTraumas = () => {\n        if(!isTouched) {\n            setIsTouched(true);\n        }\n        const { traumas } = counsellorInfo;\n        let err = '';\n        if(traumas.length === 0) {\n            err = 'This field is required!';\n        }\n        setTraumasError(err);\n    }\n\n\n    const {\n        firstName,\n        lastName,\n        email,\n        area_code,\n        phone_number,\n        traumas,\n        logo\n    } = counsellorInfo;\n\n\n    return <>\n        <Container>\n            {/* {!props.breadcrumb && <Breadcrumb\n                routeSegments={[\n                    { name: \"Counselors\", path: \"/counsellors\" },\n                    { name: \"Add Counselor\" }\n                ]}\n            />} */}\n            <h1 style={{ marginTop: '0px', marginBottom: '10px', padding: '0px'}}>Add Provider</h1>\n            <div className='center-card'>\n                <ValidatorForm\n                    ref={formEl}\n                    onSubmit={handleSubmit}\n                    onError={() => null}\n                >\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"first_name\"\n                                name=\"firstName\"\n                                label=\"First Name*\"\n                                type=\"text\"\n                                value={firstName}\n                                onChange={handleChange}\n                                fullWidth\n                                validators={['REQUIRED']}\n                                errorMessages={['This field is required']}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"last_name\"\n                                name=\"lastName\"\n                                label=\"Last Name*\"\n                                type=\"text\"\n                                value={lastName}\n                                onChange={handleChange}\n                                fullWidth\n                                validators={['REQUIRED']}\n                                errorMessages={['This field is required']}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField\n                                margin=\"dense\"\n                                id=\"email\"\n                                name=\"email\"\n                                label=\"Email*\"\n                                type=\"email\"\n                                value={email}\n                                onChange={handleChange}\n                                fullWidth\n                                validators={['REQUIRED', 'isEmail']}\n                                errorMessages={[\n                                    'This field is required',\n                                    'email is not valid',\n                                ]}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <Grid container>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        id=\"area_code\"\n                                        name=\"area_code\"\n                                        label=\"Area Code*\"\n                                        type=\"text\"\n                                        value={area_code}\n                                        onChange={handleChange}\n                                        fullWidth\n                                        validators={['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH']}\n                                        errorMessages={['This field is required', 'Invalid area code', 'Area code should have 3 digits']}\n                                        // validators={['required']}\n                                        // errorMessages={['This field is required']}\n                                    />\n                                </Grid>\n                                <Grid item xs={1} sm={1} md={1} lg={1}>\n                                    <div className='phone_line'>&nbsp;</div>\n                                </Grid>\n                                <Grid item xs={8} sm={8} md={8} lg={8}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        id=\"phone_number\"\n                                        name=\"phone_number\"\n                                        label=\"Phone Number*\"\n                                        type=\"text\"\n                                        value={phone_number}\n                                        onChange={handleChange}\n                                        fullWidth\n                                        validators={['REQUIRED', 'VALID_INPUT','MAX_PHONE_LENGTH']}\n                                        errorMessages={['This field is required', 'Invalid phone number', 'Phone number must be of 7 digits']}\n                                        // validators={['required']}\n                                        // errorMessages={['This field is required']}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container rowSpacing={2} columnSpacing={6}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <FormControl sx={{ mt: 2, width: 250 }} error={traumas.length ? false: (isTouched ? true: false)}>\n                                <InputLabel \n                                    id={\n                                        (traumas.length === 0 && isTouched) ? \n                                        \"demo-simple-select-error-label\" :    \n                                        \"open-select-label\"\n                                    }\n                                >\n                                    Trauma Type*\n                                </InputLabel>\n                                <Select\n                                    labelId=\"open-select-label\"\n                                    margin=\"dense\"\n                                    id=\"center_type\"\n                                    name=\"traumas\"\n                                    multiple\n                                    value={traumas}\n                                    input={<OutlinedInput label=\"Trauma Type\" />}\n                                    style={{ borderColor: '#FF3D57'}}\n                                    // InputLabelProps={{shrink: false}}\n                                    onChange={(e) => {\n                                        const { target: { value }} = e;\n                                        setTraumasError(value.length === 0 ? 'This field is required!' : '');\n                                        setCounsellorInfo({ ...counsellorInfo, traumas: value })\n                                        setIsTouched(true);\n                                    }}\n                                    onBlur={() => handleTraumas()}\n                                    fullWidth\n                                    validators={['required']}\n                                >\n                                    <MenuItem disabled value=\"\">\n                                        <em>Trauma Type</em>\n                                    </MenuItem>\n                                    {traumaList && traumaList.map((item, i) => (\n                                        <MenuItem key={i} value={item.attributes.trauma_code}>{item.attributes.trauma_name}</MenuItem>\n                                    ))}\n                                </Select>\n                                {traumasError && (\n                                    <p className='form-err'>{traumasError}</p>\n                                )}\n                            </FormControl> \n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={6}>\n                        <Grid item lg={12} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            {logo ? <StyledAvatar\n                                src={logo.base64}\n                            /> : <UploadButton\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                                <Icon>file_upload_outlined</Icon>\n                                Upload Logo\n                                <input\n                                    type=\"file\"\n                                    hidden\n                                    accept=\"image/*\"\n                                    multiple\n                                    onChange={handleFileUpload}\n                                />\n                            </UploadButton>}\n                            <Grid item style={{ flexDirection: \"column\" }}>\n                                <Button\n                                    variant=\"contained\"\n                                    component=\"label\"\n                                    color=\"inherit\"\n                                    sx={{ marginLeft: '15px', marginTop: '15px', height: '35px', marginBottom: '16px' }}\n                                    onClick={() => setCounsellorInfo({ ...counsellorInfo, logo: null, logo_image: '' })}\n                                >\n                                    Reset Logo\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n                        {/* <Button sx={{ display: 'block', marginTop: '20px' }} color=\"primary\" variant=\"contained\" type=\"submit\">\n                            <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\n                                Submit\n                            </Span>\n                        </Button> */}\n                        <FlexBox flexWrap=\"wrap\">\n                            <Box mr={2} position=\"relative\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    type=\"submit\"\n                                    onClick={() => handleTraumas()}\n                                >\n                                    Submit\n                                </Button>\n\n                                {loading && (\n                                    <StyledProgress\n                                        size={24}\n                                        className=\"buttonProgress\"\n                                    />\n                                )}\n\n                            </Box>\n                            <CancelButton sx={{ marginBottom: 2 }} onClick={() => clearFields()}>\n                                Cancel\n                            </CancelButton>\n                        </FlexBox>\n\n\n                    </div>\n                </ValidatorForm>\n                <Snackbar\n                    open={open}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    autoHideDuration={3000}\n                    onClose={() => {\n                        setOpen(false)\n                        navigate('/counsellors');\n                    }}\n                >\n                    <Alert\n                        onClose={() => {\n                            setOpen(false)\n                            navigate('/counsellors');\n                        }}\n                        variant=\"filled\"\n                        severity={statusInfo.status}\n                        sx={{ width: '100%' }}\n                    >\n                        {statusInfo.message}\n                    </Alert>\n                </Snackbar>\n                <SessionModal\n                    open={openModal}\n                    text={msg}\n                    onConfirmDialogClose={() => {\n                        setMsg('');\n                        setOpenModal(false);\n                    }}\n                    onYesClick={() => {\n                        setMsg('');\n                        setOpenModal(false);\n                    }}\n                />\n            </div>\n        </Container>\n    </>\n}\n\nexport default CounsellorAdd"],"sourceRoot":""}