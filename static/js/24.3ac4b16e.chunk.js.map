{"version":3,"sources":["app/components/UsersCustomTable/UsersCustomTable.jsx","app/constants/data.js","app/services/clientService.js","app/services/centerService.js","app/utils/data.formater.js","app/components/common/SearchFilter.js","app/services/sessionService.js","app/components/AssignDialog/AssignCenterDialog.js","app/views/adminView/counsellor/details/CounsellorDetails.jsx"],"names":["_status","UsersCustomTable","props","navigate","useNavigate","user","useAuth","CustomHeadCell","meta","data","entries","Object","index","key","value","push","width","variant","align","className","showDisableBtn","role","color","onClick","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","style","marginLeft","center_name","type","owned_by","handleOpen","deviceID","showBtn","display","flexDirection","justifyContent","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","component","scope","sx","overflow","minWidth","size","rowsPerPage","slice","page","map","i","border","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","id","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","tabsData","admin","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","label","placeholder","items","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","phone_number","address","validators","errorMessages","validationRules","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","fetchClicians","url","makeRequest","then","resp","json","fetchClients","fetchBarriers","createClient","fetchClient","createLicense","updateLicense","getClientDetails","updateClientTrauma","addNotes","catch","err","fetchPassphrases","findClients","searchData","filterData","fetchInitialDiagnosis","fetchListOfTreatments","fetchListOfLocations","updateNote","createSession","checkUnique","updateClient","fetchCenter","getAllCenters","getCenterDetails","findCenters","filters","formatCenters","response","Array","isArray","forEach","item","formatData","phoneNumber","state","centerType","dateCreated","formatCounsellor","obj","toString","createdAt","moment","format","counsellorId","formatClient","client_id","age","gender_bio","gender_id","gender_identified","ethnicity","clientId","formatSession","counsellor_name","caseId","sessionId","duration","case_id","session_id","scheduled_at","formatTime","formatDetails","icon","toLowerCase","UserID","getName","verified","confirmed","date_created","console","log","center_type","fullName","profile","SearchFilter","renderMenuItem","genderValue","filterValue","marginTop","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","searchLabel","onChange","handleSearch","searchValue","autoFocus","InputProps","startAdornment","multiFilter","fullWidth","backgroundColor","padding","genderSelectValue","selectValue","handleChange","handleReset","alignSelf","updateSession","StyledProgress","styled","CircularProgress","position","bottom","right","Demo","theme","palette","background","paper","top","left","transform","bgcolor","boxShadow","p","borderRadius","AssignCenterDialog","useStateRef","centers","centerIds","counsellorInfo","setCounsellorInfo","counsellorInfoRef","useState","centerList","setCenterList","loading","setLoading","isDisabled","setIsDisabled","formEl","useRef","event","a","options","publishedAt","split","centerArr","current","el","manageCenter","updateCounsellor","editCounsellor","setTimeout","handleAssignCenterStatus","message","handleClose","updateProviderClient","clients","sessions","res","Number","isAfter","startOf","updateProviderSessions","useEffect","attributes","blocked","Modal","keepMounted","open","onClose","Box","ref","onSubmit","onError","Typography","mb","FormControl","mt","InputLabel","Select","labelId","margin","multiple","input","OutlinedInput","preventDefault","target","containsAll","every","includes","MenuItem","Grid","spacing","List","dense","ListItem","mr","ListItemText","secondary","secondaryTypographyProps","noWrap","lineHeight","Button","ml","Container","breakpoints","down","CounsellorDetails","setValue","tab","setTab","detailsData","setDetailsData","centerData","setCenterData","clientData","setClientData","appointmentData","setAppointmentData","React","setRowsPerPage","setPage","searchResult","setSearchResult","setLogo","openDialog","setOpenDialog","appointment","searchedData","setSearchedData","values","statusInfo","setStatusInfo","isBlocked","setIsBlocked","openAlert","setOpenAlert","window","location","href","pop","anchorEl","setAnchorEl","Boolean","setCenterIds","Gender","Ethnicity","setType","search","filter","setSearchData","searchRef","gender","queryData","setQueryData","queryRef","clientFilterValue","filterValueGender","handleClick","currentTarget","newPage","pageNavigate","assignCenter","handleChangeFilter","filterType","handleClientChange","handleBlur","prop","fetchData","getCounsellorsDetails","arr","firstName","lastName","error","ids","Center","Client","Appointment","routeSegments","path","TabContext","borderBottom","borderColor","TabList","newValue","Tab","TabPanel","title","subtitle","action","userRole","navigateTo","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity"],"mappings":"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","file":"static/js/24.3ac4b16e.chunk.js","sourcesContent":["import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import { makeRequest } from './authenticationService';\n\nexport const fetchClicians = (id) => {\n    let url = `/api/centers/${id}`;\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClients = (page) => {\n    let url = `/api/clients?pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const fetchBarriers = (id) => {\n    let url = `/api/barriers`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const createClient = (data) => {\n    let url = `/api/clients`\n    return makeRequest('POST', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchClient = (id) => {\n    let url = `/api/clients/${id}`\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const createLicense = (data) => {\n    let url = `/api/licenses`\n    return makeRequest('POST', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const updateLicense = (id, data) => {\n    let url = `/api/licenses/${id}`\n    return makeRequest('PUT', url, data)\n    .then((resp) => {\n        return resp;\n    })\n    .then((json) => {\n        return json;\n    }); \n}\n\nexport const getClientDetails = (id) => {\n    let url = `/api/clients/${id}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const updateClientTrauma = (id,data) => {\n    let url = `/api/clients/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const filterClients = (data, page) => {\n    let url = `/api/clients?filter[clinician]=${data.clinician}&filter[device]=${data.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const addNotes = (data) => {\n    let url = `/api/notes`;\n\n    return makeRequest('POST', url,data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchPassphrases = () => {\n    let url = `/api/passphrases`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const findClients = (searchData, filterData, page) => {\n    let url = `/api/clients?search=${searchData}&filter[clinician]=${filterData.clinician}&filter[device]=${filterData.device}&pagination[page]=${page}`;\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchInitialDiagnosis = () => {\n    let url = `/api/initial-diagnoses`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchListOfTreatments = () => {\n    let url = `/api/treatments`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\nexport const fetchListOfLocations = () => {\n    let url = `/api/treatment-locations`\n    \n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateNote = (id,data) => {\n    let url = `/api/notes/${id}`\n\n    return makeRequest('PUT', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const createSession = (data) => {\n    let url = `/api/sessions`\n\n    return makeRequest('POST', url,data)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const checkUnique = (data) => {\n    let url = `/api/clients?check=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const updateClient = (id, data) => {\n    let url = `/api/clients/${id}`;\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}","import { makeRequest } from './authenticationService';\n\nexport const fetchCenter = (page) => {\n    // let url = `/api/centers?pagination[page]=${page}`;\n    let url = '/api/centers';\n\n    if(page){\n        url += `?pagination[page]=${page}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getAllCenters = () => {\n    let url = '/api/centers?all=-1';\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const getCenterDetails = (id) => {\n    let url = `/api/centers/${id}`;\n\n    return makeRequest('GET', url, )\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\n\nexport const searchCenters = (data,page) => {\n    let url = `/api/centers?search=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const filterCenters = (data,page) => {\n    let url = `/api/centers?filter=${data}&pagination[page]=${page}`\n\n    return makeRequest('GET',url)\n    .then((resp) =>{\n        return resp;\n    })\n    .catch((err)=>{\n        return err;\n    })\n}\n\nexport const findCenters = (searchData, filters, page) => {\n    let url = `/api/centers?search=${searchData}&filter=${filters}&pagination[page]=${page}`;\n\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import moment from 'moment';\nimport { formatTime } from './utils';\nexport function formatCenters(data) {\n    let response = [];\n    const meta = {\n        centerId: \"Center ID\",\n        name: \"Full Name\",\n        email: \"Email\",\n        phoneNumber: \"Phone Number\",\n        state: \"State\",\n        centerType: \"Center Type\",\n        // verified: \"Status\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        // data.map((item) => {\n        //     response.push(formatData(item))\n        // })\n        data.forEach(item => {\n            response.push(formatData(item))\n        })\n    }\n    else {\n        response.push(formatData(data))\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatCounsellor (data) {\n    let response = [];\n    const meta = {\n        counsellorId: \"Provider ID\",\n        name: \"Full Name\",\n        email: \"Email ID\",\n        phoneNumber: \"Phone Number\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item && item.user && item.user.username,\n                name: item.name,\n                email: item.email,\n                phoneNumber: item.phone_number.toString(),\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data && data.user && data.user.username,\n            name: data.name,\n            email: data.email,\n            phoneNumber: data.phone_number,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatClient (data) {\n    let response = [];\n    const meta = {\n        clientId: \"Client ID\",\n        name: \"Record Name\",\n        age: \"Age\",\n        gender_bio: \"Gender\",\n        gender_id: \"Gender ID\",\n        ethnicity: \"Ethnicity\",\n        status: \"Status\",\n        dateCreated: \"Date Created\",\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item.client_id,\n                name: item.name,\n                age: item.age,\n                gender_bio: item.gender_bio,\n                gender_id: item.gender_identified,\n                ethnicity: item.ethnicity,\n                status: item.status,\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data.id,\n            name: data.name,\n            age: data.age,\n            gender_bio: data.gender_bio,\n            gender_id: data.gender_identified,\n            status: data.status,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response['meta'] = meta\n    return response;\n}\n\nexport function formatSession(data, type=null) {\n    let response = [];\n    let meta\n    if (type && type !== 'provider') {\n        meta = {\n            counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    } else {\n        meta = {\n            // counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                // counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    }\n    \n    response['meta']= meta\n    return response;\n}\n\nexport function formatDetails(data) {\n    let icon = 'http://localhost:1337'+data[(data.role.name).toLowerCase()].logo_image\n\n    const response = {\n        UserID: data.username,\n        name: getName(data),\n        phoneNumber: data[(data.role.name).toLowerCase()].phone_number,\n        // username: data.username,\n        email: data.email,\n        verified: data.confirmed,\n        logo:icon,\n        date_created: moment(data.createdAt).format('DD MMMM, YYYY'),\n        role: data.role.name\n    };\n\n    return response\n}\n\nfunction formatData(item) {\n    console.log(item.user?.username)\n    const obj = {\n        centerId: item.id,\n        id: item.user?.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        // firstName: item.first_name,\n        // lastName: item.last_name,\n        // country: item.country,\n        state: item.state?.name,\n        // city: item.city,\n        // postalCode: item.postal_code,\n        // areaCode: item.area_code,\n        centerType: item.center_type?.name,\n        // verified: item.is_verified,\n        // address: getAddress(item.street_address, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n    };\n\n    return obj\n}\n\n// function getAddress(address1, address2) {\n//     let fullAddress = address1 + ' ' + address2\n//     return fullAddress\n// }\n\nfunction getName(data) {\n    let fullName = ''\n    switch (data.role.name) {\n        case \"Center\":\n            fullName = data.center && data.center.name ? data.center.name : ''\n            break;\n        case \"Counsellor\":\n            fullName = data.counsellor && data.counsellor.name ? data.counsellor.name : ''\n            break;\n        case \"Client\":\n            fullName = data.client && data.client.name ? data.client.name: ''\n            break;\n        case \"Admin\":\n            fullName = data.profile && data.profile.first_name ? data.profile.first_name + data.profile.last_name : ''\n            break;\n        default:\n            fullName = \"NIL\"\n            break;\n    }\n    return fullName\n}","import React from 'react'\nimport {\n    Grid,\n    Button,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './common.css'\n\nconst SearchFilter = (props) => {\n    const renderMenuItem = (key) => {\n        if (key == 'Gender') {\n            return props.genderValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            })\n        } else {\n            return props.filterValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            }\n            )\n        }\n    }\n    const renderFilters = () => {\n        if (props.multiFilter) {\n            return Object.entries(props.type).map(([key, value], i) => {\n                return <Grid item lg={6} md={6} sm={12} xs={12} key={`${i}`}>\n                    <Box>\n                        <FormControl fullWidth>\n                            <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{key}</InputLabel>\n                            <Select\n                                id=\"demo-simple-select\"\n                                value={key == 'Gender' ? props.genderSelectValue : props.selectValue}\n                                label=\"Age\"\n                                onChange={(e) => props.handleChange(e, key)}\n                                placeholder=\"Search Center\"\n                            >\n                                {renderMenuItem(key)}\n                            </Select>\n                        </FormControl>\n                    </Box>\n                </Grid>\n            }\n            )\n        } else {\n            return <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{props.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={props.selectValue}\n                            label=\"Age\"\n                            onChange={(e) => props.handleChange(e)}\n                            placeholder=\"Search Center\"\n                        >\n                            {props.filterValue && props.filterValue.map((item, index) => {\n                                return <MenuItem key={index} value={item}>{item}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n        }\n    }\n    return (\n        <>\n            <Grid sx={{ marginTop: '0px', marginBottom: '20px' }} container rowSpacing={3} columnSpacing={6}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {/* <FormControl fullWidth> */}\n                        <TextField\n                            sx={{width: '100%'}}\n                            label={props.searchLabel}\n                            variant=\"outlined\"\n                            // className=\"client-search\"\n                            onChange={props.handleSearch}\n                            \n                            placeholder={props.searchLabel}\n                            type=\"text\"\n                            value={props.searchValue}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: <SearchIcon />,\n                            }}\n                        />\n                    {/* </FormControl> */}\n                </Grid>\n                {renderFilters()}\n            </Grid>\n            <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n                <Button\n                    color=\"primary\"\n                    variant='contained'\n                    onClick={props.handleReset}\n                    sx={{ alignSelf: 'flex-end' }}\n                >\n                    Reset\n                </Button>\n            </FormControl>\n        </>\n\n    )\n}\n\nexport default SearchFilter","import { makeRequest } from './authenticationService';\n\nexport const updateSession = (id, data) => {\n    let url = '/api/sessions/' + id;\n\n    return makeRequest('PUT', url, data)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}","import React, { useRef, useState, useEffect } from 'react'\n// import MenuItem from '@mui/material/MenuItem'\nimport { styled } from '@mui/system'\nimport FormControl from '@mui/material/FormControl'\nimport {\n    Box,\n    Button,\n    Modal,\n    Typography,\n    Select,\n    MenuItem,\n    InputLabel,\n    OutlinedInput,\n    CircularProgress,\n    List,\n    ListItemIcon,\n    ListItemText,\n    Grid, ListItem\n} from '@mui/material'\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { SelectValidator } from 'react-material-ui-form-validator'\nimport { ValidatorForm } from 'react-material-ui-form-validator'\nimport moment from 'moment'\nimport { editCounsellor, fetchCenter } from 'app/services/userService'\nimport { updateSession } from 'app/services/sessionService';\nimport { updateClient } from 'app/services/clientService';\nimport useStateRef from 'react-usestateref'\nimport { getCenterDetails } from 'app/services/centerService';\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    bottom: '38px',\n    right: '60px',\n}))\nconst Demo = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: 5\n}));\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px'\n}\n\nconst AssignCenterDialog = (props) => {\n    const [counsellorInfo, setCounsellorInfo, counsellorInfoRef] = useStateRef({\n        id: '',\n        centers: props.centerIds || [],\n    })\n    const [centerList, setCenterList] = useState()\n    const [loading, setLoading] = useState(false)\n    const [isDisabled, setIsDisabled] = useState(true)\n\n    const formEl = useRef()\n    async function handleSubmit(event) {\n        setLoading(true)\n        const {\n\n            id,\n            centers\n        } = counsellorInfo;\n        let options = {\n            counsellor: {\n                data: {\n                    id: id,\n                    centers: centers,\n                    publishedAt: moment().format().split('T')[0] + ' ' + moment().format().split('T')[1].slice(0, 8)\n                }\n            },\n        }\n        // collect center ids which needs to disable\n        let centerArr = []\n        if(counsellorInfoRef.current.centers.length <= 0)\n            centerArr = props.centerIds\n        props && props.centerIds.map(item => {\n            counsellorInfoRef.current.centers.map(el => {\n                if(item !== el)\n                    centerArr.push(item)\n            })\n        })\n        // get center details\n        !isDisabled && centerArr && centerArr.length > 0 && centerArr.map(item => {\n            manageCenter(item,id)\n        })\n\n        try {\n            updateCounsellor(options)\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n    function updateCounsellor (options) {\n        console.log(options)\n        editCounsellor(options)\n            .then(resp => {\n                if (resp && resp.status === 'success') {\n                    setTimeout(() => {\n                        setLoading(false)\n                        props.handleAssignCenterStatus({ status: 'success', message: 'Center Assigned Successfully' })\n                        props.handleClose()\n                    }, 3000);\n                } else if (resp && resp.status === 'fail') {\n                    setLoading(false)\n                    props.handleAssignCenterStatus({ status: 'error', message: 'Center Assigned Unsuccessfull' })\n                } else {\n                    setLoading(false)\n                }\n            }).catch(err => {\n                props.handleAssignCenterStatus({ status: 'error', message: 'Center Assigned Unsuccessfull' })\n            })\n    }\n\n    const updateProviderClient = async (clients) => {\n        // let options = {\n        //     data: {\n        //         counsellor: null\n        //     }\n        // };\n        for (let i = 0;i < clients.length; i++) {\n            \n            let options = {\n                data: {\n                    counsellor: null\n                }\n            };\n            await updateClient(clients[i], options);\n        }\n        // clients && clients.map(item => {\n        //     await updateClient(item, options)\n        // })\n    }\n    // async function updateProviderClient(clients) {\n    // }\n\n    async function updateProviderSessions(sessions){\n        const options = {\n            data: {\n                status: 'cancelled'\n            }\n        }\n        sessions && sessions.map(item => {\n            updateSession(item, options)\n        })\n    }\n\n    function manageCenter(centerId, id) {\n        const data = {\n            clients: [],\n            sessions: []\n        }\n        console.log(centerId)\n        getCenterDetails(centerId)\n            .then((res)=>{\n                if (res){\n                    res.clients && res.clients.map((item) => {\n                        if(item.counsellor && item.counsellor.id === Number(id)){\n                            data.clients.push(item.id)\n                        }\n                    })\n                    console.log(data.clients)\n                    updateProviderClient(data.clients)\n\n                    res.sessions && res.sessions.map((item) => {\n                        if(item.counsellor.id === Number(id) && (item.status === 'scheduled' || item.status === 'pending' || item.status === 'rescheduled') && moment(moment(item.scheduled_at).format('x'), 'x').isAfter(moment().startOf('minute')) ){\n                            data.sessions.push(item.id)\n                        }\n                    })\n                    console.log(data)\n                    updateProviderSessions(data.sessions)\n                }\n            })\n            .catch(err => {\n                console.log(\"error\",err)\n            })\n    }\n\n    useEffect(() => {\n        ; (async () => {\n            try {\n                if (props.centerIds) {\n                    console.log(props)\n                }\n                const resp = await fetchCenter();\n                if (resp && resp.data) {\n                    let data = []\n                    resp.data.map(item => {\n                        if(item?.attributes?.user?.data?.attributes?.blocked === false){\n                            let obj = {\n                                id: item.id,\n                                name: item.attributes.name\n                            }\n                            data.push(obj)\n                        }\n                    })\n                    console.log(resp)\n                    setCenterList(data);\n                    setCounsellorInfo({ ...counsellorInfo, id: props.id })\n                }\n            } catch (err) {\n                console.log('err', err);\n            }\n        })();\n    }, [])\n\n    function onChange(e) {\n        e.preventDefault()\n        setCounsellorInfo({ ...counsellorInfo, centers: e.target.value })\n    }\n    const {\n        centers\n    } = counsellorInfo\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <ValidatorForm\n                        ref={formEl}\n                        onSubmit={handleSubmit}\n                        onError={() => null}\n                    >\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"h6\"\n                            component=\"h2\"\n                        >\n                            Assign Centers\n                        </Typography>\n                        <Typography\n                            id=\"keep-mounted-modal-title\"\n                            variant=\"h8\"\n                            component=\"h6\"\n                        >\n                            Note: Multiple Center can be selected\n                        </Typography>\n                        <Box sx={{ minWidth: 300, mb: 2 }}>\n                            <FormControl sx={{ mt: 2, minWidth: 400 }}>\n                                <InputLabel id=\"open-select-label\">Centers</InputLabel>\n                                <Select\n                                    labelId=\"open-select-label\"\n                                    margin=\"dense\"\n                                    id=\"center_type\"\n                                    name=\"centers\"\n                                    multiple\n                                    value={centers}\n                                    input={<OutlinedInput label=\"Center\" />}\n                                    // InputLabelProps={{shrink: false}}\n                                    onChange={onChange}\n                                    fullWidth\n                                    validators={['required']}\n                                    onClose={() => {\n                                        const containsAll = props && props.centerIds.every(el => {\n                                            return counsellorInfoRef.current.centers.includes(el)\n                                        })\n                                        setIsDisabled(containsAll)\n                                    }}\n                                >\n                                    <MenuItem disabled value=\"\">\n                                        <em>Select Center</em>\n                                    </MenuItem>\n                                    {centerList && centerList.map((item, i) => (\n                                        <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        {!isDisabled &&\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={12}>\n                                    <Typography sx={{ mt: 2 }} variant=\"h7\" component=\"div\" color=\"error\">\n                                        Note : Disassociate center will have following actions -\n                                    </Typography>\n                                    <Demo>\n                                        <List dense={true}>\n\n                                            <ListItem>\n                                                <Typography sx={{ mr: 2 }} variant=\"h7\" component=\"div\">\n                                                    --\n                                                </Typography>\n                                                {/* <ListItemIcon >\n                                  <ArrowForwardIcon />\n                                </ListItemIcon> */}\n                                                <ListItemText\n                                                    //   primary=\"Provider will no longer have access to the clients\"\n                                                    secondary={'Provider will no longer have access to the clients belongs to the center'}\n                                                    secondaryTypographyProps={{\n                                                        noWrap: true,\n                                                        fontSize: 12,\n                                                        lineHeight: '12px',\n                                                        color: 'rgba(0,0,0,.5)',\n                                                    }}\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                {/* <ListItemIcon>\n                                  <ArrowForwardIcon />\n                                </ListItemIcon> */}\n                                <Typography sx={{ mr: 2 }} variant=\"h7\" component=\"div\">\n                                                    --\n                                                </Typography>\n                                                <ListItemText\n                                                    //   primary=\"Scheduled appointments will get cancelled\"\n                                                    secondary={'Scheduled appointments will get cancelled'}\n                                                    secondaryTypographyProps={{\n                                                        noWrap: true,\n                                                        fontSize: 12,\n                                                        lineHeight: '12px',\n                                                        color: 'rgba(0,0,0,.5)',\n                                                    }}\n                                                />\n                                            </ListItem>\n\n                                        </List>\n                                    </Demo>\n                                </Grid>\n                            </Grid>\n                        }\n\n                        <Box\n                            sx={{\n                                display: 'table',\n                                marginLeft: 'auto',\n                                marginRight: '0px',\n                            }}\n                        >\n                            <Button\n                                color=\"error\"\n                                variant=\"contained\"\n                                onClick={() => {\n                                    // dispatch(resetClient())\n                                    props.handleClose()\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                disabled={loading}\n                                sx={{ ml: 2 }}\n                                type=\"submit\"\n                                variant=\"contained\"\n                            >\n                                Assign\n                            </Button>\n                            {loading && (\n                                <StyledProgress\n                                    size={24}\n                                    className=\"buttonProgress\"\n                                />\n                            )}\n                        </Box>\n                    </ValidatorForm>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AssignCenterDialog","import React, { useEffect, useState } from 'react'\nimport {\n    CircularProgress,\n    Snackbar,\n    Alert\n} from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport './CounsellorDetails.css'\nimport moment from 'moment';\n\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable';\nimport { ProfileCard, Breadcrumb, SearchInput, UserProfileDetail } from 'app/components';\n\nimport { getCounsellorsDetails } from 'app/services/userService';\nimport { tabsData } from 'app/constants/data';\nimport SearchFilter from 'app/components/common/SearchFilter';\nimport { formatCenters, formatClient, formatSession } from '../../../../utils/data.formater'\nimport AssignCenterDialog from 'app/components/AssignDialog/AssignCenterDialog';\nimport { styled } from '@mui/system';\nimport '../../../users/Users.css';\nimport useStateRef from 'react-usestateref';\nimport useAuth from 'app/hooks/useAuth';\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst CounsellorDetails = () => {\n    const [loading, setLoading] = useState(false)\n    const [value, setValue] = useState('1');\n    const [tab, setTab] = useState([])\n    const [detailsData, setDetailsData] = useState('')\n    const [centerData, setCenterData] = useState('')\n    const [clientData, setClientData] = useState('')\n    const [appointmentData, setAppointmentData] = useState('')\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n    const [searchResult, setSearchResult] = useState(false)\n    const [logo, setLogo] = useState('')\n    const [openDialog, setOpenDialog] = useState(false)\n    const [searchedData, setSearchedData] = useState({\n        center: [],\n        counsellor: [],\n        client: [],\n        appointment: [],\n    })\n    const [values, setValues] = useState({\n        center: '',\n        counsellor: '',\n        client: '',\n        appointment: '',\n    })\n    const [statusInfo, setStatusInfo] = useState({\n        status: 'success',\n        message: ''\n    });\n    const [isBlocked, setIsBlocked] = useState(false);\n    const [openAlert, setOpenAlert] = useState(false);\n    const navigate = useNavigate();\n    const id = window.location.href.split('/').pop();\n    const { user } = useAuth()\n\n    //Edit button function\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n    const [centerIds, setCenterIds] = useState([])\n\n    // Search Filter\n    const [type, setType] = useState({\n        Gender: 'All',\n        Ethnicity: 'All'\n    });\n    const [searchData, setSearchData, searchRef] = useStateRef({\n        search: '',\n        filter: 'All'\n    })\n    const [queryData, setQueryData, queryRef] = useStateRef({\n        search: '',\n        ethnicity: 'All',\n        gender: 'All'\n    })\n    const [filterValue, setFilterValue, filterValueRef] = useStateRef([\n        'All', 'CAC', 'Clinic', 'Hospital', 'Private'\n    ])\n    const [clientFilterValue, setClientFilterValue] = useState([\n        'All', 'American Indian', 'Alaska Native', 'Asian', 'Black or African American', 'Hispanic or Latino', 'Native Hawaiian', 'Pacific Islander', 'White', 'Unknown'\n    ])\n    const [filterValueGender, setFilterValueGender] = useState([\n        'All', 'Male', 'Female', 'Other'\n    ])\n\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        // navigate(`/users/editCenter?id=${centerData[0].id}`)\n        setAnchorEl(null)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    function pageNavigate() {\n        console.log(detailsData.id)\n        navigate(`/counsellors/edit?id=${detailsData.id}`)\n        setAnchorEl(null)\n    }\n\n    function handleDialogClose() {\n        setOpenDialog(false)\n    }\n    function handleDialogOpen() {\n        setOpenDialog(true)\n    }\n\n    function assignCenter() {\n\n        setOpenDialog(true)\n        setAnchorEl(null)\n        // return <></>\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleReset = () => {\n\n        setSearchData({\n            search: '',\n            filter: 'All'\n        })\n        setType({\n            Gender: 'All',\n            Ethnicity: 'All'\n        });\n        setQueryData({\n            search: '',\n            ethnicity: 'All',\n            gender: 'All'\n        });\n        // fetchClientList(page, user.counsellor.id)\n    }\n\n    const handleChangeFilter = ({ target: { value } }, filterType) => {\n        // console.log('handleChange', value)\n        setSearchData({ ...searchData, filter: value });\n        if (value !== 'All') {\n            let searchData\n            searchData = centerData.filter((item) => {\n                return item.centerType.includes(value)\n            })\n            searchData['meta'] = centerData.meta\n            setSearchResult(true)\n            setSearchedData({ ...searchedData, center: searchData })\n        }\n        else {\n            setSearchResult(false)\n            // fetchClientList(page,user.counsellor.id)\n        }\n\n    }\n\n    const handleClientChange = ({ target: { value } }, type) => {\n        if (type == 'Gender') {\n            setQueryData({ ...queryData, gender: value })\n        } else if (type == 'Ethnicity') {\n            setQueryData({ ...queryData, ethnicity: value })\n        }\n        if (value !== 'All') {\n            let searchData\n            searchData = clientData.filter((item) => {\n                return item.gender_bio.includes(value) || item.ethnicity.includes(value)\n            })\n            searchData['meta'] = clientData.meta\n            setSearchedData({ ...searchedData, client: searchData })\n            setSearchResult(true)\n            // filterClient(value, page, type);\n        }\n        else {\n            setSearchResult(false)\n            // fetchClientList(page, user.counsellor.id)\n        }\n\n    }\n\n    const handleBlur = (prop) => (e) => {\n        let value = e.target.value\n        // setValues({ ...values, center: value })\n        // console.log(searchData)\n        if (value.length === 0) {\n            setSearchResult(false)\n        }\n        if(prop && prop == 'client') {\n            setQueryData({ ...queryData, search: value })\n            if (value && value.length > 2) {\n                searchData = clientData.filter((item) => {\n                    return item.name.toLowerCase().includes(value) || item.status.toLowerCase().includes(value) || item.gender_bio.toLowerCase().includes(value)\n                })\n                searchData['meta'] = clientData.meta\n                setSearchResult(true)\n                setSearchedData({ ...searchedData, [prop]: searchData })\n            }\n        } else if(prop && prop == 'center'){\n            setSearchData({ ...searchData, search: value })\n            if (value && value.length > 2) {\n                let searchData\n                searchData = centerData.filter((item) => {\n                    return item.name.toLowerCase().includes(value) || item.email?.toLowerCase().includes(value) || item.phoneNumber?.toString().toLowerCase().includes(value)\n                })\n                searchData['meta'] = centerData.meta\n                setSearchResult(true)\n                setSearchedData({ ...searchedData, [prop]: searchData })\n            }\n        }\n    }\n\n    const fetchData = async (id) => {\n        const res = await getCounsellorsDetails(id);\n        return res\n    }\n\n    function formatDetails(data) {\n\n        const response = {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            // areaCode: data.area,\n            phoneNumber: data.area_code != null ? data.area_code + '-' + data.phone_number : data.phone_number,\n            // logo: data.logo_image,\n            username: data.user?.username,\n            date_created: moment(data.createdAt).format('DD MMMM, YYYY'),\n            // role: data.role.name\n        };\n\n        return response\n    }\n\n    function handleAssignCenterStatus(data) {\n        console.log(data)\n        setOpenAlert(true);\n        setStatusInfo({\n            ...statusInfo,\n            status: data && data.status === 'success' ? 'success' : 'error',\n            message: data?.message\n        });\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        fetchData(id).then((res) => {\n            if (res) {\n                // setCounsellorData(formatCounsellor(res.counsellor))\n                setIsBlocked(res?.user?.blocked);\n                let arr = res?.centers.filter(el => el?.user?.blocked === false);\n                setCenterData(formatCenters(arr))\n                setClientData(formatClient(res.clients))\n                setAppointmentData(formatSession(res.sessions))\n            }\n            setDetailsData(formatDetails(res))\n            if (res.logo_image) {\n                let logo = 'http://localhost:1337' + res.logo_image\n                setLogo(logo)\n            }\n            setLoading(false)\n        })\n            .catch(console.error)\n    }, [openDialog])\n\n    useEffect(() => {\n        if (centerData) {\n            const ids = centerData.map((item) => {\n                return item.centerId;\n            })\n            setCenterIds(ids)\n        }\n        setTab(tabsData.counsellor)\n\n    }, [detailsData, centerData, tab])\n\n    const Center = () => {\n        return <>\n            <SearchFilter\n                handleSearch={handleBlur('center')}\n                handleChange={handleChangeFilter}\n                filterValue={filterValue}\n                searchValue={searchData.search}\n                selectValue={searchRef.current.filter}\n                label=\"Center Type\"\n                searchLabel=\"Search Center\"\n                handleReset={handleReset}\n            />\n            {/* {centerInfo &&\n                <CenterListTable\n                    role={user.role.name}\n                    data={centerInfo}\n                    // getCellContent={getCellContent}\n                    onClick={goToDetails}\n                />\n            } */}\n            {/* <SearchInput placeholder=\"Search Center\" value={values.center} handleBlur={handleBlur('center')} /> */}\n            <UsersCustomTable role=\"Center\" rowsPerPage={rowsPerPage} page={page} handleChangeRowsPerPage={handleChangeRowsPerPage} handleChangePage={handleChangePage} rows={searchResult && (searchData.search !== '' || searchData.filter !== 'All') ? searchedData.center : centerData} />\n        </>\n    }\n\n    const Client = () => {\n        return <>\n            <SearchFilter\n                handleSearch={handleBlur('client')}\n                handleChange={handleClientChange}\n                filterValue={clientFilterValue}\n                genderValue={filterValueGender}\n                multiFilter={true}\n                selectValue={queryRef.current.ethnicity}\n                genderSelectValue={queryRef.current.gender}\n                searchValue={queryRef.current.search}\n                label=\"Ethnicity\"\n                searchLabel=\"Search Client\"\n                type={type}\n                handleReset={handleReset}\n            />\n            {/* <SearchInput placeholder=\"Search Client\" value={values.client} handleBlur={handleBlur('client')} /> */}\n            <UsersCustomTable role=\"Client\" rowsPerPage={rowsPerPage} page={page} handleChangeRowsPerPage={handleChangeRowsPerPage} handleChangePage={handleChangePage} rows={searchResult && (queryData.search !== '' || queryData.ethnicity !== 'All' || queryData.gender !== 'All') ? searchedData.client : clientData} />\n        </>\n    }\n\n    const Appointment = () => {\n        return <>\n            <SearchInput placeholder=\"Search Appointment\" value={values.appointment} handleBlur={handleBlur('appointment')} />\n            <UsersCustomTable role=\"Session\" rowsPerPage={rowsPerPage} page={page} handleChangeRowsPerPage={handleChangeRowsPerPage} handleChangePage={handleChangePage} rows={searchResult && values.appointment !== '' ? searchedData.appointment : appointmentData} />\n        </>\n    }\n\n    return <Container>\n        <Breadcrumb\n            routeSegments={[\n                { name: \"All Providers\", path: \"/counsellors\" },\n                { name: \"Provider Details\" }\n            ]}\n        />\n        {!loading && detailsData !== '' && (\n            <TabContext value={value}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                    <TabList onChange={handleChange} aria-label=\"Provider Details Segement\">\n                        {tab.map((item, index) => (\n                            <Tab label={item.name} value={item.id.toString()} key={index} />\n                        ))}\n                    </TabList>\n                </Box>\n                {tab && tab.map((item, index) => {\n                    return (\n                        <TabPanel key={index} value={item.id.toString()}>\n                            {item.id === 1 ? (\n                                <ProfileCard\n                                    title={detailsData.name}\n                                    subtitle={\"Provider\"}\n                                    icon={logo}\n                                    anchorEl={anchorEl}\n                                    open={open}\n                                    action={true}\n                                    isBlocked={isBlocked}\n                                    userRole={user.role.type}\n                                    handleClick={handleClick}\n                                    handleClose={handleClose}\n                                    navigateTo={pageNavigate}\n                                    assignCenter={assignCenter}\n                                >\n                                    <UserProfileDetail data={detailsData} />\n                                </ProfileCard>\n                            ) : item.id === 2 ? (\n                                <Center />\n                            ) : item.id === 4 ? (\n                                <Client />\n                            ) : (\n                                <Appointment />\n                            )}\n                        </TabPanel>\n                    )\n                })}\n\n            </TabContext>\n        )}\n        {openDialog && <AssignCenterDialog handleAssignCenterStatus={handleAssignCenterStatus} handleClose={handleDialogClose} centerIds={centerIds} open={openDialog} id={id} />}\n        <Snackbar\n            open={openAlert}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            autoHideDuration={3000}\n            onClose={() => {\n                setOpenAlert(false)\n                // navigate('/counsellors');\n            }}\n        >\n            <Alert\n                onClose={() => {\n                    setOpenAlert(false)\n                    // navigate('/counsellors');\n                }}\n                variant=\"filled\"\n                severity={statusInfo.status}\n                sx={{ width: '100%' }}\n            >\n                {statusInfo.message}\n            </Alert>\n        </Snackbar>\n\n    </Container>\n}\n\nexport default CounsellorDetails"],"sourceRoot":""}