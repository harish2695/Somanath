{"version":3,"sources":["app/components/CustomCheckBox.js","app/views/CenterView/Devices/ReturnDeviceOrExpireLicense.js"],"names":["CustomCheckBox","props","onSubmit","handleSave","onChange","handleChange","container","spacing","xs","md","columns","sm","checkBoxList","map","item","i","control","label","name","value","checked","returnCheck","indexOf","error","style","color","className","marginLeft","variant","onClick","handleCancel","size","sx","ml","loading","returnDevice","ReturnDeviceOrExpireLicense","React","useState","setReturnCheck","event","checks","target","filter"],"mappings":"iHAAA,wEAoEeA,IA1DQ,SAACC,GACpB,OACI,eAAC,IAAD,CAAWC,SAAUD,EAAME,WAAYC,SAAUH,EAAMI,aAAvD,UACI,cAAC,IAAD,CACIC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAHjC,SAKKR,EAAMW,cACHX,EAAMW,aAAaC,KAAI,SAACC,EAAMC,GAAP,OACnB,cAAC,IAAD,CAAMD,MAAI,EAACN,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAA7B,SACI,cAAC,IAAD,CACIO,QAAS,cAAC,IAAD,IACTC,MAAOH,EAAKI,KACZC,MAAOL,EAAKI,KACZE,SAC8C,IAA1CnB,EAAMoB,YAAYC,QAAQR,EAAKI,SANNH,QAchDd,EAAMsB,OACH,sBAAMC,MAAO,CAAEC,MAAO,OAAtB,kCAEJ,sBAAKC,UAAU,iBAAiBF,MAAO,CAAEG,WAAY,QAArD,UACI,cAAC,IAAD,CACIC,QAAQ,YACRH,MAAM,QACNI,QAAS5B,EAAM6B,aAHnB,oBAeA,cAAC,IAAD,CACIC,KAAK,SACLC,GAAI,CAAEC,GAAI,GACVC,QAASjC,EAAMiC,QACfN,QAAQ,YACRH,MAAM,UACNI,QAAS5B,EAAME,WANnB,4B,6IC/CVgC,EAAe,CACjB,CAAEjB,KAAM,6BACR,CAAEA,KAAM,0BACR,CAAEA,KAAM,6BACR,CAAEA,KAAM,0BACR,CAAEA,KAAM,sBA6CGkB,UA3CqB,SAACnC,GACjC,MAAsCoC,IAAMC,SAAS,IAArD,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA0BF,IAAMC,UAAS,GAAzC,6BAuBA,OACI,mCACI,cAAC,IAAD,CAAMhC,WAAS,EAACoB,UAAU,iBAA1B,SACI,eAAC,IAAD,CAAMA,UAAU,gBAAhB,UACI,+DACA,cAAC,IAAD,CACId,aAAcuB,EACdd,YAAaA,EACbhB,aA7BC,SAACmC,GAClB,IAAIC,EAAS,GAETA,EADAD,EAAME,OAAOtB,QACP,sBAAOC,GAAP,CAAoBmB,EAAME,OAAOvB,QAE9BE,EAAYsB,QAAO,SAAC7B,GAAD,OAAUA,IAAS0B,EAAME,OAAOvB,SAEhEoB,EAAeE,IAuBCtC,WApBD,aAqBC2B,aAAc7B,EAAM6B","file":"static/js/55.72a39d85.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab'\nimport {\n    Button,\n    Checkbox,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n} from '@mui/material'\nimport React from 'react'\n\nconst CustomCheckBox = (props) => {\n    return (\n        <FormGroup onSubmit={props.handleSave} onChange={props.handleChange}>\n            <Grid\n                container\n                spacing={{ xs: 1, md: 1 }}\n                columns={{ xs: 2, sm: 8, md: 12 }}\n            >\n                {props.checkBoxList &&\n                    props.checkBoxList.map((item, i) => (\n                        <Grid item xs={2} sm={4} md={4} key={i}>\n                            <FormControlLabel\n                                control={<Checkbox />}\n                                label={item.name}\n                                value={item.name}\n                                checked={\n                                    props.returnCheck.indexOf(item.name) === -1\n                                        ? false\n                                        : true\n                                }\n                            />\n                        </Grid>\n                    ))}\n            </Grid>\n            {props.error && (\n                <span style={{ color: 'red' }}>*Select at least one</span>\n            )}\n            <div className=\"client-buttons\" style={{ marginLeft: 'auto' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={props.handleCancel}\n                >\n                    Cancel\n                </Button>\n                {/* <Button\n                    sx={{ ml: 2 }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={props.handleSave}\n                >\n                    Accept\n                </Button> */}\n                <LoadingButton\n                    size=\"medium\"\n                    sx={{ ml: 2 }}\n                    loading={props.loading}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={props.handleSave}\n                >\n                    Accept\n                </LoadingButton>\n            </div>\n        </FormGroup>\n    )\n}\n\nexport default CustomCheckBox\n","import { Grid } from '@mui/material'\nimport CustomCheckBox from 'app/components/CustomCheckBox'\nimport Loading from 'app/components/MatxLoading/MatxLoading'\nimport React from 'react'\nimport './Devices.css'\n\nconst returnDevice = [\n    { name: 'Check for Physical Damage' },\n    { name: 'Power on, check screen' },\n    { name: 'Plug into Power to charge' },\n    { name: 'Connect to Center WiFi' },\n    { name: 'Fully Charge Unit' },\n]\nconst ReturnDeviceOrExpireLicense = (props) => {\n    const [returnCheck, setReturnCheck] = React.useState([])\n    const [error, setError] = React.useState(false)\n\n    const handleChange = (event) => {\n        let checks = []\n        if (event.target.checked) {\n            checks = [...returnCheck, event.target.value]\n        } else {\n            checks = returnCheck.filter((item) => item !== event.target.value)\n        }\n        setReturnCheck(checks)\n    }\n\n    const handleSave = () => {\n\n        const options = {\n            data: {\n                is_assigned:false,\n                status:\"Available\",\n                license: null\n            },\n        }\n    }\n\n    return (\n        <>\n            <Grid container className=\"user-container\">\n                <Grid className=\"return-device\">\n                    <h2>Return device /Expire license</h2>\n                    <CustomCheckBox\n                        checkBoxList={returnDevice}\n                        returnCheck={returnCheck}\n                        handleChange={handleChange}\n                        handleSave={handleSave}\n                        handleCancel={props.handleCancel}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ReturnDeviceOrExpireLicense\n"],"sourceRoot":""}