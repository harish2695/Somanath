{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/counselorService.js","app/components/common/SearchFilter.js","app/components/CenterListTable/CenterListTable.js","app/views/counsellorView/Centers/Centers.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","SearchFilter","props","renderMenuItem","key","genderValue","map","item","index","value","filterValue","marginBottom","container","rowSpacing","columnSpacing","lg","md","sm","xs","label","searchLabel","onChange","handleSearch","placeholder","searchValue","autoFocus","InputProps","startAdornment","multiFilter","Object","entries","i","fullWidth","padding","genderSelectValue","selectValue","e","handleChange","handleReset","alignSelf","CenterListTable","useState","rowsPerPage","setRowsPerPage","setPage","Grid","role","CustomTable","handleChangePage","event","newPage","handleChangeRowsPerPage","target","rows","CustomHeadCell","meta","push","TableCell","align","className","CustomBodyCell","row","scope","Centers","clinician","device","loading","setLoading","centerInfo","setCenterInfo","setSearchResult","filter","setSearchData","openModal","setOpenModal","msg","setMsg","user","useAuth","a","length","searchClient","fetchClientList","counsellor","pageNumber","error","name","formatCenters","filterClient","formattedClient","getClients","clientsArr","attributes","getSessions","sessionsArr","response","forEach","center","clients","sessions","state","center_type","obj","centerId","username","centerType","session","useEffect","routeSegments","filterType"],"mappings":"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","file":"static/js/44.24a4866e.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import React from 'react'\nimport {\n    Grid,\n    Button,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './common.css'\n\nconst SearchFilter = (props) => {\n    const renderMenuItem = (key) => {\n        if (key == 'Gender') {\n            return props.genderValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            })\n        } else {\n            return props.filterValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            }\n            )\n        }\n    }\n    const renderFilters = () => {\n        if (props.multiFilter) {\n            return Object.entries(props.type).map(([key, value], i) => {\n                return <Grid item lg={6} md={6} sm={12} xs={12} key={`${i}`}>\n                    <Box>\n                        <FormControl fullWidth>\n                            <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{key}</InputLabel>\n                            <Select\n                                id=\"demo-simple-select\"\n                                value={key == 'Gender' ? props.genderSelectValue : props.selectValue}\n                                label=\"Age\"\n                                onChange={(e) => props.handleChange(e, key)}\n                                placeholder=\"Search Center\"\n                            >\n                                {renderMenuItem(key)}\n                            </Select>\n                        </FormControl>\n                    </Box>\n                </Grid>\n            }\n            )\n        } else {\n            return <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{props.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={props.selectValue}\n                            label=\"Age\"\n                            onChange={(e) => props.handleChange(e)}\n                            placeholder=\"Search Center\"\n                        >\n                            {props.filterValue && props.filterValue.map((item, index) => {\n                                return <MenuItem key={index} value={item}>{item}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n        }\n    }\n    return (\n        <>\n            <Grid sx={{ marginTop: '0px', marginBottom: '20px' }} container rowSpacing={3} columnSpacing={6}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {/* <FormControl fullWidth> */}\n                        <TextField\n                            sx={{width: '100%'}}\n                            label={props.searchLabel}\n                            variant=\"outlined\"\n                            // className=\"client-search\"\n                            onChange={props.handleSearch}\n                            \n                            placeholder={props.searchLabel}\n                            type=\"text\"\n                            value={props.searchValue}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: <SearchIcon />,\n                            }}\n                        />\n                    {/* </FormControl> */}\n                </Grid>\n                {renderFilters()}\n            </Grid>\n            <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n                <Button\n                    color=\"primary\"\n                    variant='contained'\n                    onClick={props.handleReset}\n                    sx={{ alignSelf: 'flex-end' }}\n                >\n                    Reset\n                </Button>\n            </FormControl>\n        </>\n\n    )\n}\n\nexport default SearchFilter","import React, { useState } from 'react'\nimport {\n    TableCell,\n    Grid\n} from '@mui/material'\n\nimport CustomTable from '../common/CustomTable';\nexport const CenterListTable = (props) => {\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [page, setPage] = useState(0);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n        // if (!searchResult) {\n        //     try {\n        //         let pageNumber = (Number(newPage)) === 0 ? 0 : (Number(newPage) - 1) + 10\n        //         fetchData(pageNumber)\n        //             .then((resp) => {\n        //                 setCounsellorData(formatCounsellor(resp))\n        //                 // setRootRows(resp)\n        //             })\n        //             .catch(err => {\n        //                 console.log(\"ERROR\", err)\n        //             })\n        //     } catch (error) {\n        //         console.log(\"ERROR\", error)\n        //     }\n        // }\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n    // useEffect(() => {\n    //     // console.log(props.data)\n    //     setData(props.data)\n    // }, [data])\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            key !== 'id' && data.push(<TableCell align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n        }\n        return data\n    }\n\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            key !== 'id' && rows.push(<TableCell className=\"text-style\" component=\"th\" scope=\"row\" align=\"center\" key={index}>{value}</TableCell>)\n        }\n        return rows\n    }\n    function onClick(e) {\n        console.log('onClicked', e);\n    }\n\n    return (\n        <Grid>\n            {props.role == 'Provider' ? (\n                <Grid>\n                    <CustomTable\n                        onClick={props.onClick}\n                        page={page}\n                        handleChangePage={handleChangePage}\n                        rowsPerPage={rowsPerPage}\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\n                        rows={props.data}\n                        CustomHeadCell={CustomHeadCell}\n                        CustomBodyCell={CustomBodyCell}\n                    />\n                </Grid>\n            ) : (\n                <Grid>\n\n                </Grid>\n            )}\n        </Grid>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport {\n    Grid,\n    IconButton, Badge\n} from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport TableCell from '@mui/material/TableCell'\nimport { useNavigate } from 'react-router-dom';\nimport { Breadcrumb } from 'app/components';\nimport Loading from 'app/components/MatxLoading/MatxLoading';\n\nimport {\n    fetchCenters,\n    findCenter,\n    filterCenter\n} from 'app/services/counselorService';\n\nimport useAuth from 'app/hooks/useAuth';\n\nimport SearchFilter from 'app/components/common/SearchFilter';\nimport ClientListTable from 'app/components';\nimport CustomTable from 'app/components/common/CustomTable';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport './Centers.css'\nimport { CenterListTable } from 'app/components/CenterListTable/CenterListTable';\n\n\nconst Centers = () => {\n    const [type, setType] = useState({\n        clinician: \"All\",\n        device: \"All\"\n    })\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false);\n    const [centerInfo, setCenterInfo] = useState()\n    const [searchResult, setSearchResult] = useState(false)\n    const [searchData, setSearchData] = useState({\n        search: '',\n        filter: 'All'\n    })\n    const [page, setPage] = useState(0)\n\n    const [selectValue, setSelectValue] = useState('All')\n    const [filterValue, setFilterValue] = useState([\n        'All', 'CAC', 'Clinic', 'Hospital', 'Private'\n    ])\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState(''); \n    const { user } = useAuth();\n    const goToDetails = (id) => {\n        navigate(`/center-details/${id}`, { id: id })\n    }\n\n    const handleChange = ({ target: { value } }, filterType) => {\n        console.log('handleChange', value)\n        setSearchData({...searchData, filter: value})\n        if(value !== 'All'){\n            setSearchResult(true)\n            filterClient(value, page);\n        }\n        else {\n            setSearchResult(false)\n            fetchClientList(page,user.counsellor.id)\n        }\n        \n    }\n\n    const handleSearch = async ({ target: { value }}) => {\n        // setSearchData(value);\n        if(value && value.length > 2){\n            setSearchResult(true)\n            setSearchData({...searchData, search: value})\n            searchClient(value, page);\n        } else if(value === \"\"){\n            fetchClientList(page,user.counsellor.id);\n            setSearchResult(false)\n        }\n    }\n    const handleReset = () => {\n        \n        setSearchData({search: '',\n        filter: 'All'})\n        fetchClientList(page, user.counsellor.id)\n    }\n\n    const searchClient = (data, pageNumber) => {\n        setLoading(true);\n        findCenter(data, pageNumber, user.counsellor.id)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setCenterInfo(formatCenters(resp.data));\n                // setPageDetails(getMetaData(resp.meta));\n            }\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const filterClient = (data, pageNumber) => {\n        setLoading(true);\n        filterCenter(data, pageNumber,user.counsellor.id)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setCenterInfo(formatCenters(resp.data));\n                // setPageDetails(getMetaData(resp.meta));\n            }\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const fetchClientList = async (page, user) => {\n        setLoading(true)\n        fetchCenters(page, user)\n            .then((resp) => {\n                if(resp?.error?.name === 'UnauthorizedError'){\n                    setOpenModal(true);\n                    setMsg('Your session has expired. You will be logged out.');\n                } \n                if (resp) {\n                    setLoading(false)\n                    let formattedClient = formatCenters(resp.data)\n                    setCenterInfo(formattedClient)\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    function getClients(data) {\n        const clientsArr = data.filter(item => {\n            return item?.attributes?.counsellor?.data && item?.attributes?.counsellor?.data?.id === user?.counsellor?.id\n        })\n        return clientsArr && clientsArr.length\n    }\n\n    function getSessions(data) {\n        const sessionsArr = data.filter(item => {\n            return item?.attributes?.counsellor?.data && item?.attributes?.counsellor?.data?.id === user?.counsellor?.id\n        })\n        return sessionsArr && sessionsArr.length\n    }\n    const formatCenters = (data) => {\n        let response = [];\n        const meta = {\n            id: \"ID\",\n            centerId: \"Center ID\",\n            name: \"Center Name\",\n            centerType: \"Center Type\",\n            state: \"State\",\n            clients: 'Clients #',\n            session: 'Session #'\n        }\n        data.forEach((item) => {\n            let center = item.attributes\n            let clients = item.attributes.clients && getClients(item.attributes.clients.data) || 0\n            let sessions = item.attributes.sessions && getSessions(item.attributes.sessions.data) || 0\n            let user = item?.attributes?.user?.data ? item?.attributes?.user?.data?.attributes : null\n            let state = item?.attributes?.state?.data ? item?.attributes?.state?.data?.attributes : null\n            let center_type = item?.attributes?.center_type?.data ? item?.attributes?.center_type?.data?.attributes : null\n            const obj = {\n                id: item.id,\n                centerId: user?.username,\n                name: center ? center.name : '',\n                centerType: center_type ? center_type.name : '-',\n                state: state ? state.name : '-',\n                clients: clients,\n                session: sessions\n            };\n            response.push(obj)\n        })\n        response['meta'] = meta\n        return response;\n    }\n\n    useEffect(() => {\n        fetchClientList(page, user.counsellor.id)\n    }, []);\n\n    return (\n        <Grid container className=\"client-container\">\n            <Grid className=\"client-breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'All Centers' }]} />\n            </Grid>\n            {\n                loading &&\n                <Loading />\n            }\n            {/* <SearchInput \n                filterValue={filterValue}\n                handleChange={handleChange} \n                fetchData={fetchCenterData} \n                placeholder=\"Search Counsellor\" \n                value={values} \n                handleBlur={handleBlur} \n            /> */}\n            <SearchFilter\n                handleSearch={handleSearch}\n                handleChange={handleChange}\n                filterValue={filterValue}\n                selectValue={searchData.filter}\n                label=\"Center Type\"\n                searchLabel=\"Search Center\"\n                handleReset={handleReset}\n            />\n            {centerInfo &&\n                <CenterListTable\n                    role={user.role.name}\n                    data={centerInfo}\n                    // getCellContent={getCellContent}\n                    onClick={goToDetails}\n                />\n            }\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n            \n        </Grid>\n    )\n}\n\nexport default Centers"],"sourceRoot":""}