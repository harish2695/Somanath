{"version":3,"sources":["../node_modules/@mui/icons-material/Preview.js","app/components/SessionModal/SessionModal.js","app/services/counselorService.js","../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","../node_modules/react-usestateref/dist/index.js","app/components/CustomModal/NotesModal.js","app/components/common/SearchFilter.js","app/utils/center.list.formatter.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","app/views/counsellorView/SearchFilter/ClientSearchFilter.js","app/views/counsellorView/Clients/Clients.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","appendOwnerState","elementType","existingProps","ownerState","isHostComponent","_extends","shouldSpreadAdditionalProps","Slot","react_1","module","initialState","_a","useState","state","setState","ref","useRef","useCallback","setStateAction","current","isFunction","NotesModal","props","clientId","setClientId","useStateRef","notes","setNotes","notesRef","select","setSelect","sessionData","setSessionData","setSessionId","closeModal","handleClose","useEffect","sessionId","multipleSession","sort","a","b","Date","updatedAt","Fragment","fullWidth","maxWidth","noValidate","lg","md","sm","xs","flexDirection","mt","minWidth","htmlFor","autoFocus","onChange","e","target","result","filter","item","attributes","session_id","map","push","formatNotes","label","inputProps","name","index","moment","scheduled_at","format","multiline","rows","readOnly","defaultValue","details","container","added_by","SearchFilter","renderMenuItem","key","genderValue","filterValue","marginBottom","rowSpacing","columnSpacing","searchLabel","handleSearch","placeholder","searchValue","InputProps","startAdornment","multiFilter","entries","i","padding","genderSelectValue","selectValue","handleChange","handleReset","alignSelf","clientMeta","client_id","clinician","gender_bio","gender_identified","license","device","appointment","formatClientsList","response","Array","isArray","forEach","formatClientData","handleSession","res","sessions","length","el","status","clientID","clinician_status","counsellor","device_status","device_id","getMetaData","pagination","formatCenters","formatCenterData","centerId","user","username","email","phoneNumber","phone_number","firstName","first_name","logo","logo_image","lastName","last_name","country","city","postalCode","postal_code","areaCode","area_code","centerType","center_type","verified","is_verified","address","getAddress","street_address1","street_address2","createdAt","address1","address2","usePreviousProps","React","getBadgeUnstyledUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","children","className","components","componentsProps","max","maxProp","showZero","other","_objectWithoutPropertiesLoose","badgeContentProp","badgeContent","invisible","invisibleProp","prevProps","displayValue","Number","useBadge","classes","slots","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","Badge","badgeProps","_jsxs","clsx","_jsx","getBadgeUtilityClass","badgeClasses","BadgeRoot","overridesResolver","styles","verticalAlign","flexShrink","BadgeBadge","capitalize","anchorOrigin","vertical","horizontal","overlap","theme","flexWrap","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","vars","palette","main","contrastText","RADIUS_DOT","right","transformOrigin","bottom","leavingScreen","inProps","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","useThemeProps","anchorOriginProp","overlapProp","colorProp","variantProp","as","ClientSearchFilter","searchClient","filterClient","fetchClientList","searchResult","useAuth","Gender","Ethnicity","setType","ethnicity","gender","queryData","setQueryData","queryRef","filterValueGender","Clients","loading","setLoading","clientInfo","setClientInfo","setSearchResult","modalVisible","setModalVisible","openModal","setOpenModal","msg","setMsg","pageDetails","setPageDetails","error","formattedClient","formatClients","meta","getSessionHours","totalMins","reduce","curr","prev","formatTime","client","center","traumas","trauma_code","join","getTrauma","obj","recordName","sessionCount","sessionHours","view_notes","clientName","center_id","handleNotes","visible","stopPropagation","routeSegments","pageNumber","role","getCellContent","content","viewNotes","fetchData"],"mappings":"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","file":"static/js/22.effbffa0.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');\n\nexports.default = _default;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.\n * @param existingProps Props of the element.\n * @param ownerState\n */\n\nexport default function appendOwnerState(elementType, existingProps = {}, ownerState) {\n  if (isHostComponent(elementType)) {\n    return existingProps;\n  }\n\n  return _extends({}, existingProps, {\n    ownerState: _extends({}, existingProps.ownerState, ownerState)\n  });\n}","import { isHostComponent } from '@mui/base';\n\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\n\nexport default shouldSpreadAdditionalProps;","\"use strict\";\nvar react_1 = require(\"react\");\nvar isFunction = function (setStateAction) {\n    return typeof setStateAction === \"function\";\n};\nvar useStateRef = function (initialState) {\n    var _a = react_1.useState(initialState), state = _a[0], setState = _a[1];\n    var ref = react_1.useRef(state);\n    var dispatch = react_1.useCallback(function (setStateAction) {\n        ref.current = isFunction(setStateAction) ? setStateAction(ref.current) : setStateAction;\n        setState(ref.current);\n    }, []);\n    return [state, dispatch, ref];\n};\nmodule.exports = useStateRef;\n","import React, { useState, useEffect } from 'react'\nimport {\n    Grid, Card, Button,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Box,\n    DialogActions,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n\n    Modal,\n    Typography,\n} from '@mui/material'\nimport { styled, useTheme } from '@mui/system'\nimport moment from 'moment'\nimport useStateRef from 'react-usestateref'\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    // marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}))\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: '100%',\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '15px'\n}\nconst NotesModal = (props) => {\n    const [clientId, setClientId] = useState('')\n    const [notes, setNotes, notesRef] = useStateRef([])\n    const [select, setSelect] = useState('')\n    const [sessionData, setSessionData] = useState([])\n    const [sessionId, setSessionId] = useState('')\n\n    const closeModal = () => {\n        setSelect('')\n        setNotes([])\n        setSessionData([])\n        props.handleClose();\n    }\n    function formatNotes(data) {\n        let notes = []\n        data && data.map((item) => {\n            notes.push(item.attributes)\n        })\n        return notes\n    }\n\n    function handleSession(e) {\n        // setSessionId(data)\n        setSelect(e.target.value)\n        const result = sessionData.filter(item => item.attributes.session_id == e.target.value);\n        if (result) {\n            result[0].attributes.notes.data.sort(function (a, b) {\n                return new Date(b.updatedAt) - new Date(a.updatedAt)\n            })\n            setNotes(formatNotes(result[0].attributes.notes.data))\n        }\n        console.log(notesRef.current)\n        // setNotes(result[0].attributes.notes && )\n    }\n\n    useEffect(() => {\n\n        if (props.data) {\n            setClientId(props.data.clientId)\n            setSessionId(props.data.sessionId)\n            props.multipleSession && props.data.notes && setSessionData(props.data.notes)\n            if (!props.multipleSession) {\n                props.data.notes && props.data.notes.sort(function (a, b) {\n                    return new Date(b.updatedAt) - new Date(a.updatedAt)\n                })\n                setNotes(props.data.notes)\n            }\n        }\n    }, [props])\n\n    const handleMaxWidthChange = (event) => {\n        console.log('fadfs')\n    };\n    return (\n        <React.Fragment>\n\n            <Dialog\n                fullWidth={true}\n                maxWidth=\"sm\"\n                open={props.open}\n                onClose={closeModal}\n            >\n                <DialogTitle>Notes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Client : {clientId}\n                    </DialogContentText>\n                    {props.multipleSession && (\n                        <Box\n                            noValidate\n                            component=\"form\"\n                            lg={12} md={6} sm={12} xs={12}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                //   alignItems: 'flex-start',\n                                //   m: 'auto',\n                                width: '50%',\n                            }}\n                        >\n                            <FormControl sx={{ mt: 2, minWidth: 120 }}>\n                                <InputLabel htmlFor=\"max-width\">Select Session</InputLabel>\n                                <Select\n                                    autoFocus\n                                    value={select}\n                                    onChange={handleSession}\n                                    label=\"Select Session\"\n                                    inputProps={{\n                                        name: 'max-width',\n                                        id: 'max-width',\n                                    }}\n                                >\n                                    {/* <MenuItem value=\"\">None</MenuItem> */}\n                                    {sessionData && sessionData.map((item, index) => {\n                                        return <MenuItem key={index} value={item.attributes.session_id}>{`${item.attributes.session_id} - ${moment(item.attributes.scheduled_at).format('DD MMMM, YYYY')}`}</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    )}\n                    <DialogContentText>\n                        {notesRef.current && notesRef.current.map((item, index) => (\n                            <Grid item lg={12} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\n                                <TextField\n                                    key={`${index}`}\n                                    fullWidth\n                                    multiline\n                                    rows={3}\n                                    inputProps={{ readOnly: true }}\n                                    defaultValue={item.details}\n                                />\n                                <Grid container style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Grid >{item.added_by}</Grid>\n                                    <Grid >{moment(item.updatedAt).format('DD/MM/YYYY hh:mm A')}</Grid>\n\n                                </Grid>\n                            </Grid>\n                        ))}\n                        {!notes && sessionData && <Grid mt={2}>No Record Found</Grid>}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" type=\"submit\" onClick={closeModal}>Close</Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nexport default NotesModal","import React from 'react'\nimport {\n    Grid,\n    Button,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport './common.css'\n\nconst SearchFilter = (props) => {\n    const renderMenuItem = (key) => {\n        if (key == 'Gender') {\n            return props.genderValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            })\n        } else {\n            return props.filterValue.map((item, index) => {\n                return <MenuItem key={index} value={item}>{item}</MenuItem>\n            }\n            )\n        }\n    }\n    const renderFilters = () => {\n        if (props.multiFilter) {\n            return Object.entries(props.type).map(([key, value], i) => {\n                return <Grid item lg={6} md={6} sm={12} xs={12} key={`${i}`}>\n                    <Box>\n                        <FormControl fullWidth>\n                            <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{key}</InputLabel>\n                            <Select\n                                id=\"demo-simple-select\"\n                                value={key == 'Gender' ? props.genderSelectValue : props.selectValue}\n                                label=\"Age\"\n                                onChange={(e) => props.handleChange(e, key)}\n                                placeholder=\"Search Center\"\n                            >\n                                {renderMenuItem(key)}\n                            </Select>\n                        </FormControl>\n                    </Box>\n                </Grid>\n            }\n            )\n        } else {\n            return <Grid item lg={6} md={6} sm={12} xs={12}>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem' }}>{props.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={props.selectValue}\n                            label=\"Age\"\n                            onChange={(e) => props.handleChange(e)}\n                            placeholder=\"Search Center\"\n                        >\n                            {props.filterValue && props.filterValue.map((item, index) => {\n                                return <MenuItem key={index} value={item}>{item}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Grid>\n        }\n    }\n    return (\n        <>\n            <Grid sx={{ marginTop: '0px', marginBottom: '20px' }} container rowSpacing={3} columnSpacing={6}>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {/* <FormControl fullWidth> */}\n                        <TextField\n                            sx={{width: '100%'}}\n                            label={props.searchLabel}\n                            variant=\"outlined\"\n                            // className=\"client-search\"\n                            onChange={props.handleSearch}\n                            \n                            placeholder={props.searchLabel}\n                            type=\"text\"\n                            value={props.searchValue}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: <SearchIcon />,\n                            }}\n                        />\n                    {/* </FormControl> */}\n                </Grid>\n                {renderFilters()}\n            </Grid>\n            <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n                <Button\n                    color=\"primary\"\n                    variant='contained'\n                    onClick={props.handleReset}\n                    sx={{ alignSelf: 'flex-end' }}\n                >\n                    Reset\n                </Button>\n            </FormControl>\n        </>\n\n    )\n}\n\nexport default SearchFilter","import moment from 'moment'\n\nconst meta = {\n    counsellorId: 'Center ID',\n    name: 'State',\n    firstName: 'Name',\n    lastName: 'Phone',\n    traumaCodes: 'Email',\n    clients: 'Clients',\n    sessions: 'Providers',\n    sessionsHours: 'Devices',\n    type: 'Type',\n}\n\nconst deviceMeta = {\n    // id: \"ID\",\n    device_id: 'Device ID',\n    device_type: 'Device Type',\n    device_serial: 'Device Serial',\n    mac_address: 'Mac Address',\n    is_assigned: 'Is Assigned',\n    status: 'Status',\n    owned_by: 'Owned By',\n    edit_action: 'Edit Action',\n    device_action: 'Device Action',\n}\n\n\nconst clientMeta = {\n    client_id: \"Client ID\",\n    clinician: 'Provider',\n    name: \"Record Name\",\n    gender_bio: \"Birth Gender\",\n    gender_identified: \"ID Gender\",\n    license:\"License\",\n    device: \"Device\",\n    appointment:\"Appointment\"\n}\n\nexport function formatClientsList(data) {\n    const response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientData(item))\n        })\n        response['meta'] = clientMeta;\n    } else {\n        response.push(formatClientData(data))\n    }\n    return response\n}\n\nfunction getDeviceMeta(tab) {\n    let obj = {};\n    if(tab == 1){\n        obj = deviceMeta;\n    } else {\n        obj = {\n            mac_address: 'Mac Address',\n            ip_address: 'IP Address',\n            passphrase: 'Passphrase'\n        }\n    }\n    return obj;\n}\n\nexport function formatDevicesList(data, activeTab) {\n    const response = [];\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatDeviceData(item, activeTab))\n        })\n        response['meta'] = getDeviceMeta(activeTab);\n    } else {\n        response.push(formatDeviceData(data, activeTab))\n    }\n    return response\n}\n\nfunction handleSession(item){\n    let res = 'NotScheduled';\n    const sessions = item?.attributes?.sessions?.data;\n    if(sessions?.length){\n        for(let i = 0;i < sessions.length;i++){\n            let el = sessions[i];\n            if(el?.attributes?.status === 'pending' || el?.attributes?.status === 'scheduled'){\n                res = 'Scheduled';\n            }\n        }\n    } else {\n        res = 'NotScheduled';\n    }\n    return res;\n}\n\nfunction formatClientData(item) {\n    const obj = {\n        clientID: (item && item.id) || '',\n        client_id: (item && item.attributes && item.attributes.client_id) || '',\n        clinician_status:\n            item &&\n            item.attributes &&\n            item.attributes.counsellor &&\n            item.attributes?.counsellor?.data\n                ? item.attributes?.counsellor?.data?.attributes?.name\n                : 'Not Assigned',\n        name: (item && item.attributes && item.attributes.name) || '',\n        gender_bio:\n            (item && item.attributes && item.attributes.gender_bio) || '',\n        gender_identified:\n            (item && item.attributes && item.attributes.gender_identified) ||\n            '',\n        license:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data\n                ? 'Issued'\n                : 'Not Issued',\n        device_status:\n            item &&\n            item.attributes &&\n            item.attributes.license &&\n            item.attributes.license.data &&\n            item.attributes.license.data.attributes &&\n            item.attributes.license.data.attributes.device &&\n            item.attributes.license.data.attributes.device.data &&\n            item.attributes.license.data.attributes.device.data.id\n                ? item.attributes.license.data.attributes.device.data.attributes.device_id\n                : 'Not Assigned',\n        appointment: handleSession(item)\n    }\n\n    return obj;\n}\n\n\nfunction getPassPhrase(item) {\n    return (\n        (item &&\n            item.attributes &&\n            item.attributes.licenses &&\n            item.attributes.licenses.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1] &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase  &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data &&\n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes && \n            item.attributes.licenses.data[item.attributes.licenses.data.length-1].attributes.passphrase.data.attributes.name\n        ) ||\n        ''\n    )\n}\n\n\nfunction formatDeviceData(item, activeTab) {\n    let obj = {};\n    if(activeTab == 1) {\n        obj = {\n            // id: item.id,\n            device_id: item.attributes.device_id,\n            device_type: item.attributes.device_type,\n            device_serial: item.attributes.device_serial,\n            mac_address: item.attributes.mac_address,\n            is_assigned: String(item.attributes.is_assigned),\n            status: item.attributes.status,\n            owned_by: item.attributes.owned_by,\n            edit_action: `/devices/edit?id=${item.id}`,\n            device_action: {\n                deviceID: item.id,\n                isAssigned: item.attributes.center && item.attributes.center.data ? true : false,\n                center_name: item && item.attributes && item.attributes.center && item.attributes.center.data && item.attributes.center.data && item.attributes.center.data.attributes && item.attributes.center.data.attributes.name || '',\n                owned_by: item.attributes.owned_by,\n            },\n        }\n    } else {\n        obj = {\n            mac_address: item && item.attributes && item.attributes.mac_address || '',\n            ip_address: item && item.attributes && item.attributes.ip_address || '',\n            passphrase: getPassPhrase(item)\n        }\n    }\n    return obj\n}\n\nconst logoBaseUrl = 'http://localhost:1337'\n\nexport function getMetaData(data) {\n    return data.pagination\n}\n\nexport function formatCenters(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatCenterData(item))\n        })\n    } else {\n        response = formatCenterData(data)\n    }\n\n    return response\n}\n\nfunction formatCenterData(item) {\n    const obj = {\n        id: item.id,\n        centerId:item && item.user && item.user.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        firstName: item.first_name,\n        logo: logoBaseUrl + item.logo_image,\n        lastName: item.last_name,\n        country: item.country,\n        state: item.state,\n        city: item.city,\n        postalCode: item.postal_code,\n        areaCode: item.area_code,\n        centerType: item.center_type,\n        verified: item.is_verified,\n        address: getAddress(item.street_address1, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY'),\n    }\n\n    return obj\n}\n\nfunction getAddress(address1, address2) {\n    let fullAddress = address1 + ' ' + address2\n    return fullAddress\n}\n\nexport function formatClients(data) {\n    let response = []\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            response.push(formatClientUserData(item));\n        })\n    } else {\n        response = formatClientUserData(data);\n    }\n\n    return response\n}\n\nfunction formatClientUserData(item) {\n    const obj = {\n        id: item && item.id || '',\n        name: item && item.name || '',\n        client_id: item && item.client_id || '',\n        gender_bio: item && item.gender_bio || '',\n        gender_identified: item && item.gender_identified || '',\n        centers: item && item.centers && item.centers.length || '0',\n        counselors: item && item.counsellors && item.counsellors.length || '0',\n        sessions: item && item.sessions && item.sessions.length || '0'\n    };\n    return obj;\n}\n\n","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import React, { useState, useEffect } from 'react';\nimport useStateRef from 'react-usestateref';\nimport SearchFilter from 'app/components/common/SearchFilter';\nimport useAuth from 'app/hooks/useAuth';\n\nexport const ClientSearchFilter = ({ searchClient, filterClient, fetchClientList, searchResult, page }) => {\n    const { user } = useAuth();\n    const [type, setType] = useState({\n        Gender: 'All',\n        Ethnicity: 'All'\n    });\n    const [queryData, setQueryData, queryRef] = useStateRef({\n        search: '',\n        ethnicity: 'All',\n        gender: 'All'\n    })\n    const [filterValue, setFilterValue] = useState([\n        'All', 'American Indian', 'Alaska Native', 'Asian', 'Black or African American', 'Hispanic or Latino', 'Native Hawaiian', 'Pacific Islander', 'White', 'Unknown'\n    ])\n    const [filterValueGender, setFilterValueGender] = useState([\n        'All', 'Male', 'Female', 'Other'\n    ])\n\n    const handleChange = ({ target: { value } }, type) => {\n        if (type == 'Gender') {\n            setQueryData({ ...queryData, gender: value })\n        } else if (type == 'Ethnicity') {\n            setQueryData({ ...queryData, ethnicity: value })\n        }\n        if (value !== 'All') {\n            searchResult(true)\n            filterClient(value, page, type);\n        }\n        else {\n            searchResult(false)\n            fetchClientList(page, user.counsellor.id)\n        }\n\n    }\n    const handleReset = () => {\n        setType({\n            Gender: 'All',\n            Ethnicity: 'All'\n        });\n        setQueryData({\n            search: '',\n            ethnicity: 'All',\n            gender: 'All'\n        });\n        fetchClientList(page, user.counsellor.id)\n    }\n\n    const handleSearch = async ({ target: { value } }) => {\n        setQueryData({ ...queryData, search: value })\n        if (value && value.length > 2) {\n            // setQueryData({ ...queryData, search: value })\n            // setSearchData({...searchData, search: value})\n            searchClient(value, type, page);\n            searchResult(true)\n        } else if (value === \"\") {\n            fetchClientList(page, user.counsellor.id);\n            searchResult(false)\n        }\n    }\n\n    return (\n        <SearchFilter\n            handleSearch={handleSearch}\n            handleChange={handleChange}\n            filterValue={filterValue}\n            genderValue={filterValueGender}\n            multiFilter={true}\n            selectValue={queryRef.current.ethnicity}\n            genderSelectValue={queryRef.current.gender}\n            searchValue={queryRef.current.search}\n            label=\"Ethnicity\"\n            searchLabel=\"Search Client\"\n            type={type}\n            handleReset={handleReset}\n        />\n    )\n}","import React, { useState, useEffect } from 'react';\nimport {\n    Grid,\n    IconButton, Badge,\n    Button,\n} from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport { styled, useTheme } from '@mui/system'\nimport { useNavigate } from 'react-router-dom';\nimport { Breadcrumb } from 'app/components';\nimport Loading from 'app/components/MatxLoading/MatxLoading';\nimport { formatTime } from 'app/utils/utils';\n\nimport {\n    fetchClients,\n    searchClients,\n    findClient,\n    filterClients\n} from 'app/services/counselorService';\n\nimport useAuth from 'app/hooks/useAuth';\nimport useStateRef from 'react-usestateref';\nimport { ClientSearchFilter } from '../SearchFilter/ClientSearchFilter';\nimport SearchFilter from 'app/components/common/SearchFilter';\nimport NotesModal from 'app/components/CustomModal/NotesModal';\nimport { ClientListTable } from 'app/components';\nimport SessionModal from 'app/components/SessionModal/SessionModal';\nimport './Clients.css'\nimport { getMetaData } from 'app/utils/center.list.formatter';\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    // marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}))\n\n\nconst Clients = () => {\n    // const [type, setType] = useState({\n    //     clinician: \"All\",\n    //     device: \"All\"\n    // })\n    const navigate = useNavigate();\n    const { user } = useAuth();\n    \n    const [loading, setLoading] = useState(false);\n    const [clientInfo, setClientInfo] = useState()\n    const [searchResult, setSearchResult] = useState(false)\n    const [sessionId, setSessionId] = useState([])\n    const [modalVisible, setModalVisible] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n    const [page, setPage] = useState(0)\n    const [pageDetails, setPageDetails] = useState({})\n\n    const goToDetails = (id) => {\n        navigate(`/client-details/${id}`, { id: id })\n    }\n    const searchClient = (data, type, pageNumber) => {\n        setLoading(true);\n        findClient(data, pageNumber)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else{\n                setClientInfo(formatClients(resp.data));\n                // setPageDetails(getMetaData(resp.meta));\n            }\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const filterClient = (data, pageNumber, type) => {\n        setLoading(true);\n        filterClients(data, pageNumber, user.counsellor.id, type)\n        .then((resp) => {\n            setLoading(false);\n            if(resp?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setClientInfo(formatClients(resp.data));\n                // setPageDetails(getMetaData(resp.meta));\n            }\n        })\n        .catch((err) => {\n            console.log(\"error\",err)\n        })\n    }\n\n    const fetchClientList = async (page) => {\n        let id = user.counsellor.id\n        setLoading(true)\n        fetchClients(page, id)\n            .then((resp) => {\n                if (resp) {\n                    console.log(resp)\n                    setLoading(false)\n                    if(resp?.error?.name === 'UnauthorizedError'){\n                        setOpenModal(true);\n                        setMsg('Your session has expired. You will be logged out.');\n                    } else {\n                        let formattedClient = formatClients(resp.data)\n                        setClientInfo(formattedClient)\n                        setPageDetails(getMetaData(resp.meta))\n                    }\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    const getTrauma = (data) => {\n        let traumaCode\n        // console.log(data)\n        const code = data.map((item) => {\n            return item.attributes.trauma_code\n        })\n        traumaCode = code.join(', ')\n\n        return traumaCode\n    }\n\n    const getSessionHours = (length, data) => {\n        let totalHours\n        let totalMins = 0\n        if (length == 1) {\n            totalMins = data[0].attributes.duration + ' mins'\n            // totalHours = totalMins / 60\n            return totalMins;\n        }\n        totalMins = data && data.reduce((curr, prev) => (curr.attributes.duration + prev.attributes.duration))\n        // totalHours = totalMins / 60\n        // console.log(totalMins)\n        return formatTime(totalMins)\n    }\n\n    const getNotesData = (data) => {\n        let notes = \n        data && data.map((item) => {\n            // item.attributes.notes && \n        })\n    }\n    const formatClients = (data) => {\n        let response = [];\n        const meta = {\n            id: \"ID\",\n            clientId: \"Client ID\",\n            recordName: \"Record Name\",\n            center: \"Center\",\n            // counsellor: \"Counselor\",\n            gender: \"Birth Gender\",\n            // idGender: \"ID Gender\",\n            traumas: \"Trauma\",\n            ethnicity: \"Ethnicity\",\n            sessionCount: \"Sessions\",\n            sessionHours: \"Sessions Hours\",\n            view_notes: \"Notes\"\n\n        }\n        console.log(data)\n        data.forEach((item) => {\n            let client = item.attributes\n            let center = item.attributes.center?.data ? item.attributes.center.data.attributes : null\n            let sessions = item.attributes.sessions.data ? item.attributes.sessions : null\n            let counsellor = item.attributes.counsellor?.data ? item.attributes.counsellor.data.attributes : null\n            let traumas = item.attributes?.traumas ? getTrauma(item.attributes.traumas.data) : ''\n            \n            const obj = {\n                id: item.id,\n                clientId: client.client_id,\n                recordName: client?.name,\n                center: center ? center.name : '',\n                // counsellor: counsellor ? counsellor.name : '',\n                gender: client.gender_bio,\n                // idGender: client.gender_identified,\n                traumas: traumas,\n                ethnicity: client.ethnicity ? client.ethnicity : '',\n                sessionCount: sessions.data.length > 0 ? sessions.data.length : '-',\n                sessionHours: sessions.data.length > 0 ? getSessionHours(sessions.data.length, sessions.data) : '-',\n                view_notes: {\n                    clientId: client.client_id,\n                    clientName: client.name,\n                    sessionId: sessions.data.length > 0 ? sessions.data[0].id : '-',\n                    center_id: center ? center.center_id : '-',\n                    notes: sessions.data.length > 0 ?  sessions.data: ''\n                    // owned_by: item.attributes.owned_by,\n                },\n            };\n            response.push(obj)\n        })\n        response['meta'] = meta\n        return response;\n    }\n\n    const viewNotes = (value) => {\n        // console.log(value)\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={(e) => handleNotes(e,value, true)} //props.handleOpen(value, true) }\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n            </div>\n        );\n    }\n\n    const getCellContent = (key, value) => {\n        let content = null;\n        switch (key) {\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const handleNotes = (e = null, id, visible) => {\n        e && e.stopPropagation()\n        setSessionId(id);\n        setModalVisible(visible);\n    }\n    // function handleClose(id)\n\n    useEffect(() => {\n        // console.log(modalVisible)\n        fetchClientList(page, user.counsellor.id)\n    }, [])\n    return (\n        <>\n        <Grid className=\"client-container\">\n            <Grid className=\"client-breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'All Clients' }]} />\n            </Grid>\n            <ClientSearchFilter \n                filterClient={filterClient}\n                fetchClientList={fetchClientList}\n                searchResult={setSearchResult}\n                searchClient={searchClient}\n                page={page}\n            />\n            {clientInfo &&\n                <ClientListTable\n                    role={user.role.name}\n                    data={clientInfo}\n                    getCellContent={getCellContent}\n                    searchResult={searchResult}\n                    onClick={goToDetails}\n                    fetchData={fetchClientList}\n                    pageDetails={pageDetails}\n                />\n            }\n\n            {\n                loading &&\n                <Loading />\n            }\n        </Grid>\n        <NotesModal\n                open={modalVisible}\n                multipleSession={true}\n                data={sessionId}\n                handleClose={() => {\n                    handleNotes(null,null, false);\n                    //handlePageChange(null, 0);\n                }}\n            />\n        <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </>\n    )\n}\n\nexport default Clients"],"sourceRoot":""}