{"version":3,"sources":["app/constants/data.js","app/components/SearchAutoComplete/SearchAutoComplete.js","app/components/SearchFilter/SearchFilter.js","app/components/AllUsers/AllUsers.jsx","app/views/users/Users.jsx"],"names":["tabsData","admin","id","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","type","label","placeholder","items","value","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","center_id","phone_number","address","disabled","validators","errorMessages","validationRules","length","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","SearchAutoComplete","onChange","options","selectValue","handleSelect","Autocomplete","disablePortal","event","newValue","inputValue","onInputChange","newInputValue","renderInput","params","TextField","fullWidth","SearchFilter","data","searchValue","handleSearch","multipleFilters","filterValue","handleFilter","autoCompleteValue","handleAutoComplete","handleReset","renderContent","el","content","FormControl","autoFocus","variant","InputProps","startAdornment","Box","InputLabel","sx","backgroundColor","padding","Select","map","item","k","MenuItem","val","Grid","marginBottom","container","rowSpacing","columnSpacing","i","lg","md","sm","xs","display","width","Button","color","onClick","alignSelf","AllUsers","props","navigate","useNavigate","renderName","row","role","loading","Paper","overflow","TableContainer","className","Table","size","TableHead","TableRow","TableCell","align","rows","TableBody","rowsPerPage","border","component","scope","TablePagination","rowsPerPageOptions","count","page","onPageChange","handlePageChange","onRowsPerPageChange","handleChangeRowsPerPage","Users","useState","age","setAge","setRows","setLoading","setRowsPerPage","setPage","setCount","searchResult","setSearchResult","searchData","setSearchData","searchFilters","fetchUsers","pageNo","fetchUser","then","resp","users","totalCount","catch","err","console","log","sortUsers","search","filter","findUsers","searchUser","filterUser","useEffect","routeSegments","target","newPage","pageNumber","Number"],"mappings":"iHACA,oEAAO,IAAMA,EACT,CACIC,MAAO,CACH,CACIC,GAAI,EACJC,KAAM,WAEV,CACID,GAAG,EACHC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,aAEV,CACID,GAAI,EACJC,KAAM,YAOdC,OAAQ,CACJ,CACIF,GAAI,EACJC,KAAM,WAEV,CACID,GAAG,EACHC,KAAM,aAEV,CACID,GAAI,EACJC,KAAM,YAOdE,WAAY,CACR,CACIH,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,YAOdG,UAAU,CACN,CACIJ,GAAI,EACJC,KAAM,WAEV,CACID,GAAG,EACHC,KAAM,WAEV,CACID,GAAG,EACHC,KAAM,iBAGdI,OAAQ,CACJ,CACIL,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,aAEV,CACID,GAAI,EACJC,KAAM,iBAGdK,OAAQ,CACJP,MAAO,CACH,CACIC,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,cAGdC,OAAQ,CACJ,CACIF,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,eAIlBM,aAAc,CACV,CACIP,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,UAGdO,mBAAoB,CAChB,CACIR,GAAI,EACJS,KAAM,SACNC,MAAO,sBACPC,YAAa,uBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,eAKvBC,aAAc,CACV,CACId,GAAI,EACJS,KAAM,SACNC,MAAO,cACPC,YAAa,eAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,OACPT,KAAM,OACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,aACNY,MAAO,cAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,aAKvBE,kBAAmB,CACf,CACIf,GAAI,EACJS,KAAM,SACNC,MAAO,kBACPC,YAAa,mBAEjB,CACIX,GAAI,EACJS,KAAM,qBACNC,MAAO,gBACPT,KAAM,kBAGde,cAAe,CACXjB,MAAO,CACHkB,QAAS,CACL,CACIjB,GAAI,EACJS,KAAM,SACNC,MAAO,gBACPC,YAAa,iBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,YACNY,MAAO,aAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,YAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,YAInB,CACIb,GAAI,EACJS,KAAM,SACNC,MAAO,cACPT,KAAM,cACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,OACNY,MAAO,QAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,gBACNY,MAAO,iBAEX,CACIb,GAAI,EACJC,KAAM,iBACNY,MAAO,kBAEX,CACIb,GAAI,EACJC,KAAM,QACNY,MAAO,WAInB,CACIb,GAAI,EACJS,KAAM,qBACNC,MAAO,gBACPT,KAAM,kBAGdiB,UAAW,CACP,CACIlB,GAAI,EACJS,KAAM,SACNC,MAAO,gBACPC,YAAa,iBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,gBAO3BX,OAAQ,CACJiB,IAAK,CACD,CACInB,GAAI,EACJS,KAAM,SACNC,MAAO,gBACPC,YAAa,iBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,YACNY,MAAO,aAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,YAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,YAInB,CACIb,GAAI,EACJS,KAAM,SACNC,MAAO,cACPT,KAAM,cACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,OACNY,MAAO,QAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,gBACNY,MAAO,iBAEX,CACIb,GAAI,EACJC,KAAM,iBACNY,MAAO,kBAEX,CACIb,GAAI,EACJC,KAAM,QACNY,MAAO,YAKvBO,eAAgB,CACZ,CACIpB,GAAI,EACJS,KAAM,SACNC,MAAO,gBACPC,YAAa,iBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,iBAO/BQ,aAAc,CACVC,YAAa,CACTC,SAAU,GACVC,MAAO,GACPC,WAAY,GACZC,KAAM,KACNC,WAAY,GACZC,OAAQ,IAEZC,OAAQ,IAGZC,cAAe,CACXR,YAAa,CACTS,UAAW,GACX9B,KAAM,GACNuB,MAAO,GACPQ,aAAc,GACdC,QAAS,GACTP,KAAM,KACNC,WAAY,GACZC,OAAQ,IAEZC,OAAQ,CACJ,CACI7B,GAAI,YACJS,KAAM,OACNR,KAAM,YACNS,MAAO,YACPwB,UAAU,GAEd,CACIlC,GAAI,OACJS,KAAM,OACNR,KAAM,OACNS,MAAO,OACPwB,UAAU,EACVC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,CACIpC,GAAI,QACJS,KAAM,QACNR,KAAM,QACNS,MAAO,QACPwB,UAAU,EACVC,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,0BAA2B,uBAE/C,CACIpC,GAAI,eACJS,KAAM,OACNR,KAAM,eACNS,MAAO,eACPwB,UAAU,EACVC,WAAY,CAAC,WAAY,oBACzBC,cAAe,CAAC,0BAA2B,qCAE/C,CACIpC,GAAI,UACJS,KAAM,OACNR,KAAM,UACNS,MAAO,UACPwB,UAAU,EACVC,WAAY,CAAC,YACbC,cAAe,CAAC,6BAGxBC,gBAAiB,CACb,SAAY,SAACxB,GACT,OAAoB,IAAjBA,EAAMyB,QAGb,iBAAoB,SAACzB,GACjB,OAAGA,GAA0B,IAAjBA,EAAMyB,UAO9BC,kBAAmB,CACfjB,YAAa,CACTkB,WAAY,GACZC,UAAW,GACXjB,MAAO,GACPkB,MAAO,CACHC,UAAW,GACXX,aAAc,IAElBN,KAAM,KACNC,WAAY,GACZC,OAAQ,IAEZC,OAAQ,CACJ,CACI7B,GAAI,aACJS,KAAM,OACNR,KAAM,aACNS,MAAO,aACPwB,UAAU,EACVC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,CACIpC,GAAI,YACJS,KAAM,OACNR,KAAM,YACNS,MAAO,YACPwB,UAAU,EACVC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,CACIpC,GAAI,QACJS,KAAM,QACNR,KAAM,QACNS,MAAO,QACPwB,UAAU,EACVC,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,0BAA2B,uBAE/C,CACI3B,KAAM,QACNkC,UAAW,CACP3C,GAAI,YACJS,KAAM,OACNR,KAAM,YACNS,MAAO,YACPwB,UAAU,EACVC,WAAY,CAAC,WAAY,cAAe,mBACxCC,cAAe,CACX,yBACA,oBACA,mCAGRJ,aAAc,CACVhC,GAAI,eACJS,KAAM,OACNR,KAAM,eACNS,MAAO,eACPwB,UAAU,EACVC,WAAY,CAAC,WAAY,oBACzBC,cAAe,CAAC,0BAA2B,uCAIvDC,gBAAiB,CACb,SAAY,SAACxB,GACT,OAAoB,IAAjBA,EAAMyB,QAGb,gBAAmB,SAACzB,GAChB,OAAGA,GAA0B,IAAjBA,EAAMyB,QAKtB,YAAe,SAACzB,GACZ,OAAGA,IAAS+B,MAAM/B,IAKtB,iBAAoB,SAACA,GACjB,OAAGA,GAA0B,IAAjBA,EAAMyB,UAO9BO,oBAAqB,CACjB,CACI7C,GAAI,EACJS,KAAM,SACNR,KAAM,SACNS,MAAO,gBACPC,YAAa,iBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,cACPT,KAAM,cACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,SACNY,MAAO,UAEX,CACIb,GAAI,EACJC,KAAM,WACNY,MAAO,YAEX,CACIb,GAAI,EACJC,KAAM,UACNY,MAAO,cAKvBiC,oBAAqB,CACjB,CACI9C,GAAI,EACJS,KAAM,SACNR,KAAM,SACNS,MAAO,qBACPC,YAAa,sBAEjB,CACIX,GAAI,EACJS,KAAM,SACNC,MAAO,SACPT,KAAM,SACNW,MAAO,CACH,CACIZ,GAAI,EACJC,KAAM,MACNY,MAAO,OAEX,CACIb,GAAI,EACJC,KAAM,UACNY,MAAO,WAEX,CACIb,GAAI,EACJC,KAAM,YACNY,MAAO,aAEX,CACIb,GAAI,EACJC,KAAM,cACNY,MAAO,eAEX,CACIb,GAAI,EACJC,KAAM,YACNY,MAAO,aAEX,CACIb,GAAI,EACJC,KAAM,YACNY,MAAO,iBAMdkC,EACb,CACI1C,OAAQ,CACJ,CACIL,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,iBAGdC,OAAQ,CACJ,CACIF,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,WAEV,CACID,GAAI,EACJC,KAAM,mB,0LCtqBP+C,EA5BY,SAAC,GAA0E,IAAxE/C,EAAuE,EAAvEA,KAAMS,EAAiE,EAAjEA,MAAOG,EAA0D,EAA1DA,MAAOoC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAG9E,OACI,cAACC,EAAA,EAAD,CACIC,eAAa,EACbtD,GAAG,iBACHkD,QAASA,EACTjD,KAAMA,EACNY,MAAOsC,EACPF,SAAU,SAACM,EAAOC,GACdJ,EAAaI,IAEjBC,WAAY5C,EACZ6C,cAAe,SAACH,EAAOI,GACnBV,EAASU,IAEbC,YAAa,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,2BACQD,GADR,IAEIE,WAAS,EACTrD,MAAOA,SCsERsD,IAlFM,SAAC,GAA6K,IAA3KC,EAA0K,EAA1KA,KAAMC,EAAoK,EAApKA,YAAaC,EAAuJ,EAAvJA,aAAcC,EAAyI,EAAzIA,gBAAiBC,EAAwH,EAAxHA,YAAaC,EAA2G,EAA3GA,aAAcC,EAA6F,EAA7FA,kBAAmBC,EAA0E,EAA1EA,mBAAoBtB,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcqB,EAAkB,EAAlBA,YAEtKC,EAAgB,SAACC,GACnB,IAAIC,EAAU,KAqDd,MApDe,WAAZD,EAAGlE,KACFmE,EACI,cAACC,EAAA,EAAD,CAAad,WAAS,EAAtB,SACI,cAACD,EAAA,EAAD,CACIgB,WAAS,EACTpE,MAAOiE,EAAGjE,MACVqE,QAAQ,WACR9B,SAAUkB,EACVtD,MAAOqD,EACPjE,KAAM0E,EAAG1E,KACTU,YAAagE,EAAGhE,YAChBF,KAAK,OACLsD,WAAS,EACTiB,WAAY,CACRC,eAAgB,cAAC,IAAD,SAKd,WAAZN,EAAGlE,KACTmE,EACI,cAACM,EAAA,EAAD,UACI,eAACL,EAAA,EAAD,CAAad,WAAS,EAAtB,UACI,cAACoB,EAAA,EAAD,CAAYC,GAAI,CAAEC,gBAAiB,UAAWC,QAAS,WAAvD,SAAoEX,EAAGjE,QACvE,cAAC6E,EAAA,EAAD,CACIvF,GAAG,qBACHa,MAAOuD,EAAkBC,EAAYM,EAAG1E,MAAQoE,EAChD3D,MAAOiE,EAAGjE,MACVT,KAAM0E,EAAG1E,KACTgD,SAAUqB,EALd,SAOKK,EAAG/D,MAAM4E,KAAI,SAACC,EAAMC,GAAP,OACV,cAACC,EAAA,EAAD,CAAkB9E,MAAO4E,EAAK5E,MAA9B,SAAsC4E,EAAKxF,MAA5ByF,aAMjB,uBAAZf,EAAGlE,OACTmE,EACI,cAAC,EAAD,CACI3E,KAAM0E,EAAG1E,KACTS,MAAOiE,EAAGjE,MACVG,MAAO0D,EACPtB,SAAU,SAAC2C,GAAD,OAASpB,EAAmBoB,IACtC1C,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACwC,GAAD,OAASxC,EAAawC,OAKzChB,GAGX,OACI,qCACA,cAACiB,EAAA,EAAD,CAAMT,GAAI,CAAEU,aAAc,QAASC,WAAS,EAACC,WAAY,EAAGC,cAAe,EAA3E,SACKhC,EAAKuB,KAAI,SAACb,EAAIuB,GAAL,OACN,cAACL,EAAA,EAAD,CAAMJ,MAAI,EAASU,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA7C,SACK5B,EAAcC,IADHuB,QAKxB,cAACrB,EAAA,EAAD,CAAaO,GAAI,CAAEU,aAAc,OAAQS,QAAS,OAAQC,MAAO,QAAjE,SACI,cAACC,EAAA,EAAD,CACIC,MAAM,UACN3B,QAAQ,YACR4B,QAASlC,EACTW,GAAI,CAAEwB,UAAW,YAJrB,0B,kOC2CGC,EAjHE,SAACC,GACd,IAAMC,EAAWC,cAcXC,EAAa,SAACC,GAChB,OAAGA,EAAIC,MAA0B,WAAlBD,EAAIC,KAAK1G,KACbyG,EAAIhH,OAAOgH,EAAIhH,OAAOD,KAAK,GAC7BiH,EAAIC,MAA0B,WAAlBD,EAAIC,KAAK1G,KACnByG,EAAI7G,OAAO6G,EAAI7G,OAAOJ,KAAK,GAC7BiH,EAAIC,MAA0B,eAAlBD,EAAIC,KAAK1G,MACnByG,EAAI/G,WAAW+G,EAAI/G,WAAWF,KAE9B,IAGf,OACI,oCAEK6G,EAAMM,SACP,eAACC,EAAA,EAAD,CAAOjC,GAAI,CAAEoB,MAAO,OAAQc,SAAU,UAAtC,UACI,cAACC,EAAA,EAAD,CAAgBC,UAAU,aAA1B,SACI,eAACC,EAAA,EAAD,CAEIC,KAAK,QACL,aAAW,eACXF,UAAU,aAJd,UAMI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,uBAINhB,EAAMiB,MAAQjB,EAAMiB,KAAKzF,OAAS,EACpC,cAAC0F,EAAA,EAAD,WACMlB,EAAMmB,YAAc,GAAKnB,EAAMiB,MAM/BvC,KAAI,SAAC0B,GAAD,OACF,eAACU,EAAA,EAAD,CAEIxC,GAAI,CACA,mCAAoC,CAChC8C,OAAQ,IAGhBvB,QAAS,kBAAMI,EAAS,kBAAD,OAAmBG,EAAIlH,IAAM,CAACA,GAAIkH,EAAIlH,MAPjE,UASI,cAAC6H,EAAA,EAAD,CACIM,UAAU,KACVC,MAAM,MACNN,MAAM,SAHV,SAKKZ,EAAIlH,KAET,cAAC6H,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACKb,EAAWC,KAEhB,cAACW,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACKZ,EAAI3F,WAET,cAACsG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACKZ,EAAI1F,QAET,cAACqG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACKZ,EAAIC,KAAKD,EAAIC,KAAKlH,KAAK,OAzBvBiH,EAAIlH,SAgCrB,mCACM,8DAKd,cAACqI,EAAA,EAAD,CACIC,mBAAoB,GACpBH,UAAU,MAEVI,MAAOzB,EAAMyB,MACbN,YAAanB,EAAMmB,YACnBO,KAAM1B,EAAM0B,KACZC,aAAc3B,EAAM4B,iBACpBC,oBAAqB7B,EAAM8B,wBAC3BpB,UAAU,qB,mCCiEfqB,UAhKD,WACV,IAAM9B,EAAWC,cACjB,EAAsB8B,mBAAS,OAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,mBAAS,IAAhC,mBAAOf,EAAP,KAAYkB,EAAZ,KAEA,EAA8BH,oBAAS,GAAvC,mBAAO1B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOb,EAAP,KAAoBkB,EAApB,KACA,EAAwBL,mBAAS,GAAjC,mBAAON,EAAP,KAAaY,EAAb,KACA,EAAyBN,mBAAS,GAAlC,mBAAOP,EAAP,KAAac,EAAb,KACA,EAAuCP,oBAAS,GAAhD,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAoCT,mBAAS,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAA0CX,oBAAS,kBAf7ChJ,IAAQ,gBAed,mBAAO4J,EAAP,UAOA,SAASC,EAAWC,GAChBV,GAAW,GACXW,YAAUD,GACTE,MAAK,SAACC,GACAA,IACCd,EAAQc,EAAKC,OACbd,GAAW,GACXG,EAASU,EAAKE,gBAIrBC,OAAM,SAAAC,GACHC,QAAQC,IAAI,QAAQF,MAK5B,SAASG,EAAUC,EAAQC,EAAQZ,GAC/BV,GAAW,GACX,IAAIhG,EAAU,CACVqH,SACAC,SACAhC,KAAMoB,GAGVa,YAAUvH,GACL4G,MAAK,SAAAC,GACFd,EAAQc,EAAKC,OACbX,EAASU,EAAKE,YACdf,GAAW,MAEdgB,OAAM,SAAAC,GACHC,QAAQC,IAAI,QAAQF,MAKhC,SAASO,EAAWH,EAAQC,EAAQZ,GAChCU,EAAUC,EAAQC,EAAQZ,GAG9B,SAASe,EAAWH,EAAQD,EAAQX,GAChCU,EAAUC,EAAQC,EAAQZ,GA/C9BgB,qBAAU,WACNjB,EAAW,KACb,IA6GF,OACI,eAAC9D,EAAA,EAAD,CAAME,WAAS,EAACyB,UAAU,iBAA1B,UACI,cAAC3B,EAAA,EAAD,CAAM2B,UAAU,kBAAhB,SACA,cAAC,IAAD,CACIqD,cAAe,CACf,CAAC5K,KAAM,mBAIX,cAACwG,EAAA,EAAD,CAAQ1B,QAAQ,YAAYyC,UAAU,aAAaE,KAAK,QAAQf,QAAS,kBAAKI,EAAS,eAAvF,sBACA,cAAC/C,EAAA,EAAD,CACIC,KAAMyF,EACNxF,YAAasF,EACbrF,aAvDS,SAAC,GAA0B,IAAdtD,EAAa,EAAvBiK,OAAUjK,MAC9B4I,EAAc5I,GACXA,GAASA,EAAMyB,OAAS,GACvB8G,EAAQ,GACRG,GAAgB,GAChBmB,EAAW7J,EAAOkI,EAAK,IACA,IAAjBlI,EAAMyB,SACD,QAARyG,GACCK,EAAQ,GACRG,GAAgB,GAChBoB,EAAW5B,EAAK,GAAI,KAEpBK,EAAQ,GACRG,GAAgB,GAChBI,EAAW,MA0CXvF,iBAAiB,EACjBC,YAAa0E,EACbzE,aA7ES,SAAC,GAAyB,IAAdzD,EAAa,EAAvBiK,OAAUjK,MAC7BmI,EAAOnI,GACM,QAAVA,GACCuI,EAAQ,GACRG,GAAgB,GAChBoB,EAAW9J,EAAO2I,EAAY,IAE3BA,GACCJ,EAAQ,GACRG,GAAgB,GAChBmB,EAAWlB,EAAY,MAAO,KAE9BJ,EAAQ,GACRG,GAAgB,GAChBI,EAAW,KAgEXlF,YAzBQ,WAChBuE,EAAO,OACPS,EAAc,IACdL,EAAQ,GACRG,GAAgB,GAChBI,EAAW,MAsBP,cAAC9D,EAAA,EAAD,CAAM2B,UAAU,YAAhB,SACI,cAAC,EAAD,CACIO,KAAOA,EACPW,iBA7CS,SAACnF,EAAOwH,GAC7B3B,EAAQ2B,GACR,IAAIC,EAA2C,IAA5BC,OAAOF,GAAW,EAAK,GACvCzB,EACCoB,EAAWlB,EAAYT,EAAKiC,GAE5BrB,EAAWqB,IAwCH/C,YAAaA,EACbO,KAAMA,EACNI,wBAtCgB,SAACrF,GAC7B4F,GAAgB5F,EAAMuH,OAAOjK,OAC7BuI,EAAQ,IAqCIb,MAAOA,EACPe,aAAcA,EACdlC,QAASA","file":"static/js/33.2a066e78.chunk.js","sourcesContent":["\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport './SearchAutoComplete.css';\n\nconst SearchAutoComplete = ({ name, label, value, onChange, options, selectValue, handleSelect }) => {\n\n\n    return (\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={options}\n            name={name}\n            value={selectValue}\n            onChange={(event, newValue) => {\n                handleSelect(newValue);\n            }}\n            inputValue={value}\n            onInputChange={(event, newInputValue) => {\n                onChange(newInputValue);\n            }}\n            renderInput={(params) => (\n            <TextField \n                {...params}\n                fullWidth \n                label={label} \n            />\n        )}\n        />\n    );\n}\n\nexport default SearchAutoComplete;","import React from 'react';\nimport {\n    Grid,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button\n} from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchAutoComplete from 'app/components/SearchAutoComplete/SearchAutoComplete';\n\nconst SearchFilter = ({ data, searchValue, handleSearch, multipleFilters, filterValue, handleFilter, autoCompleteValue, handleAutoComplete, options, selectValue, handleSelect, handleReset }) => {\n    \n    const renderContent = (el) => {\n        let content = null;\n        if(el.type === 'search') {\n            content = (\n                <FormControl fullWidth>\n                    <TextField\n                        autoFocus\n                        label={el.label}\n                        variant=\"outlined\"\n                        onChange={handleSearch}\n                        value={searchValue}\n                        name={el.name}\n                        placeholder={el.placeholder}\n                        type=\"text\"\n                        fullWidth\n                        InputProps={{\n                            startAdornment: <SearchIcon />,\n                        }}\n                    />\n                </FormControl>\n            );\n        } else if(el.type === 'filter') {\n            content = (\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel sx={{ backgroundColor: '#fafafa', padding: '0.25rem'}}>{el.label}</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={multipleFilters ? filterValue[el.name] : filterValue}\n                            label={el.label}\n                            name={el.name}\n                            onChange={handleFilter}\n                        >\n                            {el.items.map((item, k) => (\n                                <MenuItem key={k} value={item.value}>{item.name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )\n        } else if(el.type === 'searchAutoComplete') {\n            content = (\n                <SearchAutoComplete\n                    name={el.name}\n                    label={el.label}\n                    value={autoCompleteValue}\n                    onChange={(val) => handleAutoComplete(val)}\n                    options={options}\n                    selectValue={selectValue}\n                    handleSelect={(val) => handleSelect(val)}\n                />\n            );\n        }\n\n        return content;\n    }\n    \n    return (\n        <>\n        <Grid sx={{ marginBottom: '20px'}} container rowSpacing={3} columnSpacing={6}>\n            {data.map((el, i) => (\n                <Grid item key={i} lg={6} md={6} sm={12} xs={12}>\n                    {renderContent(el)}\n                </Grid>\n            ))}\n        </Grid>\n        <FormControl sx={{ marginBottom: '20px', display: 'flex', width: '100%' }}>\n            <Button\n                color=\"primary\"\n                variant='contained'\n                onClick={handleReset}\n                sx={{ alignSelf: 'flex-end'}}\n            >\n                Reset\n            </Button>\n        </FormControl>\n        </>\n    );\n}\n\nexport default SearchFilter;","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './AllUsers.css'\nimport { TablePagination } from '@mui/material'\n\n\nconst AllUsers = (props) => {\n    const navigate = useNavigate()\n    // const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    // const [page, setPage] = React.useState(0)\n\n    // const handleChangePage = (event, newPage) => {\n    //     setPage(newPage)\n    //     props.handlePageChange(Number(newPage)+10)\n    // }\n\n    // const handleChangeRowsPerPage = (event) => {\n    //     setRowsPerPage(+event.target.value)\n    //     setPage(0)\n    // }\n\n    const renderName = (row) => {\n        if(row.role && row.role.type === 'center'){\n            return row.center?row.center.name:\"\"\n        }else if(row.role && row.role.type === 'client'){\n            return row.client?row.client.name:\"\"\n        }else if(row.role && row.role.type === 'counsellor'){\n            return row.counsellor?row.counsellor.name:\"\"\n        }else{\n            return \"\"\n        }\n    }\n    return (\n        <>\n        {\n            !props.loading &&\n            <Paper sx={{ width: '100%', overflow: 'hidden' }} >\n                <TableContainer className=\"main-table\">\n                    <Table\n                        // sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">ID</TableCell>\n                                <TableCell align=\"center\">Name</TableCell>\n                                <TableCell align=\"center\">User ID</TableCell>\n                                <TableCell align=\"center\">Email</TableCell>\n                                <TableCell align=\"center\">Role</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {\n                          props.rows && props.rows.length > 0?\n                        <TableBody>\n                            {(props.rowsPerPage > 0 && props.rows\n                                // ? props.searchResult?props.rows.slice(\n                                //       props.page * props.rowsPerPage,\n                                //       props.page * props.rowsPerPage + props.rowsPerPage\n                                //   ):props.rows\n                                // : props.rows\n                            ).map((row) => (\n                                <TableRow\n                                    key={row.id}\n                                    sx={{\n                                        '&:last-child td, &:last-child th': {\n                                            border: 0,\n                                        },\n                                    }}\n                                    onClick={() => navigate(`/users/details/${row.id}`, {id: row.id})}\n                                >\n                                    <TableCell\n                                        component=\"th\"\n                                        scope=\"row\"\n                                        align=\"center\"\n                                    >\n                                        {row.id}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {renderName(row)}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {row.username}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {row.email}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {row.role?row.role.name:\"\"}\n                                    </TableCell>\n                                    \n                                </TableRow>\n                            ))}\n                        </TableBody>\n                        :\n                        <>\n                              <caption>No records found</caption>\n                        </>\n                        }\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[]}\n                    component=\"div\"\n                    // count={props.searchResult?props.rows.length:props.count}\n                    count={props.count}\n                    rowsPerPage={props.rowsPerPage}\n                    page={props.page}\n                    onPageChange={props.handlePageChange}\n                    onRowsPerPageChange={props.handleChangeRowsPerPage}\n                    className=\"table-page\"\n                />\n            </Paper>\n}\n        </>\n    )\n}\n\nexport default AllUsers\n","import { FormControl, Grid, InputLabel, MenuItem, Select,Button } from '@mui/material'\nimport TextField from '@mui/material/TextField'\nimport { useNavigate } from 'react-router-dom';\nimport SearchIcon from '@mui/icons-material/Search';\nimport React, { useState, useEffect } from 'react';\nimport './Users.css'\nimport { Box } from '@mui/system'\nimport AllUsers from 'app/components/AllUsers/AllUsers'\nimport { \n    fetchUser, \n    getCount, \n    findUsers \n} from 'app/services/userService';\nimport { tabsData } from 'app/constants/data';\nimport SearchFilter from 'app/components/SearchFilter/SearchFilter';\nimport { Breadcrumb } from 'app/components';\n\nconst setFilters = () => {\n    let arr = [];\n    arr = tabsData['usersListing'];\n    return arr;\n}\n\nconst Users = () => {\n    const navigate = useNavigate();\n    const [age, setAge] = useState('All')\n    const [rows,setRows] = useState([])\n    // const [rootRows,setRootRows] = React.useState([])\n    const [loading, setLoading] = useState(false)\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [page, setPage] = useState(0);\n    const [count,setCount] = useState(0);\n    const [searchResult,setSearchResult] = useState(false);\n    const [searchData, setSearchData] = useState('');\n    const [searchFilters, setSearchFilters] = useState(() => setFilters());\n\n    useEffect(() => {\n        fetchUsers(0);\n    },[]);\n\n\n    function fetchUsers(pageNo){\n        setLoading(true)\n        fetchUser(pageNo)\n        .then((resp) => {\n            if(resp){\n                setRows(resp.users);\n                setLoading(false);\n                setCount(resp.totalCount);\n                // setRootRows(resp)\n            }\n        })\n        .catch(err => {\n            console.log(\"ERROR\",err)\n        })\n    }\n\n\n    function sortUsers(search, filter, pageNo){\n        setLoading(true);\n        let options = {\n            search,\n            filter,\n            page: pageNo\n        };\n\n        findUsers(options)\n            .then(resp => {\n                setRows(resp.users);\n                setCount(resp.totalCount);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(\"ERROR\",err)\n            })\n    }\n\n\n    function searchUser(search, filter, pageNo) {\n        sortUsers(search, filter, pageNo);\n    }\n\n    function filterUser(filter, search, pageNo) {\n        sortUsers(search, filter, pageNo);\n    }\n\n    const handleFilter = ({target: { value }}) => {\n        setAge(value);\n        if(value !== 'All'){\n            setPage(0);\n            setSearchResult(true);\n            filterUser(value, searchData, 0);\n        }else {\n            if(searchData){\n                setPage(0);\n                setSearchResult(true);\n                searchUser(searchData, 'All', 0);\n            } else {\n                setPage(0);\n                setSearchResult(false);\n                fetchUsers(0);\n            }\n        }\n    }\n\n    const handleSearch = ({ target: { value }}) => {\n        setSearchData(value);\n        if(value && value.length > 2){\n            setPage(0);\n            setSearchResult(true);\n            searchUser(value, age, 0);\n        } else if(value.length === 0){\n            if(age !== 'All'){\n                setPage(0);\n                setSearchResult(true);\n                filterUser(age, '', 0);\n            } else {\n                setPage(0);\n                setSearchResult(false);\n                fetchUsers(0);\n            }\n        }\n    }\n    \n    const handlePageChange = (event, newPage) => {\n        setPage(newPage);\n        let pageNumber = ((Number(newPage) + 1) - 1) * 10;\n        if(searchResult) {\n            searchUser(searchData, age, pageNumber);\n        } else {\n            fetchUsers(pageNumber);\n        }\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    }\n    \n    const handleReset = () => {\n        setAge('All');\n        setSearchData('');\n        setPage(0);\n        setSearchResult(false);\n        fetchUsers(0);\n    }\n\n    return (\n        <Grid container className=\"user-container\">\n            <Grid className='user-breadcrumb'>\n            <Breadcrumb \n                routeSegments={[\n                {name: \"Users List\"}\n                ]} \n            />\n            </Grid>\n            <Button variant=\"contained\" className=\"add-button\" size='small' onClick={() =>navigate('/users/add')}>Add user</Button>\n            <SearchFilter\n                data={searchFilters}\n                searchValue={searchData}\n                handleSearch={handleSearch}\n                multipleFilters={false}\n                filterValue={age}\n                handleFilter={handleFilter}\n                handleReset={handleReset}\n            />\n            <Grid className='user-list'>\n                <AllUsers \n                    rows= {rows} \n                    handlePageChange={handlePageChange}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\n                    count={count}\n                    searchResult={searchResult}\n                    loading={loading}\n                />\n            </Grid>\n            \n        </Grid>\n    )\n}\n\nexport default Users\n"],"sourceRoot":""}