{"version":3,"sources":["app/components/SessionModal/SessionModal.js","app/services/counselorService.js","app/components/UsersCustomTable/UsersCustomTable.jsx","app/constants/data.js","app/utils/data.formater.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","app/views/CenterView/Clinicians/CliniciansDetails.jsx"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","styled","Button","display","color","marginTop","backgroundColor","SessionModal","open","onConfirmDialogClose","text","navigate","onYesClick","useNavigate","handleLogout","localStorage","removeItem","keepMounted","onClose","sx","id","variant","component","justifyContent","alignItems","gap","onClick","fetchClients","page","param","url","makeRequest","then","resp","json","fetchCenters","fetchCinicians","catch","err","fetchSessions","filterSessions","data","params","type","console","log","findSession","updateSessionStatus","findClient","searchClinicians","fetchClinicianDetails","filterClients","findCenter","filterCenter","findCounsellors","options","searchData","search","centerName","_status","UsersCustomTable","props","user","useAuth","CustomHeadCell","meta","entries","Object","index","key","value","push","align","className","showDisableBtn","role","e","stopPropagation","disabled","handleEnable","center_id","provider_id","handleDisable","getCellContent","row","content","handleReturn","handleExpire","isAssigned","marginLeft","center_name","owned_by","handleOpen","deviceID","showBtn","flexDirection","badgeContent","notes","length","handleOpenNewNotes","viewNotes","assignClinician","showClinicianBtn","issueDevices","license","showDeviceBtn","issueLisence","showIssueBtn","status","scheduledAt","marginRight","handleAcceptModal","fontSize","handleRejectModal","scheduleAppointment","scheduleSession","showScheduleBtn","CustomBodyCell","rows","scope","overflow","minWidth","size","rowsPerPage","slice","map","i","view","deviceId","centerId","clientID","counsellor_user_id","clinicId","rowsPerPageOptions","count","onPageChange","handleChangePage","onRowsPerPageChange","handleChangeRowsPerPage","pageDetails","total","handlePageChange","tabsData","admin","name","center","counsellor","clinician","client","device","deviceDetail","deviceUsageFilters","label","placeholder","items","usersListing","counsellorListing","deviceListing","managed","unmanaged","bmc","centerOrClient","adminProfile","profileInfo","username","email","created_at","logo","logo_image","domain","fields","centerProfile","phone_number","address","validators","errorMessages","validationRules","counsellorProfile","first_name","last_name","phone","area_code","isNaN","centerSearchFilters","appointmentsListing","tabsCounselorData","formatCenters","response","Array","isArray","forEach","item","formatData","phoneNumber","state","centerType","dateCreated","formatCounsellor","obj","toString","createdAt","moment","format","counsellorId","formatClient","client_id","age","gender_bio","gender_id","gender_identified","ethnicity","clientId","formatSession","counsellor_name","caseId","sessionId","duration","case_id","session_id","scheduled_at","formatTime","formatDetails","icon","toLowerCase","UserID","getName","verified","confirmed","date_created","center_type","fullName","profile","Context","React","TabContext","children","idPrefix","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","TabList","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","overridesResolver","styles","root","padding","theme","spacing","TabPanel","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","Container","margin","breakpoints","down","marginBottom","CliniciansDetails","useState","loading","setLoading","setValue","clinicianData","setClinicianData","tab","anchorEl","setAnchorEl","Boolean","clientData","setClientData","setPage","appointmentPage","setAppointmentPage","appointment","values","setValues","searchedData","setSearchedData","appointmentData","setAppointmentData","searchResult","setSearchResult","openModal","setOpenModal","msg","setMsg","window","location","href","split","pop","handleClick","event","currentTarget","handleClose","newPage","handleAppointmentPageChange","handleEdit","handleBlur","prop","target","filter","includes","Client","Appointment","useEffect","res","error","clients","sessions","routeSegments","path","borderBottom","borderColor","onChange","newValue","title","subtitle","action","userRole","navigateTo","borderTop","paddingTop","paddingBottom","container","xs","traumas","trauma_code","join"],"mappings":"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","file":"static/js/25.4fd6768a.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { \n    Modal, \n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #fff',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst CancelButton = styled(Button)(() => ({\n    display: 'block',\n    color: '#fff',\n    marginTop: '20px',\n    width: '86px',\n    backgroundColor: '#e15260',\n    '&:hover': {\n        backgroundColor: '#cc2333',\n        color: '#fff'\n    }\n}));\n\nconst SessionModal = ({\n    open,\n    onConfirmDialogClose,\n    text,\n    onYesClick\n}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        onConfirmDialogClose();\n        localStorage.removeItem('accessToken');\n        navigate('/session/signin');\n    }\n\n    return (\n        <div>\n            <Modal\n                keepMounted\n                open={open}\n                onClose={() => handleLogout()}\n                aria-labelledby=\"keep-mounted-modal-title\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography\n                        id=\"keep-mounted-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{color:\"#333\" }}\n                    >\n                        {text}\n                    </Typography>\n                    {/* <Box sx={{\n                        display:\"table\",\n                        marginLeft:'auto',\n                        marginRight:\"0px\"\n                    }}> */}\n                    {/* <Button onClick={handleClose} variant=\"contained\" color=\"error\">Cancel</Button> */}\n                    {/* <Button onClick={handleEdit} variant=\"contained\" sx={{ ml: 2 }}>Yes</Button> */}\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent:'flex-end',\n                            alignItems: 'center',\n                            gap: '1rem',\n                        }}\n                    >\n                        {/* <CancelButton onClick={onConfirmDialogClose}>\n                            Cancel\n                        </CancelButton> */}\n                        <Box\n                            position=\"relative\"\n                            sx={{ display: 'block', marginTop: '20px' }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => handleLogout()}\n                            >\n                                Ok\n                            </Button>\n                        </Box>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    )\n}\n\nexport default SessionModal;","import { makeRequest } from './authenticationService';\n\nexport const fetchClients = (page, param) => {\n    let url = `/api/clients?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\nexport const fetchCenters = (page, param) => {\n    let url = `/api/centers?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const searchClients = (data, page) => {\n    let url = `/api/clients?search=${data.search}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchCinicians = (page) => {\n    let url = `/api/counsellors?pagination[page]=${page}`;\n    \n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const fetchSessions = (page, param) => {\n    let url = `/api/sessions?pagination[page]=${page}&counsellor=${param}`;\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n}\n\nexport const filterSessions = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/sessions?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findSession = (data, page) => {\n    let url = `/api/sessions?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\n// export const findSessions = (options) => {\n//     let searchData = options && options.search || '';\n//     let page = options && options.page || 1;\n\n//     let url = `/api/devices?search=${searchData}&tab=${tab}&pagination[page]=${page}`;\n\n//     if(filterData) {\n//         for(const [key, value] of Object.entries(filterData)) {\n//             url += `&filter[${key}]=${value}`;\n//         }\n//     }\n\n//     if(centerName){\n//         url += `&centerName=${centerName}`;\n//     }\n\n//     return makeRequest('GET', url)\n//         .then((resp) =>{\n//             return resp;\n//         })\n//         .catch((err)=>{\n//             return err;\n//         })\n// }\n\nexport const updateSessionStatus = (id,data) => {\n    let url = `/api/sessions/${id}`\n    \n    return makeRequest('PUT', url, data)\n        .then((resp) => {\n            return resp;\n        })\n        .then((json) => {\n            return json;\n        }); \n    }\n\nexport const findClient = (data, page) => {\n    let url = `/api/clients?find=${data}`\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const searchClinicians = (data, page) => {\n    let url = `/api/counsellors?pagination[page]=${page}&search=${data}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err\n        })\n}\n\nexport const fetchClinicianDetails = (id) => {\n    let url = `/api/counsellors/${id}`\n\n    return makeRequest('GET', url)\n        .then((resp) => {\n            return resp\n        })\n        .catch((err) => {\n            return err;\n        })\n}\nexport const filterClients = (data, page, params, type) => {\n    console.log(type)\n    let url = `/api/clients?filter=${data}&counsellor=${params}&filterType=${type}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCenter = (data, page,params) => {\n    let url = `/api/centers?search=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const filterCenter = (data, page, params) => {\n    let url = `/api/centers?filter=${data}&counsellor=${params}`\n    console.log(data)\n    return makeRequest('GET',url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n\nexport const findCounsellors = (options) => {\n    let searchData = options && options.search || '';\n    let page = options && options.page || 1;\n    let centerName = options && options.centerName;\n\n    let url = `/api/counsellors?search=${searchData}&pagination[page]=${page}`;\n\n    if(centerName){\n        url += `&centerName=${centerName}`;\n    }\n\n    return makeRequest('GET', url)\n        .then((resp) =>{\n            return resp;\n        })\n        .catch((err)=>{\n            return err;\n        })\n}\n","import * as React from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { useNavigate } from 'react-router-dom'\nimport './UsersCustomTable.css'\nimport { TablePagination, IconButton, Badge } from '@mui/material'\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport AddIcon from '@mui/icons-material/Add';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport useAuth from 'app/hooks/useAuth';\nimport Button from '@mui/material/Button'\n\nconst _status = {\n    'new': 'New',\n    'inProcess': 'In Process',\n    'successful': 'Successful',\n    'unsuccessful': 'Unsuccessful',\n    'pending': 'Pending',\n    'scheduled': 'Scheduled',\n    'rescheduled': 'Rescheduled',\n    'cancelled': 'Cancelled',\n    'completed': 'Completed'\n}\n\nconst UsersCustomTable = (props) => {\n    const navigate = useNavigate()\n    const { user } = useAuth();\n\n    const CustomHeadCell = ({ meta }) => {\n        const data = [];\n        if(meta){\n        let entries = Object.entries(meta)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'deviceId' && key !== 'counsellor_user_id'){\n                data.push(<TableCell width={key === 'scheduledAt' ? 140 : 60} variant=\"head\" align=\"center\" className=\"text-style\" key={index}>{value}</TableCell>)\n            }\n            \n        }\n    }\n        return data\n    }\n\n    const showBtn = (value) => {\n        if(value.isAssigned){\n            return <div style={{marginLeft: '1rem'}}>{value.center_name}</div>;\n        } else {\n            if (user && user.role && user.role.type === 'admin') {\n                if (value.owned_by === 'bmc') {\n                    return (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => props.handleOpen(value.deviceID, true)}\n                        >\n                            Assign\n                        </Button>\n                    );\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const showClinicianBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.assignClinician(row)\n                            }}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n\n    const showDeviceBtn = (value,row) => {\n        if(value !== 'Not Assigned') {\n            return <div>{value}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Assigned'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                props.issueDevices(row)\n                            }}\n                            disabled={row.license === \"Not Issued\"}\n                        >\n                        Assign\n                    </Button>\n                );\n            }\n        }\n    }\n    const showIssueBtn = (value,row) => {\n        if(value === 'Issued') {\n            return <div>{'Issued'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Issued'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n                return (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                            e.stopPropagation()\n                            props.issueLisence(row)\n                        }}\n                    >\n                        Issue\n                    </Button>\n                )\n            }\n        }\n    }\n\n    const showScheduleBtn = (value,row) => {\n        if(value === 'Scheduled') {\n            return <div>{'Scheduled'}</div>\n        } else {\n            if(user && user.role && user.role.type === 'admin') {\n                return <div>{'Not Scheduled'}</div>\n            } else if (user && user.role && user.role.type === 'center') {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation()\n                    props.scheduleSession(row)\n                }}\n            >\n                Schedule\n            </Button>\n        )\n            }\n            }\n    }\n\n    const viewNotes = (value) => {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                    startIcon={<VisibilityIcon />}\n                >\n                    Notes\n                </Button> */}\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpen(value, true)}\n                ><Badge badgeContent={value.notes ? value.notes.length : 0} color=\"secondary\">\n                    <PreviewIcon/></Badge>\n                </IconButton>\n                <IconButton\n                    aria-label=\"view\"\n                    color=\"primary\"\n                    onClick={() => props.handleOpenNewNotes(value, true)}\n                >\n                   <AddIcon />\n                </IconButton>\n            </div>\n        );\n    }\n\n    const scheduleAppointment = (value) => {\n        if(value.status == 'scheduled'){\n            return <div style={{marginLeft: '1rem'}}>{value.scheduledAt}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n                    // onClick={() => props.handleOpen(value, true)}\n                    \n        } else if(value.status == 'pending') {\n            return (\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    style={{marginRight:5}}\n                    onClick={() => props.handleAcceptModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Accept</div>\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => props.handleRejectModal(value, true)}\n                    // startIcon={<VisibilityIcon />}\n                >\n                    <div style={{fontSize:'.8rem'}}>Reject</div>\n                </Button>\n                </div>\n            )\n        } else if(value.status == 'cancelled') {\n            return <div style={{marginLeft: '1rem'}}>{`${value.scheduledAt} - Cancelled`}</div>\n        }\n        else {\n            return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        }\n        // if(value !== 'pending'){\n        //     return <div style={{marginLeft: '1rem'}}>{value}<IconButton aria-label=\"view\" color=\"primary\">{user.role.type === 'counsellor' && <VideocamIcon />}</IconButton></div>\n        //             // onClick={() => props.handleOpen(value, true)}\n                    \n        // } else {\n        //     return (\n        //         <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"success\"\n        //             style={{marginRight:5}}\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Accept</div>\n        //         </Button>\n        //         <Button\n        //             variant=\"contained\"\n        //             color=\"error\"\n        //             // onClick={() => props.handleOpen(value, true)}\n        //             // startIcon={<VisibilityIcon />}\n        //         >\n        //             <div style={{fontSize:'.8rem'}}>Reject</div>\n        //         </Button>\n        //         </div>\n        //     )\n        // }\n    }\n\n    const showDisableBtn = (value, role) => {\n        let content = null;\n        content = (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    if(value.disabled){\n                        props.handleEnable(role === 'center' ? value.center_id : value.provider_id);\n                    } else {\n                        props.handleDisable(role === 'center' ? value.center_id : value.provider_id);\n                    }\n                }}\n            >\n                {value.disabled ? 'Enable' : 'Disable'} \n            </Button>\n        );\n    \n        return content;\n    }\n\n    const getCellContent = (key, value,row) => {\n        let content = null;\n        switch (key) {\n            case 'edit_action':\n                content = (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate(value)}\n                    >\n                        Edit\n                    </Button>\n                );\n                break;\n            case 'return':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleReturn(row)\n                    }}\n                    disabled={!value}\n                >\n                    Return\n                </Button>\n            );\n            break;\n            case 'expire':\n            content = (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        props.handleExpire(row);\n                    }}\n                    disabled={!value}\n                >\n                    Expire\n                </Button>\n            );\n            break;\n            case 'device_action':\n                content = showBtn(value);\n                break;\n            case 'view_notes':\n                content = viewNotes(value);\n                break;\n            case 'clinician_status':\n                content = showClinicianBtn(value,row);\n                break;\n            case 'device_status':\n                content = showDeviceBtn(value,row);\n                break;\n            case 'license':\n                content = showIssueBtn(value,row);\n                break;\n            case 'scheduledAt':\n                content = scheduleAppointment(value)\n                break;\n            case 'appointment':\n                content = showScheduleBtn(value,row)\n                break;\n            case 'status': \n                content = _status[value] || value;\n                break;\n            case 'disable_center':\n                content = showDisableBtn(value, 'center');\n                break;\n            case 'disable_provider': \n                content = showDisableBtn(value, 'provider');\n                break;\n            default:\n                content = value;\n                break;\n        }\n\n        return content;\n    }\n\n    const CustomBodyCell = ({ row }) => {\n        const rows = [];\n        let entries = Object.entries(row)\n        for (const [index, [key, value]] of Object.entries(entries)) {\n            if(key !== 'centerId' && key !== 'clientID' && key !== 'clinicId' && key !== 'deviceId' && key !== 'counsellor_user_id'){\n            rows.push(\n                <TableCell \n                    className=\"text-style\" \n                    component=\"th\" \n                    scope=\"row\" \n                    align=\"center\" \n                    key={index}\n                >\n                    {getCellContent(key, value,row)}\n                </TableCell>\n            )\n            }\n\n        }\n        return rows\n    }\n    return (\n        <>\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                <TableContainer className=\"main-table\">\n                    <Table\n                        sx={{ minWidth: 650 }}\n                        size=\"small\"\n                        aria-label=\"simple table\"\n                        className=\"user-table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <CustomHeadCell meta={props.rows.meta} />\n                            </TableRow>\n                        </TableHead>\n                        {props.rows && props.rows.length > 0 ? (\n                            <TableBody>\n                                {(props.rowsPerPage > 0\n                                    ? props.rows.slice(\n                                          props.page * props.rowsPerPage,\n                                          props.page * props.rowsPerPage +\n                                              props.rowsPerPage\n                                      )\n                                    : props.rows\n                                ).map((row,i) => {\n                                    return (\n                                        <TableRow\n                                            key={i}\n                                            sx={{\n                                                '&:last-child td, &:last-child th':\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                            onClick={() => {\n                                                props.onClick &&\n                                                    props.onClick(\n                                                        props.view === 'device'\n                                                        ? row.deviceId\n                                                        : props.view === 'center'\n                                                            ? row.centerId\n                                                            : props.view ===\n                                                              'client'\n                                                            ? row.clientID\n                                                            : props.view ===\n                                                              'counselor'\n                                                            ? row.clientID\n                                                            : props.view === \n                                                              'counsellor'\n                                                            ? row.counsellor_user_id \n                                                            : props.view === 'clinician'?row.clinicId:row.id\n                                                    )\n                                            }}\n                                            // onClick={() => navigate(`/${props.view}/details/${row.id}`, {id: row.id})}\n                                        >\n                                            <CustomBodyCell row={row} />\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        ) : (\n                            <>\n                                {/* <TableRow className='no-records'> */}\n                                <caption>No records found</caption>\n                                {/* </TableRow> */}\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n                {props.view && (props.view === 'center' ||\n                    props.view === 'device' ||\n                    props.view === 'client' ||\n                    props.view === 'counsellor' ||\n                    props.view === 'clinician') ? (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.pageDetails.total || 0}\n                        rowsPerPage={10}\n                        page={props.pageDetails.page - 1 || 0}\n                        onPageChange={props.handlePageChange}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                ) : (\n                    <TablePagination\n                        rowsPerPageOptions={[]}\n                        component=\"div\"\n                        count={props.rows.length}\n                        rowsPerPage={props.rowsPerPage || 10}\n                        page={props.page || 0}\n                        onPageChange={props.handleChangePage}\n                        onRowsPerPageChange={props.handleChangeRowsPerPage}\n                        className=\"table-page\"\n                    />\n                )}\n            </Paper>\n        </>\n    )\n}\n\nexport default UsersCustomTable;","\nexport const tabsData = \n    {\n        admin: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Centers\"\n            },\n            {\n                id: 3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:3,\n                name: \"Providers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        counsellor: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Centers\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            // {\n            //     id: 5,\n            //     name: \"Appointments\"\n            // }\n        ],\n        clinician:[\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id:2,\n                name: \"Clients\"\n            },\n            {\n                id:3,\n                name: \"Appointments\"\n            }\n        ],\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 2,\n                name: \"Providers\"\n            },\n            {\n                id: 3,\n                name: \"Appointments\"\n            }\n        ],\n        device: {\n            admin: [ \n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ],\n            center: [\n                {\n                    id: 1,\n                    name: 'Managed'\n                },\n                {\n                    id: 2,\n                    name: 'Unmanaged'\n                }\n            ]\n        },\n        deviceDetail: [\n            {\n                id: 1,\n                name: 'Details'\n            },\n            {\n                id: 2,\n                name: 'Usage'\n            }\n        ],\n        deviceUsageFilters: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Device Usage',\n                placeholder: 'Search Device Usage'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Active',\n                        value: 'Active'\n                    },\n                    {\n                        id: 3,\n                        name: 'Inactive',\n                        value: 'Inactive'\n                    }\n                ]\n            }\n        ],\n        usersListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search User',\n                placeholder: 'Search User'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Role',\n                name: 'role',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Center',\n                        value: 'Center'\n                    },\n                    {\n                        id: 3,\n                        name: 'Counsellor',\n                        value: 'Counsellor'\n                    },\n                    {\n                        id: 4,\n                        name: 'Client',\n                        value: 'Client'\n                    }\n                ]\n            },\n        ],\n        counsellorListing: [\n            {\n                id: 1,\n                type: 'search',\n                label: 'Search Provider',\n                placeholder: 'Search Provider'\n            },\n            {\n                id: 2,\n                type: 'searchAutoComplete',\n                label: 'Search Center',\n                name: 'Search Center'\n            }\n        ],\n        deviceListing: {\n            admin: {\n                managed: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }, \n                    {\n                        id: 4,\n                        type: 'searchAutoComplete',\n                        label: 'Search Center',\n                        name: 'Search Center'\n                    }\n                ],\n                unmanaged: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n                \n            },\n            center: {\n                bmc: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'\n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Available',\n                                value: 'Available'\n                            },\n                            {\n                                id: 3,\n                                name: 'Assigned',\n                                value: 'Assigned'\n                            },\n                            {\n                                id: 4,\n                                name: 'Repair',\n                                value: 'Repair'\n                            }\n                        ]\n                    },\n                    {\n                        id: 3,\n                        type: 'filter',\n                        label: 'Device Type',\n                        name: 'device_type',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'iPad',\n                                value: 'iPad'\n                            },\n                            {\n                                id: 3,\n                                name: 'iPhone',\n                                value: 'iPhone'\n                            },\n                            {\n                                id: 4,\n                                name: 'Android Phone',\n                                value: 'Android Phone'\n                            },\n                            {\n                                id: 5,\n                                name: 'Android Tablet',\n                                value: 'Android Tablet'\n                            },\n                            {\n                                id: 6,\n                                name: 'Other',\n                                value: 'Other'\n                            }\n                        ]\n                    }\n                ],\n                centerOrClient: [\n                    {\n                        id: 1,\n                        type: 'search',\n                        label: 'Search Device',\n                        placeholder: 'Search Device'  \n                    },\n                    {\n                        id: 2,\n                        type: 'filter',\n                        label: 'Status',\n                        name: 'status',\n                        items: [\n                            {\n                                id: 1,\n                                name: 'All',\n                                value: 'All'\n                            },\n                            {\n                                id: 2,\n                                name: 'Active',\n                                value: 'active'\n                            },\n                            {\n                                id: 3,\n                                name: 'Inactive',\n                                value: 'inactive'\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        adminProfile: {\n            profileInfo: {\n                username: '',\n                email: '',\n                created_at: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: []\n\n        },\n        centerProfile: {\n            profileInfo: {\n                center_id: '',\n                name: '',\n                email: '',\n                phone_number: '',\n                address: '',\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'center_id',\n                    type: 'text',\n                    name: 'center_id',\n                    label: 'Center ID',\n                    disabled: true\n                },\n                {\n                    id: 'name',\n                    type: 'text',\n                    name: 'name',\n                    label: 'Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    id: 'phone_number',\n                    type: 'text',\n                    name: 'phone_number',\n                    label: 'Phone Number',\n                    disabled: false,\n                    validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                    errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                },\n                {\n                    id: 'address',\n                    type: 'text',\n                    name: 'address',\n                    label: 'Address',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        counsellorProfile: {\n            profileInfo: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                phone: {\n                    area_code: '',\n                    phone_number: ''\n                },\n                logo: null,\n                logo_image: '',\n                domain: ''\n            },\n            fields: [\n                {\n                    id: 'first_name',\n                    type: 'text',\n                    name: 'first_name',\n                    label: 'First Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'last_name',\n                    type: 'text',\n                    name: 'last_name',\n                    label: 'Last Name',\n                    disabled: false,\n                    validators: ['REQUIRED'],\n                    errorMessages: ['This field is required!']\n                },\n                {\n                    id: 'email',\n                    type: 'email',\n                    name: 'email',\n                    label: 'Email',\n                    disabled: false,\n                    validators: ['REQUIRED', 'isEmail'],\n                    errorMessages: ['This field is required!', 'email is not valid']\n                },\n                {\n                    type: 'phone',\n                    area_code: {\n                        id: 'area_code',\n                        type: 'text',\n                        name: 'area_code',\n                        label: 'Area Code',\n                        disabled: false,\n                        validators: ['REQUIRED', 'VALID_INPUT', 'MAX_CODE_LENGTH'],\n                        errorMessages: [\n                            'This field is required',\n                            'Invalid area code',\n                            'Area code should have 3 digits'\n                        ]\n                    },\n                    phone_number: {\n                        id: 'phone_number',\n                        type: 'text',\n                        name: 'phone_number',\n                        label: 'Phone Number',\n                        disabled: false,\n                        validators: ['REQUIRED', 'MAX_PHONE_LENGTH'],\n                        errorMessages: ['This field is required!', 'Phone number must be of 7 digits']\n                    }\n                }\n            ],\n            validationRules: {\n                'REQUIRED': (value) => {\n                    if(value.length === 0) return false;\n                    return true;\n                },\n                'MAX_CODE_LENGTH': (value) => {\n                    if(value && value.length !== 3){\n                        return false;\n                    }\n                    return true;\n                },\n                'VALID_INPUT': (value) => {\n                    if(value && isNaN(value)){\n                        return false;\n                    }\n                    return true;\n                },\n                'MAX_PHONE_LENGTH': (value) => {\n                    if(value && value.length !== 7) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        centerSearchFilters: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Center',\n                placeholder: 'Search Center'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Center Type',\n                name: 'center_type',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'CAC',\n                        value: 'CAC'\n                    },\n                    {\n                        id: 3,\n                        name: 'Clinic',\n                        value: 'Clinic'\n                    },\n                    {\n                        id: 4,\n                        name: 'Hospital',\n                        value: 'Hospital'\n                    },\n                    {\n                        id: 5,\n                        name: 'Private',\n                        value: 'Private'\n                    }\n                ]\n            }\n        ],\n        appointmentsListing: [\n            {\n                id: 1,\n                type: 'search',\n                name: 'search',\n                label: 'Search Appointment',\n                placeholder: 'Search Appointment'\n            },\n            {\n                id: 2,\n                type: 'filter',\n                label: 'Status',\n                name: 'status',\n                items: [\n                    {\n                        id: 1,\n                        name: 'All',\n                        value: 'All'\n                    },\n                    {\n                        id: 2,\n                        name: 'Pending',\n                        value: 'pending'\n                    },\n                    {\n                        id: 3,\n                        name: 'Scheduled',\n                        value: 'scheduled'\n                    },\n                    {\n                        id: 4,\n                        name: 'Rescheduled',\n                        value: 'rescheduled'\n                    },\n                    {\n                        id: 5,\n                        name: 'Cancelled',\n                        value: 'cancelled'\n                    },\n                    {\n                        id: 6,\n                        name: 'Completed',\n                        value: 'completed'\n                    }\n                ]\n            }\n        ]\n    }\n    export const tabsCounselorData = \n    {\n        client: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n        center: [\n            {\n                id: 1,\n                name: \"Details\"\n            },\n            {\n                id: 4,\n                name: \"Clients\"\n            },\n            {\n                id: 5,\n                name: \"Appointments\"\n            }\n        ],\n    }","import moment from 'moment';\nimport { formatTime } from './utils';\nexport function formatCenters(data) {\n    let response = [];\n    const meta = {\n        centerId: \"Center ID\",\n        name: \"Full Name\",\n        email: \"Email\",\n        phoneNumber: \"Phone Number\",\n        state: \"State\",\n        centerType: \"Center Type\",\n        // verified: \"Status\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        // data.map((item) => {\n        //     response.push(formatData(item))\n        // })\n        data.forEach(item => {\n            response.push(formatData(item))\n        })\n    }\n    else {\n        response.push(formatData(data))\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatCounsellor (data) {\n    let response = [];\n    const meta = {\n        counsellorId: \"Provider ID\",\n        name: \"Full Name\",\n        email: \"Email ID\",\n        phoneNumber: \"Phone Number\",\n        dateCreated: \"Date Created\",\n\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item && item.user && item.user.username,\n                name: item.name,\n                email: item.email,\n                phoneNumber: item.phone_number.toString(),\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data && data.user && data.user.username,\n            name: data.name,\n            email: data.email,\n            phoneNumber: data.phone_number,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response[\"meta\"] = meta\n    return response;\n}\n\nexport function formatClient (data) {\n    let response = [];\n    const meta = {\n        clientId: \"Client ID\",\n        name: \"Record Name\",\n        age: \"Age\",\n        gender_bio: \"Gender\",\n        gender_id: \"Gender ID\",\n        ethnicity: \"Ethnicity\",\n        status: \"Status\",\n        dateCreated: \"Date Created\",\n    }\n    if (Array.isArray(data)) {\n        data.forEach((item) => {\n            const obj = {\n                id: item.client_id,\n                name: item.name,\n                age: item.age,\n                gender_bio: item.gender_bio,\n                gender_id: item.gender_identified,\n                ethnicity: item.ethnicity,\n                status: item.status,\n                createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n            };\n            response.push(obj)\n        })\n    }\n    else {\n        const obj = {\n            id: data.id,\n            name: data.name,\n            age: data.age,\n            gender_bio: data.gender_bio,\n            gender_id: data.gender_identified,\n            status: data.status,\n            createdAt: moment(data.createdAt).format('DD MMMM, YYYY')\n        };\n        response.push(obj)\n    }\n    response['meta'] = meta\n    return response;\n}\n\nexport function formatSession(data, type=null) {\n    let response = [];\n    let meta\n    if (type && type !== 'provider') {\n        meta = {\n            counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    } else {\n        meta = {\n            // counsellor_name: \"Provider Name\",\n            caseId: \"Case ID\",\n            sessionId: \"Session ID\",\n            scheduledAt: \"Scheduled At\",\n            duration: \"Duration\",\n            status: \"Status\"\n    \n        }\n        data.forEach((item) => {\n            const obj = {\n                // counsellor_name: item && item.counsellor && item.counsellor.name,\n                caseId: item.case_id,\n                sessionId: item.session_id,\n                scheduledAt: moment(item.scheduled_at).format('LLL'),\n                duration: formatTime(item.duration),\n                status: item.status\n            };\n            response.push(obj)\n        })\n    }\n    \n    response['meta']= meta\n    return response;\n}\n\nexport function formatDetails(data) {\n    let icon = 'http://localhost:1337'+data[(data.role.name).toLowerCase()].logo_image\n\n    const response = {\n        UserID: data.username,\n        name: getName(data),\n        phoneNumber: data[(data.role.name).toLowerCase()].phone_number,\n        // username: data.username,\n        email: data.email,\n        verified: data.confirmed,\n        logo:icon,\n        date_created: moment(data.createdAt).format('DD MMMM, YYYY'),\n        role: data.role.name\n    };\n\n    return response\n}\n\nfunction formatData(item) {\n    console.log(item.user?.username)\n    const obj = {\n        centerId: item.id,\n        id: item.user?.username,\n        name: item.name,\n        email: item.email,\n        phoneNumber: item.phone_number,\n        // firstName: item.first_name,\n        // lastName: item.last_name,\n        // country: item.country,\n        state: item.state?.name,\n        // city: item.city,\n        // postalCode: item.postal_code,\n        // areaCode: item.area_code,\n        centerType: item.center_type?.name,\n        // verified: item.is_verified,\n        // address: getAddress(item.street_address, item.street_address2),\n        createdAt: moment(item.createdAt).format('DD MMMM, YYYY')\n    };\n\n    return obj\n}\n\n// function getAddress(address1, address2) {\n//     let fullAddress = address1 + ' ' + address2\n//     return fullAddress\n// }\n\nfunction getName(data) {\n    let fullName = ''\n    switch (data.role.name) {\n        case \"Center\":\n            fullName = data.center && data.center.name ? data.center.name : ''\n            break;\n        case \"Counsellor\":\n            fullName = data.counsellor && data.counsellor.name ? data.counsellor.name : ''\n            break;\n        case \"Client\":\n            fullName = data.client && data.client.name ? data.client.name: ''\n            break;\n        case \"Admin\":\n            fullName = data.profile && data.profile.first_name ? data.profile.first_name + data.profile.last_name : ''\n            break;\n        default:\n            fullName = \"NIL\"\n            break;\n    }\n    return fullName\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import React, { Fragment, useEffect, useState } from 'react'\nimport { Grid } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport './Clinicians.css'\n\nimport Box from '@mui/material/Box'\nimport Tab from '@mui/material/Tab'\nimport TabContext from '@mui/lab/TabContext'\nimport TabList from '@mui/lab/TabList'\nimport TabPanel from '@mui/lab/TabPanel'\nimport useAuth from 'app/hooks/useAuth'\n\nimport { ProfileCard, Breadcrumb, SearchInput } from 'app/components'\n\nimport { tabsData } from 'app/constants/data'\n\nimport { styled } from '@mui/system'\nimport { fetchClinicianDetails } from 'app/services/counselorService'\nimport UsersCustomTable from 'app/components/UsersCustomTable/UsersCustomTable'\nimport { formatClient, formatSession } from 'app/utils/data.formater'\nimport SessionModal from 'app/components/SessionModal/SessionModal';\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst CliniciansDetails = (props) => {\n    const [loading, setLoading] = useState(false)\n    const [value, setValue] = useState('1')\n    const [clinicianData,setClinicianData] = useState({})\n    const tab = tabsData.clinician\n    //Edit button function\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n    const [clientData, setClientData] = useState('')\n    const [ page, setPage] = useState(0)\n    const [ appointmentPage, setAppointmentPage] = useState(0)\n    const rowsPerPage = 10\n    const [values, setValues] = useState({\n        center: '',\n        counsellor: '',\n        client: '',\n        appointment: '',\n    })\n    const [searchedData, setSearchedData] = useState({\n        center: [],\n        counsellor: [],\n        client: [],\n        appointment: [],\n    })\n    const [appointmentData, setAppointmentData] = useState('')\n    const [searchResult, setSearchResult] = useState(false)\n    const [openModal, setOpenModal] = useState(false);\n    const [msg, setMsg] = useState('');\n\n    const id = window.location.href.split('/').pop();\n    const navigate = useNavigate()\n\n    const {user} = useAuth()\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        // navigate(`/users/editCenter?id=${centerData.id}`)\n        setAnchorEl(null)\n    }\n\n    const handlePageChange = (event, newPage) => {\n        setPage(newPage)\n    }\n    const handleAppointmentPageChange = (event, newPage) => {\n        setAppointmentPage(newPage)\n    }\n    const handleEdit = (id) => {\n        navigate(`/counsellors/edit?id=${clinicianData.id}`)\n        setAnchorEl(null)\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    function getTraumaCodes(data) {\n        let traumaCode = ''\n        const code = data.map((item) => {\n            return item.trauma_code\n        })\n        traumaCode = code.join(', ')\n        return traumaCode\n    }\n\n    const handleBlur = (prop) => (e) => {\n        let value = e.target.value\n        setValues({ ...values, [prop]: value })\n        if (value && value.length > 2) {\n            let searchData\n            if (prop && prop === 'client') {\n                searchData = clientData.filter((item) => {\n                    return item.name.toLowerCase().includes(value.toLowerCase()) || item.id.toLowerCase().includes(value.toLowerCase()) || item.status.toLowerCase().includes(value.toLowerCase()) || item.gender_bio.toLowerCase().includes(value.toLowerCase())\n                })\n                searchData['meta'] = clientData.meta\n            } else if (prop && prop === 'appointment') {\n                searchData = appointmentData.filter((item) => {\n                    return item.caseId.includes(value) || item.sessionId?.includes(value) || item.status.toLowerCase().includes(value)\n                })\n                searchData['meta'] = appointmentData.meta\n            }\n\n            setSearchResult(true)\n            setSearchedData({ ...searchedData, [prop]: searchData })\n        } if (value.length === 0) {\n            setSearchResult(false)\n        }\n    }\n    const Client = () => {\n        return (\n            <>\n                <SearchInput\n                    placeholder=\"Search Client\"\n                    value={values.client}\n                    handleBlur={handleBlur('client')}\n                />\n                <UsersCustomTable\n                    role=\"Client\"\n                    rows={\n                        searchResult && values.client !== ''\n                            ? searchedData.client\n                            : clientData\n                    }\n                    page={page}\n                    handleChangePage={handlePageChange}\n                    rowsPerPage={rowsPerPage}\n                />\n            </>\n        )\n    }\n\n    const Appointment = () => {\n        return (\n            <>\n                <SearchInput\n                    placeholder=\"Search Appointment\"\n                    value={values.appointment}\n                    handleBlur={handleBlur('appointment')}\n                />\n                <UsersCustomTable\n                    role=\"Session\"\n                    rows={\n                        searchResult && values.appointment !== ''\n                            ? searchedData.appointment\n                            : appointmentData\n                    }\n                    page={appointmentPage}\n                    handleChangePage={handleAppointmentPageChange}\n                    rowsPerPage={rowsPerPage}\n                />\n            </>\n        )\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        fetchClinicianDetails(id)\n        .then((res) => {     \n            setLoading(false)\n            if(res?.error?.name === 'UnauthorizedError'){\n                setOpenModal(true);\n                setMsg('Your session has expired. You will be logged out.');\n            } else {\n                setClinicianData(res)\n                setClientData(formatClient(res.clients))\n                setAppointmentData(formatSession(res.sessions, 'provider'));\n            }\n        })\n        .catch(console.error)\n    }, [id]);\n\n    return (\n        <Container>\n            <Breadcrumb\n                routeSegments={[\n                    { name: 'Providers', path: '/clinicians' },\n                    { name: 'Provider Details' },\n                ]}\n            />\n            {!loading && clinicianData && (\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList\n                            onChange={handleChange}\n                            aria-label=\"User Details Segement\"\n                        >\n                            {tab.map((item, index) => (\n                                <Tab\n                                    label={item.name}\n                                    value={item.id.toString()}\n                                    key={index}\n                                />\n                            ))}\n                        </TabList>\n                    </Box>\n                    {tab &&\n                        tab.map((item, index) => {\n                            return (\n                                <TabPanel\n                                    value={item.id.toString()}\n                                    key={index}\n                                >\n                                    {item.id === 1 ? (\n                                        <ProfileCard\n                                            title={clinicianData.name}\n                                            subtitle={'Provider'}\n                                            icon={clinicianData.logo_image}\n                                            action={true}\n                                            userRole={user.role.type}\n                                            anchorEl={anchorEl}\n                                            open={open}\n                                            handleClick={handleClick}\n                                            handleClose={handleClose}\n                                            navigateTo={handleEdit}\n                                        >\n                                            <Box\n                                                sx={{\n                                                    borderTop: 1,\n                                                    paddingTop: 1,\n                                                    paddingBottom: 1,\n                                                    borderColor: 'divider',\n                                                }}\n                                            >\n                                                <Grid container>\n                                                    <Grid item xs={6}>\n                                                        ID\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        {clinicianData.user?.username}\n                                                    </Grid>\n                                                </Grid>\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    borderTop: 1,\n                                                    paddingTop: 1,\n                                                    paddingBottom: 1,\n                                                    borderColor: 'divider',\n                                                }}\n                                            >\n                                                <Grid container>\n                                                    <Grid item xs={6}>\n                                                        Professional Name\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        {clinicianData.name}\n                                                    </Grid>\n                                                </Grid>\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    borderTop: 1,\n                                                    paddingTop: 1,\n                                                    paddingBottom: 1,\n                                                    borderColor: 'divider',\n                                                }}\n                                            >\n                                                <Grid container>\n                                                    <Grid item xs={6}>\n                                                        Email\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        {clinicianData.email}\n                                                    </Grid>\n                                                </Grid>\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    borderTop: 1,\n                                                    paddingTop: 1,\n                                                    paddingBottom: 1,\n                                                    borderColor: 'divider',\n                                                }}\n                                            >\n                                                <Grid container>\n                                                    <Grid item xs={6}>\n                                                        Phone Number\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        {clinicianData.area_code +\n                                                            '-' +\n                                                            clinicianData.phone_number}\n                                                    </Grid>\n                                                </Grid>\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    borderTop: 1,\n                                                    paddingTop: 1,\n                                                    paddingBottom: 1,\n                                                    borderColor: 'divider',\n                                                }}\n                                            >\n                                                <Grid container>\n                                                    <Grid item xs={6}>\n                                                        Trauma Codes\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        {clinicianData.traumas &&\n                                                        clinicianData.traumas\n                                                            .length > 0\n                                                            ? getTraumaCodes(\n                                                                  clinicianData?.traumas\n                                                              )\n                                                            : '-'}\n                                                    </Grid>\n                                                </Grid>\n                                            </Box>\n                                        </ProfileCard>\n                                    ) : item.id === 2 ? (\n                                        <Client />\n                                    ) : item.id === 3 ? (\n                                        <Appointment />\n                                    ) : (\n                                        <></>\n                                    )}\n                                </TabPanel>\n                            )\n                        })}\n                </TabContext>\n            )}\n            <SessionModal\n                open={openModal}\n                text={msg}\n                onConfirmDialogClose={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n                onYesClick={() => {\n                    setMsg('');\n                    setOpenModal(false);\n                }}\n            />\n        </Container>\n    )\n}\n\nexport default CliniciansDetails\n"],"sourceRoot":""}